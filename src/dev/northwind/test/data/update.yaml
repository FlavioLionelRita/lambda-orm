name: update
data:
  a:
    id: 7
    customerId: ANATR
    employeeId: 7
    orderDate: '1996-09-17T22:00:00.000Z'
    requiredDate: '1996-10-15T22:00:00.000Z'
    shippedDate: '1996-09-23T22:00:00.000Z'
    shipViaId: 3
    freight: '1.6100'
    name: Ana Trujillo Emparedados y helados
    address: Avda. de la Constitución 2222
    city: Mexico D.F.
    region: null
    postalCode: '5021'
    country: Mexico
    details:
      - orderId: 7
        productId: 69
        unitPrice: '28.8000'
        quantity: '1.0000'
        discount: '0.0000'
      - orderId: 7
        productId: 70
        unitPrice: '12.0000'
        quantity: '5.0000'
        discount: '0.0000'
  b:
    entity:
      id: 8
      customerId: ANATR
      employeeId: 3
      orderDate: '1997-08-07T22:00:00.000Z'
      requiredDate: '1997-09-04T22:00:00.000Z'
      shippedDate: '1997-08-13T22:00:00.000Z'
      shipViaId: 1
      freight: '43.9000'
      name: Ana Trujillo Emparedados y helados
      address: Avda. de la Constitución 2222
      city: Mexico D.F.
      region: null
      postalCode: '5021'
      country: Mexico
      details:
        - orderId: 8
          productId: 14
          unitPrice: '23.2500'
          quantity: '3.0000'
          discount: '0.0000'
        - orderId: 8
          productId: 42
          unitPrice: '14.0000'
          quantity: 'errors: 15.0000'
          discount: '0.0000'
        - orderId: 8
          productId: 60
          unitPrice: '34.0000'
          quantity: '10.0000'
          discount: '0.0000'
  c:
    postalCode: xxx
  d:
    id: ALFKI
    name: Alfreds Futterkiste
    contact: Maria Anders
    phone: Sales Representative
    address: Obere Str. 57
    city: Berlin
    region: null
    postalCode: '12209'
    country: Germany
    orders:
      - id: 1
        customerId: ALFKI
        employeeId: 6
        orderDate: '1997-08-24T22:00:00.000Z'
        requiredDate: '1997-09-21T22:00:00.000Z'
        shippedDate: '1997-09-01T22:00:00.000Z'
        shipViaId: 1
        freight: '29.4600'
        name: Alfreds Futterkiste
        address: Obere Str. 57
        city: Berlin
        region: null
        postalCode: '12209'
        country: Germany
        details:
          - orderId: 1
            productId: 28
            unitPrice: '45.6000'
            quantity: '15.0000'
            discount: '0.0000'
          - orderId: 1
            productId: 39
            unitPrice: '18.0000'
            quantity: '21.0000'
            discount: '0.0000'
          - orderId: 1
            productId: 46
            unitPrice: '12.0000'
            quantity: '2.0000'
            discount: '0.0000'
      - id: 2
        customerId: ALFKI
        employeeId: 4
        orderDate: '1997-10-02T22:00:00.000Z'
        requiredDate: '1997-10-30T23:00:00.000Z'
        shippedDate: '1997-10-12T22:00:00.000Z'
        shipViaId: 2
        freight: '61.0200'
        name: Alfred-s Futterkiste
        address: Obere Str. 57
        city: Berlin
        region: null
        postalCode: '12209'
        country: Germany
        details:
          - orderId: 2
            productId: 63
            unitPrice: '43.9000'
            quantity: '20.0000'
            discount: '0.0000'
      - id: 3
        customerId: ALFKI
        employeeId: 4
        orderDate: '1997-10-12T22:00:00.000Z'
        requiredDate: '1997-11-23T23:00:00.000Z'
        shippedDate: '1997-10-20T22:00:00.000Z'
        shipViaId: 1
        freight: '23.9400'
        name: Alfred-s Futterkiste
        address: Obere Str. 57
        city: Berlin
        region: null
        postalCode: '12209'
        country: Germany
        details:
          - orderId: 3
            productId: 3
            unitPrice: '10.0000'
            quantity: '6.0000'
            discount: '0.0000'
          - orderId: 3
            productId: 76
            unitPrice: '18.0000'
            quantity: '15.0000'
            discount: '0.0000'
      - id: 4
        customerId: ALFKI
        employeeId: 1
        orderDate: '1998-01-14T23:00:00.000Z'
        requiredDate: '1998-02-11T23:00:00.000Z'
        shippedDate: '1998-01-20T23:00:00.000Z'
        shipViaId: 3
        freight: '69.5300'
        name: Alfred-s Futterkiste
        address: Obere Str. 57
        city: Berlin
        region: null
        postalCode: '12209'
        country: Germany
        details:
          - orderId: 4
            productId: 59
            unitPrice: '55.0000'
            quantity: '15.0000'
            discount: '0.0000'
          - orderId: 4
            productId: 77
            unitPrice: '13.0000'
            quantity: '2.0000'
            discount: '0.0000'
      - id: 5
        customerId: ALFKI
        employeeId: 1
        orderDate: '1998-03-15T23:00:00.000Z'
        requiredDate: '1998-04-26T22:00:00.000Z'
        shippedDate: '1998-03-23T23:00:00.000Z'
        shipViaId: 1
        freight: '40.4200'
        name: Alfred-s Futterkiste
        address: Obere Str. 57
        city: Berlin
        region: null
        postalCode: '12209'
        country: Germany
        details:
          - orderId: 5
            productId: 6
            unitPrice: '25.0000'
            quantity: '16.0000'
            discount: '0.0000'
          - orderId: 5
            productId: 28
            unitPrice: '45.6000'
            quantity: '2.0000'
            discount: '0.0000'
      - id: 6
        customerId: ALFKI
        employeeId: 3
        orderDate: '1998-04-08T22:00:00.000Z'
        requiredDate: '1998-05-06T22:00:00.000Z'
        shippedDate: '1998-04-12T22:00:00.000Z'
        shipViaId: 1
        freight: '1.2100'
        name: Alfred-s Futterkiste
        address: Obere Str. 57
        city: Berlin
        region: null
        postalCode: '12209'
        country: Germany
        details:
          - orderId: 6
            productId: 58
            unitPrice: '13.2500'
            quantity: '40.0000'
            discount: '0.0000'
          - orderId: 6
            productId: 71
            unitPrice: '21.5000'
            quantity: '20.0000'
            discount: '0.0000'
test:
  - name: update 1
    data: a
    sentences:
      - stage: MySQL
        info:
          entity: Orders
          dialect: MySQL
          source: MySQL
          sentence: >-
            UPDATE Orders o SET CustomerID = ?,EmployeeID = ?,OrderDate =
            ?,RequiredDate = ?,ShippedDate = ?,ShipVia = ?,Freight = ?,ShipName
            = ?,ShipAddress = ?,ShipCity = ?,ShipRegion = ?,ShipPostalCode =
            ?,ShipCountry = ? WHERE o.OrderID = ? 
      - stage: MariaDB
        info:
          entity: Orders
          dialect: MariaDB
          source: MariaDB
          sentence: >-
            UPDATE Orders o SET CustomerID = ?,EmployeeID = ?,OrderDate =
            ?,RequiredDate = ?,ShippedDate = ?,ShipVia = ?,Freight = ?,ShipName
            = ?,ShipAddress = ?,ShipCity = ?,ShipRegion = ?,ShipPostalCode =
            ?,ShipCountry = ? WHERE o.OrderID = ? 
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            UPDATE Orders o SET CustomerID = $1,EmployeeID = $2,OrderDate =
            $3,RequiredDate = $4,ShippedDate = $5,ShipVia = $6,Freight =
            $7,ShipName = $8,ShipAddress = $9,ShipCity = $10,ShipRegion =
            $11,ShipPostalCode = $12,ShipCountry = $13 WHERE o.OrderID = $14 
      - stage: SqlServer
        info:
          entity: Orders
          dialect: SqlServer
          source: SqlServer
          sentence: >-
            UPDATE o SET CustomerID = @customerId,EmployeeID =
            @employeeId,OrderDate = @orderDate,RequiredDate =
            @requiredDate,ShippedDate = @shippedDate,ShipVia =
            @shipViaId,Freight = @freight,ShipName = @name,ShipAddress =
            @address,ShipCity = @city,ShipRegion = @region,ShipPostalCode =
            @postalCode,ShipCountry = @country FROM Orders o WHERE o.OrderID =
            @id 
      - stage: MongoDB
        info:
          entity: Orders
          dialect: MongoDB
          source: MongoDB
          sentence: >-
            {"set":"{\"CustomerID\":\"$customerId$\",\"EmployeeID\":\"$employeeId$\",\"OrderDate\":\"$orderDate$\",\"RequiredDate\":\"$requiredDate$\",\"ShippedDate\":\"$shippedDate$\",\"ShipVia\":\"$shipViaId$\",\"Freight\":\"$freight$\",\"ShipName\":\"$name$\",\"ShipAddress\":\"$address$\",\"ShipCity\":\"$city$\",\"ShipRegion\":\"$region$\",\"ShipPostalCode\":\"$postalCode$\",\"ShipCountry\":\"$country$\"}","filter":"{\"_id\":\"$id$\"}"}
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: >-
            UPDATE Orders o SET CustomerID = :customerId,EmployeeID =
            :employeeId,OrderDate = :orderDate,RequiredDate =
            :requiredDate,ShippedDate = :shippedDate,ShipVia =
            :shipViaId,Freight = :freight,ShipName = :name,ShipAddress =
            :address,ShipCity = :city,ShipRegion = :region,ShipPostalCode =
            :postalCode,ShipCountry = :country WHERE o.OrderID = :id 
    errors: 0
    expression: Orders.update()
    normalizeExpression: >-
      Orders.update(p=>{customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country}).filter(p=>(p.id==id))
    model:
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
    parameters:
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: id
        type: integer
    constraints:
      entity: Orders
      constraints:
        - message: Cannot be null property customerId in entity Orders
          condition: isNotNull(customerId)
        - message: Cannot be null property employeeId in entity Orders
          condition: isNotNull(employeeId)
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 14
      name: update
      children: []
      type: any
      entity: Orders
      columns:
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
      parameters:
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: id
          type: integer
      constraints:
        - message: Cannot be null property customerId in entity Orders
          condition: isNotNull(customerId)
        - message: Cannot be null property employeeId in entity Orders
          condition: isNotNull(employeeId)
      values: []
      defaults: []
      clause: update
      alias: o
    executions:
      - stage: MySQL
      - stage: MariaDB
      - stage: PostgreSQL
      - stage: SqlServer
      - stage: MongoDB
      - stage: Oracle
    result:
      data:
        id: 7
        customerId: ANATR
        employeeId: 7
        orderDate: '1996-09-17T22:00:00.000Z'
        requiredDate: '1996-10-15T22:00:00.000Z'
        shippedDate: '1996-09-23T22:00:00.000Z'
        shipViaId: 3
        freight: '1.6100'
        name: Ana Trujillo Emparedados y helados
        address: Avda. de la Constitución 2222
        city: Mexico D.F.
        region: null
        postalCode: '5021'
        country: Mexico
        details:
          - orderId: 7
            productId: 69
            unitPrice: '28.8000'
            quantity: '1.0000'
            discount: '0.0000'
          - orderId: 7
            productId: 70
            unitPrice: '12.0000'
            quantity: '5.0000'
            discount: '0.0000'
  - name: update 2
    data: b
    sentences:
      - stage: MySQL
        info:
          entity: Orders
          dialect: MySQL
          source: MySQL
          sentence: >-
            UPDATE Orders o SET CustomerID = ?,EmployeeID = ?,OrderDate =
            ?,RequiredDate = ?,ShippedDate = ?,ShipVia = ?,Freight = ?,ShipName
            = ?,ShipAddress = ?,ShipCity = ?,ShipRegion = ?,ShipPostalCode =
            ?,ShipCountry = ? WHERE o.OrderID = ? 
      - stage: MariaDB
        info:
          entity: Orders
          dialect: MariaDB
          source: MariaDB
          sentence: >-
            UPDATE Orders o SET CustomerID = ?,EmployeeID = ?,OrderDate =
            ?,RequiredDate = ?,ShippedDate = ?,ShipVia = ?,Freight = ?,ShipName
            = ?,ShipAddress = ?,ShipCity = ?,ShipRegion = ?,ShipPostalCode =
            ?,ShipCountry = ? WHERE o.OrderID = ? 
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            UPDATE Orders o SET CustomerID = $1,EmployeeID = $2,OrderDate =
            $3,RequiredDate = $4,ShippedDate = $5,ShipVia = $6,Freight =
            $7,ShipName = $8,ShipAddress = $9,ShipCity = $10,ShipRegion =
            $11,ShipPostalCode = $12,ShipCountry = $13 WHERE o.OrderID = $14 
      - stage: SqlServer
        info:
          entity: Orders
          dialect: SqlServer
          source: SqlServer
          sentence: >-
            UPDATE o SET CustomerID = @entity_customerId,EmployeeID =
            @entity_employeeId,OrderDate = @entity_orderDate,RequiredDate =
            @entity_requiredDate,ShippedDate = @entity_shippedDate,ShipVia =
            @entity_shipViaId,Freight = @entity_freight,ShipName =
            @entity_name,ShipAddress = @entity_address,ShipCity =
            @entity_city,ShipRegion = @entity_region,ShipPostalCode =
            @entity_postalCode,ShipCountry = @entity_country FROM Orders o WHERE
            o.OrderID = @entity_id 
      - stage: MongoDB
        info:
          entity: Orders
          dialect: MongoDB
          source: MongoDB
          sentence: >-
            {"set":"{\"CustomerID\":\"$entity_customerId$\",\"EmployeeID\":\"$entity_employeeId$\",\"OrderDate\":\"$entity_orderDate$\",\"RequiredDate\":\"$entity_requiredDate$\",\"ShippedDate\":\"$entity_shippedDate$\",\"ShipVia\":\"$entity_shipViaId$\",\"Freight\":\"$entity_freight$\",\"ShipName\":\"$entity_name$\",\"ShipAddress\":\"$entity_address$\",\"ShipCity\":\"$entity_city$\",\"ShipRegion\":\"$entity_region$\",\"ShipPostalCode\":\"$entity_postalCode$\",\"ShipCountry\":\"$entity_country$\"}","filter":"{\"_id\":\"$entity_id$\"}"}
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: >-
            UPDATE Orders o SET CustomerID = :entity_customerId,EmployeeID =
            :entity_employeeId,OrderDate = :entity_orderDate,RequiredDate =
            :entity_requiredDate,ShippedDate = :entity_shippedDate,ShipVia =
            :entity_shipViaId,Freight = :entity_freight,ShipName =
            :entity_name,ShipAddress = :entity_address,ShipCity =
            :entity_city,ShipRegion = :entity_region,ShipPostalCode =
            :entity_postalCode,ShipCountry = :entity_country WHERE o.OrderID =
            :entity_id 
    errors: 0
    expression: Orders.update(entity)
    normalizeExpression: >-
      Orders.update(p=>{customerId:entity.customerId,employeeId:entity.employeeId,orderDate:entity.orderDate,requiredDate:entity.requiredDate,shippedDate:entity.shippedDate,shipViaId:entity.shipViaId,freight:entity.freight,name:entity.name,address:entity.address,city:entity.city,region:entity.region,postalCode:entity.postalCode,country:entity.country}).filter(p=>(p.id==entity.id))
    model:
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
    parameters:
      - name: entity.customerId
        type: string
      - name: entity.employeeId
        type: integer
      - name: entity.orderDate
        type: dateTime
      - name: entity.requiredDate
        type: date
      - name: entity.shippedDate
        type: date
      - name: entity.shipViaId
        type: integer
      - name: entity.freight
        type: decimal
      - name: entity.name
        type: string
      - name: entity.address
        type: string
      - name: entity.city
        type: string
      - name: entity.region
        type: string
      - name: entity.postalCode
        type: string
      - name: entity.country
        type: string
      - name: entity.id
        type: integer
    constraints:
      entity: Orders
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 14
      name: update
      children: []
      type: any
      entity: Orders
      columns:
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
      parameters:
        - name: entity.customerId
          type: string
        - name: entity.employeeId
          type: integer
        - name: entity.orderDate
          type: dateTime
        - name: entity.requiredDate
          type: date
        - name: entity.shippedDate
          type: date
        - name: entity.shipViaId
          type: integer
        - name: entity.freight
          type: decimal
        - name: entity.name
          type: string
        - name: entity.address
          type: string
        - name: entity.city
          type: string
        - name: entity.region
          type: string
        - name: entity.postalCode
          type: string
        - name: entity.country
          type: string
        - name: entity.id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: update
      alias: o
    executions:
      - stage: MySQL
      - stage: MariaDB
      - stage: PostgreSQL
      - stage: SqlServer
      - stage: MongoDB
      - stage: Oracle
    result:
      data:
        entity:
          id: 8
          customerId: ANATR
          employeeId: 3
          orderDate: '1997-08-07T22:00:00.000Z'
          requiredDate: '1997-09-04T22:00:00.000Z'
          shippedDate: '1997-08-13T22:00:00.000Z'
          shipViaId: 1
          freight: '43.9000'
          name: Ana Trujillo Emparedados y helados
          address: Avda. de la Constitución 2222
          city: Mexico D.F.
          region: null
          postalCode: '5021'
          country: Mexico
          details:
            - orderId: 8
              productId: 14
              unitPrice: '23.2500'
              quantity: '3.0000'
              discount: '0.0000'
            - orderId: 8
              productId: 42
              unitPrice: '14.0000'
              quantity: 'errors: 15.0000'
              discount: '0.0000'
            - orderId: 8
              productId: 60
              unitPrice: '34.0000'
              quantity: '10.0000'
              discount: '0.0000'
  - name: update 3
    data: c
    sentences:
      - stage: MySQL
        info:
          entity: Orders
          dialect: MySQL
          source: MySQL
          sentence: 'UPDATE Orders o SET ShipPostalCode = ? '
      - stage: MariaDB
        info:
          entity: Orders
          dialect: MariaDB
          source: MariaDB
          sentence: 'UPDATE Orders o SET ShipPostalCode = ? '
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: 'UPDATE Orders o SET ShipPostalCode = $1 '
      - stage: SqlServer
        info:
          entity: Orders
          dialect: SqlServer
          source: SqlServer
          sentence: 'UPDATE o SET ShipPostalCode = @postalCode FROM Orders o '
      - stage: MongoDB
        info:
          entity: Orders
          dialect: MongoDB
          source: MongoDB
          sentence: '{"set":"{\"ShipPostalCode\":\"$postalCode$\"}","filter":"{}"}'
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: 'UPDATE Orders o SET ShipPostalCode = :postalCode '
    errors: 0
    expression: Orders.updateAll(() => [postalCode])
    normalizeExpression: Orders.update(=>{postalCode:postalCode})
    model:
      - name: postalCode
        type: string
    parameters:
      - name: postalCode
        type: string
    constraints:
      entity: Orders
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 17
      name: update
      children: []
      type: any
      entity: Orders
      columns:
        - name: postalCode
          type: string
      parameters:
        - name: postalCode
          type: string
      constraints: []
      values: []
      defaults: []
      clause: update
      alias: o
    executions:
      - stage: MySQL
      - stage: MariaDB
      - stage: PostgreSQL
      - stage: SqlServer
      - stage: MongoDB
      - stage: Oracle
    result:
      data:
        postalCode: xxx
  - name: update 4
    data: b
    sentences:
      - stage: MySQL
        info:
          entity: Orders
          dialect: MySQL
          source: MySQL
          sentence: 'UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? '
      - stage: MariaDB
        info:
          entity: Orders
          dialect: MariaDB
          source: MariaDB
          sentence: 'UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? '
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: 'UPDATE Orders o SET ShipName = $1 WHERE o.OrderID = $2 '
      - stage: SqlServer
        info:
          entity: Orders
          dialect: SqlServer
          source: SqlServer
          sentence: >-
            UPDATE o SET ShipName = @entity_name FROM Orders o WHERE o.OrderID =
            @entity_id 
      - stage: MongoDB
        info:
          entity: Orders
          dialect: MongoDB
          source: MongoDB
          sentence: >-
            {"set":"{\"ShipName\":\"$entity_name$\"}","filter":"{\"_id\":\"$entity_id$\"}"}
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: >-
            UPDATE Orders o SET ShipName = :entity_name WHERE o.OrderID =
            :entity_id 
    errors: 0
    expression: >-
      Orders.update(p => ({ name: entity.name })).filter(p => p.id ===
      entity.id)
    normalizeExpression: Orders.update(p=>{name:entity.name}).filter(p=>(p.id==entity.id))
    model:
      - name: name
        type: string
    parameters:
      - name: entity.name
        type: string
      - name: entity.id
        type: integer
    constraints:
      entity: Orders
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 51
      name: update
      children: []
      type: any
      entity: Orders
      columns:
        - name: name
          type: string
      parameters:
        - name: entity.name
          type: string
        - name: entity.id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: update
      alias: o
    executions:
      - stage: MySQL
      - stage: MariaDB
      - stage: PostgreSQL
      - stage: SqlServer
      - stage: MongoDB
      - stage: Oracle
    result:
      data:
        entity:
          id: 8
          customerId: ANATR
          employeeId: 3
          orderDate: '1997-08-07T22:00:00.000Z'
          requiredDate: '1997-09-04T22:00:00.000Z'
          shippedDate: '1997-08-13T22:00:00.000Z'
          shipViaId: 1
          freight: '43.9000'
          name: Ana Trujillo Emparedados y helados
          address: Avda. de la Constitución 2222
          city: Mexico D.F.
          region: null
          postalCode: '5021'
          country: Mexico
          details:
            - orderId: 8
              productId: 14
              unitPrice: '23.2500'
              quantity: '3.0000'
              discount: '0.0000'
            - orderId: 8
              productId: 42
              unitPrice: '14.0000'
              quantity: 'errors: 15.0000'
              discount: '0.0000'
            - orderId: 8
              productId: 60
              unitPrice: '34.0000'
              quantity: '10.0000'
              discount: '0.0000'
  - name: update 5
    data: b
    sentences:
      - stage: MySQL
        info:
          entity: Orders
          dialect: MySQL
          source: MySQL
          sentence: 'UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? '
          children:
            - entity: Orders.details
              dialect: MySQL
              source: MySQL
              sentence: >-
                UPDATE `Order Details` o1 SET OrderID = ?,ProductID =
                ?,UnitPrice = ?,Quantity = ?,Discount = ? WHERE (o1.OrderID = ?
                AND o1.ProductID = ?) 
      - stage: MariaDB
        info:
          entity: Orders
          dialect: MariaDB
          source: MariaDB
          sentence: 'UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? '
          children:
            - entity: Orders.details
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                UPDATE `Order Details` o1 SET OrderID = ?,ProductID =
                ?,UnitPrice = ?,Quantity = ?,Discount = ? WHERE (o1.OrderID = ?
                AND o1.ProductID = ?) 
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: 'UPDATE Orders o SET ShipName = $1 WHERE o.OrderID = $2 '
          children:
            - entity: Orders.details
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                UPDATE "Order Details" o1 SET OrderID = $1,ProductID =
                $2,UnitPrice = $3,Quantity = $4,Discount = $5 WHERE (o1.OrderID
                = $6 AND o1.ProductID = $7) 
      - stage: SqlServer
        info:
          entity: Orders
          dialect: SqlServer
          source: SqlServer
          sentence: >-
            UPDATE o SET ShipName = @entity_name FROM Orders o WHERE o.OrderID =
            @entity_id 
          children:
            - entity: Orders.details
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                UPDATE o1 SET OrderID = @orderId,ProductID =
                @productId,UnitPrice = @unitPrice,Quantity = @quantity,Discount
                = @discount FROM [Order Details] o1 WHERE (o1.OrderID = @orderId
                AND o1.ProductID = @productId) 
      - stage: MongoDB
        info:
          entity: Orders
          dialect: MongoDB
          source: MongoDB
          sentence: >-
            {"set":"{\"ShipName\":\"$entity_name$\"}","filter":"{\"_id\":\"$entity_id$\"}"}
          children:
            - entity: Orders.details
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                {"set":"{\"OrderID\":\"$orderId$\",\"ProductID\":\"$productId$\",\"UnitPrice\":\"$unitPrice$\",\"Quantity\":\"$quantity$\",\"Discount\":\"$discount$\"}","filter":"{\"$and\":[{\"OrderID\":\"$orderId$\"},{\"ProductID\":\"$productId$\"}]}"}
            - entity: Orders.details
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                {"set":"{\"OrderID\":\"$orderId$\",\"ProductID\":\"$productId$\",\"UnitPrice\":\"$unitPrice$\",\"Quantity\":\"$quantity$\",\"Discount\":\"$discount$\"}","filter":"{\"$and\":[{\"OrderID\":\"$orderId$\"},{\"ProductID\":\"$productId$\"}]}"}
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: >-
            UPDATE Orders o SET ShipName = :entity_name WHERE o.OrderID =
            :entity_id 
          children:
            - entity: Orders.details
              dialect: Oracle
              source: Oracle
              sentence: >-
                UPDATE "Order Details" o1 SET OrderID = :orderId,ProductID =
                :productId,UnitPrice = :unitPrice,Quantity = :quantity,Discount
                = :discount WHERE (o1.OrderID = :orderId AND o1.ProductID =
                :productId) 
    errors: 0
    expression: >-
      Orders.update(() => ({ name: entity.name })).include(p =>
      p.details).filter(p => p.id === entity.id)
    normalizeExpression: >-
      Orders.update(=>{name:entity.name}).filter(p=>(p.id==entity.id)).include(p=>p.details.update(p=>{orderId:orderId,productId:productId,unitPrice:unitPrice,quantity:quantity,discount:discount}).filter(p=>((p.orderId==orderId)&&(p.productId==productId))))
    model:
      - name: name
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
    parameters:
      - name: entity.name
        type: string
      - name: entity.id
        type: integer
      - name: details
        type: Orders.details
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Orders.details
          constraints:
            - message: Cannot be null property orderId in entity Orders.details
              condition: isNotNull(orderId)
            - message: Cannot be null property productId in entity Orders.details
              condition: isNotNull(productId)
            - message: Cannot be null property orderId in entity Orders.details
              condition: isNotNull(orderId)
            - message: Cannot be null property productId in entity Orders.details
              condition: isNotNull(productId)
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 76
      name: update
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 58
          name: update
          children: []
          type: any
          entity: Orders.details
          columns:
            - name: orderId
              type: integer
            - name: productId
              type: integer
            - name: unitPrice
              type: decimal
            - name: quantity
              type: decimal
            - name: discount
              type: decimal
          parameters:
            - name: orderId
              type: integer
            - name: productId
              type: integer
            - name: unitPrice
              type: decimal
            - name: quantity
              type: decimal
            - name: discount
              type: decimal
            - name: orderId
              type: integer
            - name: productId
              type: integer
          constraints:
            - message: Cannot be null property orderId in entity Orders.details
              condition: isNotNull(orderId)
            - message: Cannot be null property productId in entity Orders.details
              condition: isNotNull(productId)
            - message: Cannot be null property orderId in entity Orders.details
              condition: isNotNull(orderId)
            - message: Cannot be null property productId in entity Orders.details
              condition: isNotNull(productId)
          values: []
          defaults: []
          clause: update
          alias: o1
      type: any
      entity: Orders
      columns:
        - name: name
          type: string
      parameters:
        - name: entity.name
          type: string
        - name: entity.id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: update
      alias: o
    executions:
      - stage: MySQL
      - stage: MariaDB
      - stage: PostgreSQL
      - stage: SqlServer
      - stage: MongoDB
      - stage: Oracle
    result:
      data:
        entity:
          id: 8
          customerId: ANATR
          employeeId: 3
          orderDate: '1997-08-07T22:00:00.000Z'
          requiredDate: '1997-09-04T22:00:00.000Z'
          shippedDate: '1997-08-13T22:00:00.000Z'
          shipViaId: 1
          freight: '43.9000'
          name: Ana Trujillo Emparedados y helados
          address: Avda. de la Constitución 2222
          city: Mexico D.F.
          region: null
          postalCode: '5021'
          country: Mexico
          details:
            - orderId: 8
              productId: 14
              unitPrice: '23.2500'
              quantity: '3.0000'
              discount: '0.0000'
            - orderId: 8
              productId: 42
              unitPrice: '14.0000'
              quantity: 'errors: 15.0000'
              discount: '0.0000'
            - orderId: 8
              productId: 60
              unitPrice: '34.0000'
              quantity: '10.0000'
              discount: '0.0000'
  - name: update 6
    data: b
    sentences:
      - stage: MySQL
        info:
          entity: Orders
          dialect: MySQL
          source: MySQL
          sentence: 'UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? '
          children:
            - entity: Orders.details
              dialect: MySQL
              source: MySQL
              sentence: >-
                UPDATE `Order Details` o1 SET UnitPrice = ?,Quantity =
                ?,Discount = ? WHERE (o1.OrderID = ? AND o1.ProductID = ?) 
      - stage: MariaDB
        info:
          entity: Orders
          dialect: MariaDB
          source: MariaDB
          sentence: 'UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? '
          children:
            - entity: Orders.details
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                UPDATE `Order Details` o1 SET UnitPrice = ?,Quantity =
                ?,Discount = ? WHERE (o1.OrderID = ? AND o1.ProductID = ?) 
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: 'UPDATE Orders o SET ShipName = $1 WHERE o.OrderID = $2 '
          children:
            - entity: Orders.details
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                UPDATE "Order Details" o1 SET UnitPrice = $1,Quantity =
                $2,Discount = $3 WHERE (o1.OrderID = $4 AND o1.ProductID = $5) 
      - stage: SqlServer
        info:
          entity: Orders
          dialect: SqlServer
          source: SqlServer
          sentence: >-
            UPDATE o SET ShipName = @entity_name FROM Orders o WHERE o.OrderID =
            @entity_id 
          children:
            - entity: Orders.details
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                UPDATE o1 SET UnitPrice = @unitPrice,Quantity =
                @quantity,Discount = @discount FROM [Order Details] o1 WHERE
                (o1.OrderID = @orderId AND o1.ProductID = @productId) 
      - stage: MongoDB
        info:
          entity: Orders
          dialect: MongoDB
          source: MongoDB
          sentence: >-
            {"set":"{\"ShipName\":\"$entity_name$\"}","filter":"{\"_id\":\"$entity_id$\"}"}
          children:
            - entity: Orders.details
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                {"set":"{\"UnitPrice\":\"$unitPrice$\",\"Quantity\":\"$quantity$\",\"Discount\":\"$discount$\"}","filter":"{\"$and\":[{\"OrderID\":\"$orderId$\"},{\"ProductID\":\"$productId$\"}]}"}
            - entity: Orders.details
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                {"set":"{\"UnitPrice\":\"$unitPrice$\",\"Quantity\":\"$quantity$\",\"Discount\":\"$discount$\"}","filter":"{\"$and\":[{\"OrderID\":\"$orderId$\"},{\"ProductID\":\"$productId$\"}]}"}
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: >-
            UPDATE Orders o SET ShipName = :entity_name WHERE o.OrderID =
            :entity_id 
          children:
            - entity: Orders.details
              dialect: Oracle
              source: Oracle
              sentence: >-
                UPDATE "Order Details" o1 SET UnitPrice = :unitPrice,Quantity =
                :quantity,Discount = :discount WHERE (o1.OrderID = :orderId AND
                o1.ProductID = :productId) 
    errors: 0
    expression: >-
      Orders.update(() => ({ name: entity.name })).include(p =>
      p.details.update(p => p)).filter(p => p.id === entity.id)
    normalizeExpression: >-
      Orders.update(=>{name:entity.name}).filter(p=>(p.id==entity.id)).include(p=>p.details.update(p=>{unitPrice:unitPrice,quantity:quantity,discount:discount}).filter(p=>((p.orderId==orderId)&&(p.productId==productId))))
    model:
      - name: name
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
    parameters:
      - name: entity.name
        type: string
      - name: entity.id
        type: integer
      - name: details
        type: Orders.details
        children:
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
          - name: orderId
            type: integer
          - name: productId
            type: integer
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Orders.details
          constraints:
            - message: Cannot be null property orderId in entity Orders.details
              condition: isNotNull(orderId)
            - message: Cannot be null property productId in entity Orders.details
              condition: isNotNull(productId)
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 91
      name: update
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 75
          name: update
          children: []
          type: any
          entity: Orders.details
          columns:
            - name: unitPrice
              type: decimal
            - name: quantity
              type: decimal
            - name: discount
              type: decimal
          parameters:
            - name: unitPrice
              type: decimal
            - name: quantity
              type: decimal
            - name: discount
              type: decimal
            - name: orderId
              type: integer
            - name: productId
              type: integer
          constraints:
            - message: Cannot be null property orderId in entity Orders.details
              condition: isNotNull(orderId)
            - message: Cannot be null property productId in entity Orders.details
              condition: isNotNull(productId)
          values: []
          defaults: []
          clause: update
          alias: o1
      type: any
      entity: Orders
      columns:
        - name: name
          type: string
      parameters:
        - name: entity.name
          type: string
        - name: entity.id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: update
      alias: o
    executions:
      - stage: MySQL
      - stage: MariaDB
      - stage: PostgreSQL
      - stage: SqlServer
      - stage: MongoDB
      - stage: Oracle
    result:
      data:
        entity:
          id: 8
          customerId: ANATR
          employeeId: 3
          orderDate: '1997-08-07T22:00:00.000Z'
          requiredDate: '1997-09-04T22:00:00.000Z'
          shippedDate: '1997-08-13T22:00:00.000Z'
          shipViaId: 1
          freight: '43.9000'
          name: Ana Trujillo Emparedados y helados
          address: Avda. de la Constitución 2222
          city: Mexico D.F.
          region: null
          postalCode: '5021'
          country: Mexico
          details:
            - orderId: 8
              productId: 14
              unitPrice: '23.2500'
              quantity: '3.0000'
              discount: '0.0000'
            - orderId: 8
              productId: 42
              unitPrice: '14.0000'
              quantity: 'errors: 15.0000'
              discount: '0.0000'
            - orderId: 8
              productId: 60
              unitPrice: '34.0000'
              quantity: '10.0000'
              discount: '0.0000'
  - name: update 7
    data: b
    sentences:
      - stage: MySQL
        info:
          entity: Orders
          dialect: MySQL
          source: MySQL
          sentence: 'UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? '
          children:
            - entity: Orders.details
              dialect: MySQL
              source: MySQL
              sentence: >-
                UPDATE `Order Details` o1 SET UnitPrice = o1.UnitPrice,ProductID
                = o1.ProductID WHERE (o1.OrderID = ? AND o1.ProductID = ?) 
      - stage: MariaDB
        info:
          entity: Orders
          dialect: MariaDB
          source: MariaDB
          sentence: 'UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? '
          children:
            - entity: Orders.details
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                UPDATE `Order Details` o1 SET UnitPrice = o1.UnitPrice,ProductID
                = o1.ProductID WHERE (o1.OrderID = ? AND o1.ProductID = ?) 
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: 'UPDATE Orders o SET ShipName = $1 WHERE o.OrderID = $2 '
          children:
            - entity: Orders.details
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                UPDATE "Order Details" o1 SET UnitPrice = o1.UnitPrice,ProductID
                = o1.ProductID WHERE (o1.OrderID = $1 AND o1.ProductID = $2) 
      - stage: SqlServer
        info:
          entity: Orders
          dialect: SqlServer
          source: SqlServer
          sentence: >-
            UPDATE o SET ShipName = @entity_name FROM Orders o WHERE o.OrderID =
            @entity_id 
          children:
            - entity: Orders.details
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                UPDATE o1 SET UnitPrice = o1.UnitPrice,ProductID = o1.ProductID
                FROM [Order Details] o1 WHERE (o1.OrderID = @orderId AND
                o1.ProductID = @productId) 
      - stage: MongoDB
        info:
          entity: Orders
          dialect: MongoDB
          source: MongoDB
          sentence: >-
            {"set":"{\"ShipName\":\"$entity_name$\"}","filter":"{\"_id\":\"$entity_id$\"}"}
          children:
            - entity: Orders.details
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                {"set":"{\"UnitPrice\":\"UnitPrice\",\"ProductID\":\"ProductID\"}","filter":"{\"$and\":[{\"OrderID\":\"$orderId$\"},{\"ProductID\":\"$productId$\"}]}"}
            - entity: Orders.details
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                {"set":"{\"UnitPrice\":\"UnitPrice\",\"ProductID\":\"ProductID\"}","filter":"{\"$and\":[{\"OrderID\":\"$orderId$\"},{\"ProductID\":\"$productId$\"}]}"}
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: >-
            UPDATE Orders o SET ShipName = :entity_name WHERE o.OrderID =
            :entity_id 
          children:
            - entity: Orders.details
              dialect: Oracle
              source: Oracle
              sentence: >-
                UPDATE "Order Details" o1 SET UnitPrice = o1.UnitPrice,ProductID
                = o1.ProductID WHERE (o1.OrderID = :orderId AND o1.ProductID =
                :productId) 
    errors: 0
    expression: >-
      Orders.update(() => ({ name: entity.name })).include(p =>
      p.details.update(p => ({ unitPrice: p.unitPrice, productId: p.productId
      }))).filter(p => p.id === entity.id)
    normalizeExpression: >-
      Orders.update(=>{name:entity.name}).filter(p=>(p.id==entity.id)).include(p=>p.details.update(p=>{unitPrice:p.unitPrice,productId:p.productId}).filter(p=>((p.orderId==orderId)&&(p.productId==productId))))
    model:
      - name: name
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: unitPrice
            type: decimal
          - name: productId
            type: integer
    parameters:
      - name: entity.name
        type: string
      - name: entity.id
        type: integer
      - name: details
        type: Orders.details
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Orders.details
          constraints:
            - message: Cannot be null property orderId in entity Orders.details
              condition: isNotNull(orderId)
            - message: Cannot be null property productId in entity Orders.details
              condition: isNotNull(productId)
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 142
      name: update
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 75
          name: update
          children: []
          type: any
          entity: Orders.details
          columns:
            - name: unitPrice
              type: decimal
            - name: productId
              type: integer
          parameters:
            - name: orderId
              type: integer
            - name: productId
              type: integer
          constraints:
            - message: Cannot be null property orderId in entity Orders.details
              condition: isNotNull(orderId)
            - message: Cannot be null property productId in entity Orders.details
              condition: isNotNull(productId)
          values: []
          defaults: []
          clause: update
          alias: o1
      type: any
      entity: Orders
      columns:
        - name: name
          type: string
      parameters:
        - name: entity.name
          type: string
        - name: entity.id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: update
      alias: o
    executions:
      - stage: MySQL
      - stage: MariaDB
      - stage: PostgreSQL
      - stage: SqlServer
      - stage: MongoDB
      - stage: Oracle
    result:
      data:
        entity:
          id: 8
          customerId: ANATR
          employeeId: 3
          orderDate: '1997-08-07T22:00:00.000Z'
          requiredDate: '1997-09-04T22:00:00.000Z'
          shippedDate: '1997-08-13T22:00:00.000Z'
          shipViaId: 1
          freight: '43.9000'
          name: Ana Trujillo Emparedados y helados
          address: Avda. de la Constitución 2222
          city: Mexico D.F.
          region: null
          postalCode: '5021'
          country: Mexico
          details:
            - orderId: 8
              productId: 14
              unitPrice: '23.2500'
              quantity: '3.0000'
              discount: '0.0000'
            - orderId: 8
              productId: 42
              unitPrice: '14.0000'
              quantity: 'errors: 15.0000'
              discount: '0.0000'
            - orderId: 8
              productId: 60
              unitPrice: '34.0000'
              quantity: '10.0000'
              discount: '0.0000'
  - name: update 8
    data: a
    sentences:
      - stage: MySQL
        info:
          entity: Orders
          dialect: MySQL
          source: MySQL
          sentence: >-
            UPDATE Orders o SET CustomerID = ?,EmployeeID = ?,OrderDate =
            ?,RequiredDate = ?,ShippedDate = ?,ShipVia = ?,Freight = ?,ShipName
            = ?,ShipAddress = ?,ShipCity = ?,ShipRegion = ?,ShipPostalCode =
            ?,ShipCountry = ? WHERE o.OrderID = ? 
          children:
            - entity: Orders.details
              dialect: MySQL
              source: MySQL
              sentence: >-
                UPDATE `Order Details` o1 SET OrderID = ?,ProductID =
                ?,UnitPrice = ?,Quantity = ?,Discount = ? WHERE (o1.OrderID = ?
                AND o1.ProductID = ?) 
      - stage: MariaDB
        info:
          entity: Orders
          dialect: MariaDB
          source: MariaDB
          sentence: >-
            UPDATE Orders o SET CustomerID = ?,EmployeeID = ?,OrderDate =
            ?,RequiredDate = ?,ShippedDate = ?,ShipVia = ?,Freight = ?,ShipName
            = ?,ShipAddress = ?,ShipCity = ?,ShipRegion = ?,ShipPostalCode =
            ?,ShipCountry = ? WHERE o.OrderID = ? 
          children:
            - entity: Orders.details
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                UPDATE `Order Details` o1 SET OrderID = ?,ProductID =
                ?,UnitPrice = ?,Quantity = ?,Discount = ? WHERE (o1.OrderID = ?
                AND o1.ProductID = ?) 
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            UPDATE Orders o SET CustomerID = $1,EmployeeID = $2,OrderDate =
            $3,RequiredDate = $4,ShippedDate = $5,ShipVia = $6,Freight =
            $7,ShipName = $8,ShipAddress = $9,ShipCity = $10,ShipRegion =
            $11,ShipPostalCode = $12,ShipCountry = $13 WHERE o.OrderID = $14 
          children:
            - entity: Orders.details
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                UPDATE "Order Details" o1 SET OrderID = $1,ProductID =
                $2,UnitPrice = $3,Quantity = $4,Discount = $5 WHERE (o1.OrderID
                = $6 AND o1.ProductID = $7) 
      - stage: SqlServer
        info:
          entity: Orders
          dialect: SqlServer
          source: SqlServer
          sentence: >-
            UPDATE o SET CustomerID = @customerId,EmployeeID =
            @employeeId,OrderDate = @orderDate,RequiredDate =
            @requiredDate,ShippedDate = @shippedDate,ShipVia =
            @shipViaId,Freight = @freight,ShipName = @name,ShipAddress =
            @address,ShipCity = @city,ShipRegion = @region,ShipPostalCode =
            @postalCode,ShipCountry = @country FROM Orders o WHERE o.OrderID =
            @id 
          children:
            - entity: Orders.details
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                UPDATE o1 SET OrderID = @orderId,ProductID =
                @productId,UnitPrice = @unitPrice,Quantity = @quantity,Discount
                = @discount FROM [Order Details] o1 WHERE (o1.OrderID = @orderId
                AND o1.ProductID = @productId) 
      - stage: MongoDB
        info:
          entity: Orders
          dialect: MongoDB
          source: MongoDB
          sentence: >-
            {"set":"{\"CustomerID\":\"$customerId$\",\"EmployeeID\":\"$employeeId$\",\"OrderDate\":\"$orderDate$\",\"RequiredDate\":\"$requiredDate$\",\"ShippedDate\":\"$shippedDate$\",\"ShipVia\":\"$shipViaId$\",\"Freight\":\"$freight$\",\"ShipName\":\"$name$\",\"ShipAddress\":\"$address$\",\"ShipCity\":\"$city$\",\"ShipRegion\":\"$region$\",\"ShipPostalCode\":\"$postalCode$\",\"ShipCountry\":\"$country$\"}","filter":"{\"_id\":\"$id$\"}"}
          children:
            - entity: Orders.details
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                {"set":"{\"OrderID\":\"$orderId$\",\"ProductID\":\"$productId$\",\"UnitPrice\":\"$unitPrice$\",\"Quantity\":\"$quantity$\",\"Discount\":\"$discount$\"}","filter":"{\"$and\":[{\"OrderID\":\"$orderId$\"},{\"ProductID\":\"$productId$\"}]}"}
            - entity: Orders.details
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                {"set":"{\"OrderID\":\"$orderId$\",\"ProductID\":\"$productId$\",\"UnitPrice\":\"$unitPrice$\",\"Quantity\":\"$quantity$\",\"Discount\":\"$discount$\"}","filter":"{\"$and\":[{\"OrderID\":\"$orderId$\"},{\"ProductID\":\"$productId$\"}]}"}
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: >-
            UPDATE Orders o SET CustomerID = :customerId,EmployeeID =
            :employeeId,OrderDate = :orderDate,RequiredDate =
            :requiredDate,ShippedDate = :shippedDate,ShipVia =
            :shipViaId,Freight = :freight,ShipName = :name,ShipAddress =
            :address,ShipCity = :city,ShipRegion = :region,ShipPostalCode =
            :postalCode,ShipCountry = :country WHERE o.OrderID = :id 
          children:
            - entity: Orders.details
              dialect: Oracle
              source: Oracle
              sentence: >-
                UPDATE "Order Details" o1 SET OrderID = :orderId,ProductID =
                :productId,UnitPrice = :unitPrice,Quantity = :quantity,Discount
                = :discount WHERE (o1.OrderID = :orderId AND o1.ProductID =
                :productId) 
    errors: 0
    expression: Orders.update().include(p => p.details)
    normalizeExpression: >-
      Orders.update(p=>{customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country}).filter(p=>(p.id==id)).include(p=>p.details.update(p=>{orderId:orderId,productId:productId,unitPrice:unitPrice,quantity:quantity,discount:discount}).filter(p=>((p.orderId==orderId)&&(p.productId==productId))))
    model:
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
    parameters:
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: id
        type: integer
      - name: details
        type: Orders.details
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
    constraints:
      entity: Orders
      constraints:
        - message: Cannot be null property customerId in entity Orders
          condition: isNotNull(customerId)
        - message: Cannot be null property employeeId in entity Orders
          condition: isNotNull(employeeId)
      children:
        - entity: Orders.details
          constraints:
            - message: Cannot be null property orderId in entity Orders.details
              condition: isNotNull(orderId)
            - message: Cannot be null property productId in entity Orders.details
              condition: isNotNull(productId)
            - message: Cannot be null property orderId in entity Orders.details
              condition: isNotNull(orderId)
            - message: Cannot be null property productId in entity Orders.details
              condition: isNotNull(productId)
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 24
      name: update
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 29
          name: update
          children: []
          type: any
          entity: Orders.details
          columns:
            - name: orderId
              type: integer
            - name: productId
              type: integer
            - name: unitPrice
              type: decimal
            - name: quantity
              type: decimal
            - name: discount
              type: decimal
          parameters:
            - name: orderId
              type: integer
            - name: productId
              type: integer
            - name: unitPrice
              type: decimal
            - name: quantity
              type: decimal
            - name: discount
              type: decimal
            - name: orderId
              type: integer
            - name: productId
              type: integer
          constraints:
            - message: Cannot be null property orderId in entity Orders.details
              condition: isNotNull(orderId)
            - message: Cannot be null property productId in entity Orders.details
              condition: isNotNull(productId)
            - message: Cannot be null property orderId in entity Orders.details
              condition: isNotNull(orderId)
            - message: Cannot be null property productId in entity Orders.details
              condition: isNotNull(productId)
          values: []
          defaults: []
          clause: update
          alias: o1
      type: any
      entity: Orders
      columns:
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
      parameters:
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: id
          type: integer
      constraints:
        - message: Cannot be null property customerId in entity Orders
          condition: isNotNull(customerId)
        - message: Cannot be null property employeeId in entity Orders
          condition: isNotNull(employeeId)
      values: []
      defaults: []
      clause: update
      alias: o
    executions:
      - stage: MySQL
      - stage: MariaDB
      - stage: PostgreSQL
      - stage: SqlServer
      - stage: MongoDB
      - stage: Oracle
    result:
      data:
        id: 7
        customerId: ANATR
        employeeId: 7
        orderDate: '1996-09-17T22:00:00.000Z'
        requiredDate: '1996-10-15T22:00:00.000Z'
        shippedDate: '1996-09-23T22:00:00.000Z'
        shipViaId: 3
        freight: '1.6100'
        name: Ana Trujillo Emparedados y helados
        address: Avda. de la Constitución 2222
        city: Mexico D.F.
        region: null
        postalCode: '5021'
        country: Mexico
        details:
          - orderId: 7
            productId: 69
            unitPrice: '28.8000'
            quantity: '1.0000'
            discount: '0.0000'
          - orderId: 7
            productId: 70
            unitPrice: '12.0000'
            quantity: '5.0000'
            discount: '0.0000'
  - name: update 9
    data: d
    sentences:
      - stage: MySQL
        info:
          entity: Customers
          dialect: MySQL
          source: MySQL
          sentence: >-
            UPDATE Customers c SET CustomerID = ?,CompanyName = ?,ContactName =
            ?,ContactTitle = ?,Address = ?,City = ?,Region = ?,PostalCode =
            ?,Country = ? WHERE c.CustomerID = ? 
          children:
            - entity: Orders
              dialect: MySQL
              source: MySQL
              sentence: >-
                UPDATE Orders o SET CustomerID = ?,EmployeeID = ?,OrderDate =
                ?,RequiredDate = ?,ShippedDate = ?,ShipVia = ?,Freight =
                ?,ShipName = ?,ShipAddress = ?,ShipCity = ?,ShipRegion =
                ?,ShipPostalCode = ?,ShipCountry = ? WHERE o.OrderID = ? 
              children:
                - entity: Orders.details
                  dialect: MySQL
                  source: MySQL
                  sentence: >-
                    UPDATE `Order Details` o1 SET OrderID = ?,ProductID =
                    ?,UnitPrice = ?,Quantity = ?,Discount = ? WHERE (o1.OrderID
                    = ? AND o1.ProductID = ?) 
      - stage: MariaDB
        info:
          entity: Customers
          dialect: MariaDB
          source: MariaDB
          sentence: >-
            UPDATE Customers c SET CustomerID = ?,CompanyName = ?,ContactName =
            ?,ContactTitle = ?,Address = ?,City = ?,Region = ?,PostalCode =
            ?,Country = ? WHERE c.CustomerID = ? 
          children:
            - entity: Orders
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                UPDATE Orders o SET CustomerID = ?,EmployeeID = ?,OrderDate =
                ?,RequiredDate = ?,ShippedDate = ?,ShipVia = ?,Freight =
                ?,ShipName = ?,ShipAddress = ?,ShipCity = ?,ShipRegion =
                ?,ShipPostalCode = ?,ShipCountry = ? WHERE o.OrderID = ? 
              children:
                - entity: Orders.details
                  dialect: MariaDB
                  source: MariaDB
                  sentence: >-
                    UPDATE `Order Details` o1 SET OrderID = ?,ProductID =
                    ?,UnitPrice = ?,Quantity = ?,Discount = ? WHERE (o1.OrderID
                    = ? AND o1.ProductID = ?) 
      - stage: PostgreSQL
        info:
          entity: Customers
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            UPDATE Customers c SET CustomerID = $1,CompanyName = $2,ContactName
            = $3,ContactTitle = $4,Address = $5,City = $6,Region = $7,PostalCode
            = $8,Country = $9 WHERE c.CustomerID = $10 
          children:
            - entity: Orders
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                UPDATE Orders o SET CustomerID = $1,EmployeeID = $2,OrderDate =
                $3,RequiredDate = $4,ShippedDate = $5,ShipVia = $6,Freight =
                $7,ShipName = $8,ShipAddress = $9,ShipCity = $10,ShipRegion =
                $11,ShipPostalCode = $12,ShipCountry = $13 WHERE o.OrderID =
                $14 
              children:
                - entity: Orders.details
                  dialect: PostgreSQL
                  source: PostgreSQL
                  sentence: >-
                    UPDATE "Order Details" o1 SET OrderID = $1,ProductID =
                    $2,UnitPrice = $3,Quantity = $4,Discount = $5 WHERE
                    (o1.OrderID = $6 AND o1.ProductID = $7) 
      - stage: SqlServer
        info:
          entity: Customers
          dialect: SqlServer
          source: SqlServer
          sentence: >-
            UPDATE c SET CustomerID = @id,CompanyName = @name,ContactName =
            @contact,ContactTitle = @phone,Address = @address,City =
            @city,Region = @region,PostalCode = @postalCode,Country = @country
            FROM Customers c WHERE c.CustomerID = @id 
          children:
            - entity: Orders
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                UPDATE o SET CustomerID = @customerId,EmployeeID =
                @employeeId,OrderDate = @orderDate,RequiredDate =
                @requiredDate,ShippedDate = @shippedDate,ShipVia =
                @shipViaId,Freight = @freight,ShipName = @name,ShipAddress =
                @address,ShipCity = @city,ShipRegion = @region,ShipPostalCode =
                @postalCode,ShipCountry = @country FROM Orders o WHERE o.OrderID
                = @id 
              children:
                - entity: Orders.details
                  dialect: SqlServer
                  source: SqlServer
                  sentence: >-
                    UPDATE o1 SET OrderID = @orderId,ProductID =
                    @productId,UnitPrice = @unitPrice,Quantity =
                    @quantity,Discount = @discount FROM [Order Details] o1 WHERE
                    (o1.OrderID = @orderId AND o1.ProductID = @productId) 
      - stage: MongoDB
        info:
          entity: Customers
          dialect: MongoDB
          source: MongoDB
          sentence: >-
            {"set":"{\"_id\":\"$id$\",\"CompanyName\":\"$name$\",\"ContactName\":\"$contact$\",\"ContactTitle\":\"$phone$\",\"Address\":\"$address$\",\"City\":\"$city$\",\"Region\":\"$region$\",\"PostalCode\":\"$postalCode$\",\"Country\":\"$country$\"}","filter":"{\"_id\":\"$id$\"}"}
          children:
            - entity: Orders
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                {"set":"{\"CustomerID\":\"$customerId$\",\"EmployeeID\":\"$employeeId$\",\"OrderDate\":\"$orderDate$\",\"RequiredDate\":\"$requiredDate$\",\"ShippedDate\":\"$shippedDate$\",\"ShipVia\":\"$shipViaId$\",\"Freight\":\"$freight$\",\"ShipName\":\"$name$\",\"ShipAddress\":\"$address$\",\"ShipCity\":\"$city$\",\"ShipRegion\":\"$region$\",\"ShipPostalCode\":\"$postalCode$\",\"ShipCountry\":\"$country$\"}","filter":"{\"_id\":\"$id$\"}"}
              children:
                - entity: Orders.details
                  dialect: MongoDB
                  source: MongoDB
                  sentence: >-
                    {"set":"{\"OrderID\":\"$orderId$\",\"ProductID\":\"$productId$\",\"UnitPrice\":\"$unitPrice$\",\"Quantity\":\"$quantity$\",\"Discount\":\"$discount$\"}","filter":"{\"$and\":[{\"OrderID\":\"$orderId$\"},{\"ProductID\":\"$productId$\"}]}"}
                - entity: Orders.details
                  dialect: MongoDB
                  source: MongoDB
                  sentence: >-
                    {"set":"{\"OrderID\":\"$orderId$\",\"ProductID\":\"$productId$\",\"UnitPrice\":\"$unitPrice$\",\"Quantity\":\"$quantity$\",\"Discount\":\"$discount$\"}","filter":"{\"$and\":[{\"OrderID\":\"$orderId$\"},{\"ProductID\":\"$productId$\"}]}"}
      - stage: Oracle
        info:
          entity: Customers
          dialect: Oracle
          source: Oracle
          sentence: >-
            UPDATE Customers c SET CustomerID = :id,CompanyName =
            :name,ContactName = :contact,ContactTitle = :phone,Address =
            :address,City = :city,Region = :region,PostalCode =
            :postalCode,Country = :country WHERE c.CustomerID = :id 
          children:
            - entity: Orders
              dialect: Oracle
              source: Oracle
              sentence: >-
                UPDATE Orders o SET CustomerID = :customerId,EmployeeID =
                :employeeId,OrderDate = :orderDate,RequiredDate =
                :requiredDate,ShippedDate = :shippedDate,ShipVia =
                :shipViaId,Freight = :freight,ShipName = :name,ShipAddress =
                :address,ShipCity = :city,ShipRegion = :region,ShipPostalCode =
                :postalCode,ShipCountry = :country WHERE o.OrderID = :id 
              children:
                - entity: Orders.details
                  dialect: Oracle
                  source: Oracle
                  sentence: >-
                    UPDATE "Order Details" o1 SET OrderID = :orderId,ProductID =
                    :productId,UnitPrice = :unitPrice,Quantity =
                    :quantity,Discount = :discount WHERE (o1.OrderID = :orderId
                    AND o1.ProductID = :productId) 
    errors: 0
    expression: Customers.update().include(p => p.orders.include(p => p.details))
    normalizeExpression: >-
      Customers.update(p=>{id:id,name:name,contact:contact,phone:phone,address:address,city:city,region:region,postalCode:postalCode,country:country}).filter(p=>(p.id==id)).include(p=>p.orders.update(p=>{customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country}).filter(p=>(p.id==id)).include(p=>p.details.update(p=>{orderId:orderId,productId:productId,unitPrice:unitPrice,quantity:quantity,discount:discount}).filter(p=>((p.orderId==orderId)&&(p.productId==productId)))))
    model:
      - name: id
        type: string
      - name: name
        type: string
      - name: contact
        type: string
      - name: phone
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: orders
        type: Orders[]
        children:
          - name: customerId
            type: string
          - name: employeeId
            type: integer
          - name: orderDate
            type: dateTime
          - name: requiredDate
            type: date
          - name: shippedDate
            type: date
          - name: shipViaId
            type: integer
          - name: freight
            type: decimal
          - name: name
            type: string
          - name: address
            type: string
          - name: city
            type: string
          - name: region
            type: string
          - name: postalCode
            type: string
          - name: country
            type: string
          - name: details
            type: Orders.details[]
            children:
              - name: orderId
                type: integer
              - name: productId
                type: integer
              - name: unitPrice
                type: decimal
              - name: quantity
                type: decimal
              - name: discount
                type: decimal
    parameters:
      - name: id
        type: string
      - name: name
        type: string
      - name: contact
        type: string
      - name: phone
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: orders
        type: Orders
        children:
          - name: customerId
            type: string
          - name: employeeId
            type: integer
          - name: orderDate
            type: dateTime
          - name: requiredDate
            type: date
          - name: shippedDate
            type: date
          - name: shipViaId
            type: integer
          - name: freight
            type: decimal
          - name: name
            type: string
          - name: address
            type: string
          - name: city
            type: string
          - name: region
            type: string
          - name: postalCode
            type: string
          - name: country
            type: string
          - name: id
            type: integer
          - name: details
            type: Orders.details
            children:
              - name: orderId
                type: integer
              - name: productId
                type: integer
              - name: unitPrice
                type: decimal
              - name: quantity
                type: decimal
              - name: discount
                type: decimal
    constraints:
      entity: Customers
      constraints:
        - message: Cannot be null property id in entity Customers
          condition: isNotNull(id)
        - message: Cannot be null property name in entity Customers
          condition: isNotNull(name)
        - message: Cannot be null property id in entity Customers
          condition: isNotNull(id)
      children:
        - entity: Orders
          constraints:
            - message: Cannot be null property customerId in entity Orders
              condition: isNotNull(customerId)
            - message: Cannot be null property employeeId in entity Orders
              condition: isNotNull(employeeId)
          children:
            - entity: Orders.details
              constraints:
                - message: Cannot be null property orderId in entity Orders.details
                  condition: isNotNull(orderId)
                - message: Cannot be null property productId in entity Orders.details
                  condition: isNotNull(productId)
                - message: Cannot be null property orderId in entity Orders.details
                  condition: isNotNull(orderId)
                - message: Cannot be null property productId in entity Orders.details
                  condition: isNotNull(productId)
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 27
      name: update
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 49
          name: update
          children:
            - classtype: Sentence
              pos:
                ln: 0
                col: 54
              name: update
              children: []
              type: any
              entity: Orders.details
              columns:
                - name: orderId
                  type: integer
                - name: productId
                  type: integer
                - name: unitPrice
                  type: decimal
                - name: quantity
                  type: decimal
                - name: discount
                  type: decimal
              parameters:
                - name: orderId
                  type: integer
                - name: productId
                  type: integer
                - name: unitPrice
                  type: decimal
                - name: quantity
                  type: decimal
                - name: discount
                  type: decimal
                - name: orderId
                  type: integer
                - name: productId
                  type: integer
              constraints:
                - message: Cannot be null property orderId in entity Orders.details
                  condition: isNotNull(orderId)
                - message: Cannot be null property productId in entity Orders.details
                  condition: isNotNull(productId)
                - message: Cannot be null property orderId in entity Orders.details
                  condition: isNotNull(orderId)
                - message: Cannot be null property productId in entity Orders.details
                  condition: isNotNull(productId)
              values: []
              defaults: []
              clause: update
              alias: o1
          type: any
          entity: Orders
          columns:
            - name: customerId
              type: string
            - name: employeeId
              type: integer
            - name: orderDate
              type: dateTime
            - name: requiredDate
              type: date
            - name: shippedDate
              type: date
            - name: shipViaId
              type: integer
            - name: freight
              type: decimal
            - name: name
              type: string
            - name: address
              type: string
            - name: city
              type: string
            - name: region
              type: string
            - name: postalCode
              type: string
            - name: country
              type: string
          parameters:
            - name: customerId
              type: string
            - name: employeeId
              type: integer
            - name: orderDate
              type: dateTime
            - name: requiredDate
              type: date
            - name: shippedDate
              type: date
            - name: shipViaId
              type: integer
            - name: freight
              type: decimal
            - name: name
              type: string
            - name: address
              type: string
            - name: city
              type: string
            - name: region
              type: string
            - name: postalCode
              type: string
            - name: country
              type: string
            - name: id
              type: integer
          constraints:
            - message: Cannot be null property customerId in entity Orders
              condition: isNotNull(customerId)
            - message: Cannot be null property employeeId in entity Orders
              condition: isNotNull(employeeId)
          values: []
          defaults: []
          clause: update
          alias: o
      type: any
      entity: Customers
      columns:
        - name: id
          type: string
        - name: name
          type: string
        - name: contact
          type: string
        - name: phone
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
      parameters:
        - name: id
          type: string
        - name: name
          type: string
        - name: contact
          type: string
        - name: phone
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: id
          type: string
      constraints:
        - message: Cannot be null property id in entity Customers
          condition: isNotNull(id)
        - message: Cannot be null property name in entity Customers
          condition: isNotNull(name)
        - message: Cannot be null property id in entity Customers
          condition: isNotNull(id)
      values: []
      defaults: []
      clause: update
      alias: c
    executions:
      - stage: MySQL
      - stage: MariaDB
      - stage: PostgreSQL
      - stage: SqlServer
      - stage: MongoDB
      - stage: Oracle
    result:
      data:
        id: ALFKI
        name: Alfreds Futterkiste
        contact: Maria Anders
        phone: Sales Representative
        address: Obere Str. 57
        city: Berlin
        region: null
        postalCode: '12209'
        country: Germany
        orders:
          - id: 1
            customerId: ALFKI
            employeeId: 6
            orderDate: '1997-08-24T22:00:00.000Z'
            requiredDate: '1997-09-21T22:00:00.000Z'
            shippedDate: '1997-09-01T22:00:00.000Z'
            shipViaId: 1
            freight: '29.4600'
            name: Alfreds Futterkiste
            address: Obere Str. 57
            city: Berlin
            region: null
            postalCode: '12209'
            country: Germany
            details:
              - orderId: 1
                productId: 28
                unitPrice: '45.6000'
                quantity: '15.0000'
                discount: '0.0000'
              - orderId: 1
                productId: 39
                unitPrice: '18.0000'
                quantity: '21.0000'
                discount: '0.0000'
              - orderId: 1
                productId: 46
                unitPrice: '12.0000'
                quantity: '2.0000'
                discount: '0.0000'
          - id: 2
            customerId: ALFKI
            employeeId: 4
            orderDate: '1997-10-02T22:00:00.000Z'
            requiredDate: '1997-10-30T23:00:00.000Z'
            shippedDate: '1997-10-12T22:00:00.000Z'
            shipViaId: 2
            freight: '61.0200'
            name: Alfred-s Futterkiste
            address: Obere Str. 57
            city: Berlin
            region: null
            postalCode: '12209'
            country: Germany
            details:
              - orderId: 2
                productId: 63
                unitPrice: '43.9000'
                quantity: '20.0000'
                discount: '0.0000'
          - id: 3
            customerId: ALFKI
            employeeId: 4
            orderDate: '1997-10-12T22:00:00.000Z'
            requiredDate: '1997-11-23T23:00:00.000Z'
            shippedDate: '1997-10-20T22:00:00.000Z'
            shipViaId: 1
            freight: '23.9400'
            name: Alfred-s Futterkiste
            address: Obere Str. 57
            city: Berlin
            region: null
            postalCode: '12209'
            country: Germany
            details:
              - orderId: 3
                productId: 3
                unitPrice: '10.0000'
                quantity: '6.0000'
                discount: '0.0000'
              - orderId: 3
                productId: 76
                unitPrice: '18.0000'
                quantity: '15.0000'
                discount: '0.0000'
          - id: 4
            customerId: ALFKI
            employeeId: 1
            orderDate: '1998-01-14T23:00:00.000Z'
            requiredDate: '1998-02-11T23:00:00.000Z'
            shippedDate: '1998-01-20T23:00:00.000Z'
            shipViaId: 3
            freight: '69.5300'
            name: Alfred-s Futterkiste
            address: Obere Str. 57
            city: Berlin
            region: null
            postalCode: '12209'
            country: Germany
            details:
              - orderId: 4
                productId: 59
                unitPrice: '55.0000'
                quantity: '15.0000'
                discount: '0.0000'
              - orderId: 4
                productId: 77
                unitPrice: '13.0000'
                quantity: '2.0000'
                discount: '0.0000'
          - id: 5
            customerId: ALFKI
            employeeId: 1
            orderDate: '1998-03-15T23:00:00.000Z'
            requiredDate: '1998-04-26T22:00:00.000Z'
            shippedDate: '1998-03-23T23:00:00.000Z'
            shipViaId: 1
            freight: '40.4200'
            name: Alfred-s Futterkiste
            address: Obere Str. 57
            city: Berlin
            region: null
            postalCode: '12209'
            country: Germany
            details:
              - orderId: 5
                productId: 6
                unitPrice: '25.0000'
                quantity: '16.0000'
                discount: '0.0000'
              - orderId: 5
                productId: 28
                unitPrice: '45.6000'
                quantity: '2.0000'
                discount: '0.0000'
          - id: 6
            customerId: ALFKI
            employeeId: 3
            orderDate: '1998-04-08T22:00:00.000Z'
            requiredDate: '1998-05-06T22:00:00.000Z'
            shippedDate: '1998-04-12T22:00:00.000Z'
            shipViaId: 1
            freight: '1.2100'
            name: Alfred-s Futterkiste
            address: Obere Str. 57
            city: Berlin
            region: null
            postalCode: '12209'
            country: Germany
            details:
              - orderId: 6
                productId: 58
                unitPrice: '13.2500'
                quantity: '40.0000'
                discount: '0.0000'
              - orderId: 6
                productId: 71
                unitPrice: '21.5000'
                quantity: '20.0000'
                discount: '0.0000'
errors: 0
