{
  "name": "string",
  "cases": [
    {
      "name": "normalize",
      "tests": [
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lower(p.subregion) })",
          "result": "Countries.map(p=>{result:lower(p.subregion)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: upper(p.subregion) })",
          "result": "Countries.map(p=>{result:upper(p.subregion)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: concat(p.region,\" \",p.subregion) })",
          "result": "Countries.map(p=>{result:concat(p.region, ,p.subregion)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lpad(p.region,12,\"_\") })",
          "result": "Countries.map(p=>{result:lpad(p.region,12,_)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rpad(p.region,12,\"_\") })",
          "result": "Countries.map(p=>{result:rpad(p.region,12,_)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: chr(68)})",
          "result": "Countries.map(p=>{result:chr(68)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ltrim(\"  a  \")})",
          "result": "Countries.map(p=>{result:ltrim(  a  )}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rtrim(\"  a  \")})",
          "result": "Countries.map(p=>{result:rtrim(  a  )}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: replace(p.region,\"a\",\"*\")})",
          "result": "Countries.map(p=>{result:replace(p.region,a,*)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: mask(p.subregion)})",
          "result": "Countries.map(p=>{result:mask(p.subregion)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substr(p.subregion,1,3)})",
          "result": "Countries.map(p=>{result:substring(p.subregion,1,3)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substring(p.subregion,1,3)})",
          "result": "Countries.map(p=>{result:substring(p.subregion,1,3)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: strCount(p.subregion,\"a\")})",
          "result": "Countries.map(p=>{result:strCount(p.subregion,a)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toString(p.latitude)})",
          "result": "Countries.map(p=>{result:toString(p.latitude)}).filter(p=>(p.iso3==BRA))"
        }
      ],
      "errors": 0
    },
    {
      "name": "model",
      "tests": [
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lower(p.subregion) })",
          "result": [
            {
              "name": "result",
              "type": "string"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: upper(p.subregion) })",
          "result": [
            {
              "name": "result",
              "type": "string"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: concat(p.region,\" \",p.subregion) })",
          "result": [
            {
              "name": "result",
              "type": "string"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lpad(p.region,12,\"_\") })",
          "result": [
            {
              "name": "result",
              "type": "string"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rpad(p.region,12,\"_\") })",
          "result": [
            {
              "name": "result",
              "type": "string"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: chr(68)})",
          "result": [
            {
              "name": "result",
              "type": "string"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ltrim(\"  a  \")})",
          "result": [
            {
              "name": "result",
              "type": "string"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rtrim(\"  a  \")})",
          "result": [
            {
              "name": "result",
              "type": "string"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: replace(p.region,\"a\",\"*\")})",
          "result": [
            {
              "name": "result",
              "type": "string"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: mask(p.subregion)})",
          "result": [
            {
              "name": "result",
              "type": "string"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substr(p.subregion,1,3)})",
          "result": [
            {
              "name": "result",
              "type": "string"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substring(p.subregion,1,3)})",
          "result": [
            {
              "name": "result",
              "type": "string"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: strCount(p.subregion,\"a\")})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toString(p.latitude)})",
          "result": [
            {
              "name": "result",
              "type": "string"
            }
          ]
        }
      ],
      "errors": 0
    },
    {
      "name": "parameters",
      "tests": [
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lower(p.subregion) })",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: upper(p.subregion) })",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: concat(p.region,\" \",p.subregion) })",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lpad(p.region,12,\"_\") })",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rpad(p.region,12,\"_\") })",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: chr(68)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ltrim(\"  a  \")})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rtrim(\"  a  \")})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: replace(p.region,\"a\",\"*\")})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: mask(p.subregion)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substr(p.subregion,1,3)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substring(p.subregion,1,3)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: strCount(p.subregion,\"a\")})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toString(p.latitude)})",
          "result": []
        }
      ],
      "errors": 0
    },
    {
      "name": "constraints",
      "tests": [
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lower(p.subregion) })",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: upper(p.subregion) })",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: concat(p.region,\" \",p.subregion) })",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lpad(p.region,12,\"_\") })",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rpad(p.region,12,\"_\") })",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: chr(68)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ltrim(\"  a  \")})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rtrim(\"  a  \")})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: replace(p.region,\"a\",\"*\")})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: mask(p.subregion)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substr(p.subregion,1,3)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substring(p.subregion,1,3)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: strCount(p.subregion,\"a\")})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toString(p.latitude)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        }
      ],
      "errors": 0
    },
    {
      "name": "metadata",
      "tests": [
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lower(p.subregion) })",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "string"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: upper(p.subregion) })",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "string"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: concat(p.region,\" \",p.subregion) })",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "string"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lpad(p.region,12,\"_\") })",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "string"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rpad(p.region,12,\"_\") })",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "string"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: chr(68)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "string"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ltrim(\"  a  \")})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "string"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rtrim(\"  a  \")})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "string"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: replace(p.region,\"a\",\"*\")})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "string"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: mask(p.subregion)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "string"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substr(p.subregion,1,3)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "string"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substring(p.subregion,1,3)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "string"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: strCount(p.subregion,\"a\")})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toString(p.latitude)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "string"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        }
      ],
      "errors": 0
    },
    {
      "name": "getInfo",
      "tests": [
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lower(p.subregion) })",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT LOWER(c.subregion) AS result FROM Countries c  WHERE c.iso3 = 'BRA' ",
            "children": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: upper(p.subregion) })",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT UPPER(c.subregion) AS result FROM Countries c  WHERE c.iso3 = 'BRA' ",
            "children": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: concat(p.region,\" \",p.subregion) })",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT CONCAT(CONCAT(c.region,' '),c.subregion) AS result FROM Countries c  WHERE c.iso3 = 'BRA' ",
            "children": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lpad(p.region,12,\"_\") })",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT LPAD(c.region,12,'_') AS result FROM Countries c  WHERE c.iso3 = 'BRA' ",
            "children": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rpad(p.region,12,\"_\") })",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT RPAD(c.region,12,'_') AS result FROM Countries c  WHERE c.iso3 = 'BRA' ",
            "children": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: chr(68)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT CHAR(68 USING ASCII) AS result FROM Countries c  WHERE c.iso3 = 'BRA' ",
            "children": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ltrim(\"  a  \")})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT LTRIM('  a  ') AS result FROM Countries c  WHERE c.iso3 = 'BRA' ",
            "children": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rtrim(\"  a  \")})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT RTRIM('  a  ') AS result FROM Countries c  WHERE c.iso3 = 'BRA' ",
            "children": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: replace(p.region,\"a\",\"*\")})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT REPLACE(c.region,'a','*') AS result FROM Countries c  WHERE c.iso3 = 'BRA' ",
            "children": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: mask(p.subregion)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT Concat(LEFT(c.subregion,3),'***',RIGHT(c.subregion,3)) AS result FROM Countries c  WHERE c.iso3 = 'BRA' ",
            "children": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substr(p.subregion,1,3)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT SUBSTR(c.subregion,1,3) AS result FROM Countries c  WHERE c.iso3 = 'BRA' ",
            "children": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substring(p.subregion,1,3)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT SUBSTR(c.subregion,1,3) AS result FROM Countries c  WHERE c.iso3 = 'BRA' ",
            "children": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: strCount(p.subregion,\"a\")})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT (LENGTH(c.subregion)-LENGTH(REPLACE(c.subregion,'a',''))) AS result FROM Countries c  WHERE c.iso3 = 'BRA' ",
            "children": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toString(p.latitude)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT CONVERT(c.latitude, CHAR) AS result FROM Countries c  WHERE c.iso3 = 'BRA' ",
            "children": []
          }
        }
      ],
      "errors": 0
    }
  ],
  "errors": 0
}