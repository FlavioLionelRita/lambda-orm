name: update
schema: northwind
context:
  a:
    id: 7
    customerId: ANATR
    employeeId: 7
    orderDate: '1996-09-17T22:00:00.000Z'
    requiredDate: '1996-10-15T22:00:00.000Z'
    shippedDate: '1996-09-23T22:00:00.000Z'
    shipViaId: 3
    freight: '1.6100'
    name: Ana Trujillo Emparedados y helados
    address: Avda. de la Constitucin 2222
    city: Mxico D.F.
    region: null
    postalCode: '5021'
    country: Mexico
    details:
      - orderId: 7
        productId: 69
        unitPrice: '28.8000'
        quantity: '1.0000'
        discount: '0.0000'
      - orderId: 7
        productId: 70
        unitPrice: '12.0000'
        quantity: '5.0000'
        discount: '0.0000'
  b:
    entity:
      id: 8
      customerId: ANATR
      employeeId: 3
      orderDate: '1997-08-07T22:00:00.000Z'
      requiredDate: '1997-09-04T22:00:00.000Z'
      shippedDate: '1997-08-13T22:00:00.000Z'
      shipViaId: 1
      freight: '43.9000'
      name: Ana Trujillo Emparedados y helados
      address: Avda. de la Constitucin 2222
      city: Mxico D.F.
      region: null
      postalCode: '5021'
      country: Mexico
      details:
        - orderId: 8
          productId: 14
          unitPrice: '23.2500'
          quantity: '3.0000'
          discount: '0.0000'
        - orderId: 8
          productId: 42
          unitPrice: '14.0000'
          quantity: '5.0000'
          discount: '0.0000'
        - orderId: 8
          productId: 60
          unitPrice: '34.0000'
          quantity: '10.0000'
          discount: '0.0000'
  c:
    postalCode: xxx
  d:
    id: ALFKI
    name: Alfreds Futterkiste
    contact: Maria Anders
    phone: Sales Representative
    address: Obere Str. 57
    city: Berlin
    region: null
    postalCode: '12209'
    country: Germany
    orders:
      - id: 1
        customerId: ALFKI
        employeeId: 6
        orderDate: '1997-08-24T22:00:00.000Z'
        requiredDate: '1997-09-21T22:00:00.000Z'
        shippedDate: '1997-09-01T22:00:00.000Z'
        shipViaId: 1
        freight: '29.4600'
        name: Alfreds Futterkiste
        address: Obere Str. 57
        city: Berlin
        region: null
        postalCode: '12209'
        country: Germany
        details:
          - orderId: 1
            productId: 28
            unitPrice: '45.6000'
            quantity: '15.0000'
            discount: '0.0000'
          - orderId: 1
            productId: 39
            unitPrice: '18.0000'
            quantity: '21.0000'
            discount: '0.0000'
          - orderId: 1
            productId: 46
            unitPrice: '12.0000'
            quantity: '2.0000'
            discount: '0.0000'
      - id: 2
        customerId: ALFKI
        employeeId: 4
        orderDate: '1997-10-02T22:00:00.000Z'
        requiredDate: '1997-10-30T23:00:00.000Z'
        shippedDate: '1997-10-12T22:00:00.000Z'
        shipViaId: 2
        freight: '61.0200'
        name: Alfred-s Futterkiste
        address: Obere Str. 57
        city: Berlin
        region: null
        postalCode: '12209'
        country: Germany
        details:
          - orderId: 2
            productId: 63
            unitPrice: '43.9000'
            quantity: '20.0000'
            discount: '0.0000'
      - id: 3
        customerId: ALFKI
        employeeId: 4
        orderDate: '1997-10-12T22:00:00.000Z'
        requiredDate: '1997-11-23T23:00:00.000Z'
        shippedDate: '1997-10-20T22:00:00.000Z'
        shipViaId: 1
        freight: '23.9400'
        name: Alfred-s Futterkiste
        address: Obere Str. 57
        city: Berlin
        region: null
        postalCode: '12209'
        country: Germany
        details:
          - orderId: 3
            productId: 3
            unitPrice: '10.0000'
            quantity: '6.0000'
            discount: '0.0000'
          - orderId: 3
            productId: 76
            unitPrice: '18.0000'
            quantity: '15.0000'
            discount: '0.0000'
      - id: 4
        customerId: ALFKI
        employeeId: 1
        orderDate: '1998-01-14T23:00:00.000Z'
        requiredDate: '1998-02-11T23:00:00.000Z'
        shippedDate: '1998-01-20T23:00:00.000Z'
        shipViaId: 3
        freight: '69.5300'
        name: Alfred-s Futterkiste
        address: Obere Str. 57
        city: Berlin
        region: null
        postalCode: '12209'
        country: Germany
        details:
          - orderId: 4
            productId: 59
            unitPrice: '55.0000'
            quantity: '15.0000'
            discount: '0.0000'
          - orderId: 4
            productId: 77
            unitPrice: '13.0000'
            quantity: '2.0000'
            discount: '0.0000'
      - id: 5
        customerId: ALFKI
        employeeId: 1
        orderDate: '1998-03-15T23:00:00.000Z'
        requiredDate: '1998-04-26T22:00:00.000Z'
        shippedDate: '1998-03-23T23:00:00.000Z'
        shipViaId: 1
        freight: '40.4200'
        name: Alfred-s Futterkiste
        address: Obere Str. 57
        city: Berlin
        region: null
        postalCode: '12209'
        country: Germany
        details:
          - orderId: 5
            productId: 6
            unitPrice: '25.0000'
            quantity: '16.0000'
            discount: '0.0000'
          - orderId: 5
            productId: 28
            unitPrice: '45.6000'
            quantity: '2.0000'
            discount: '0.0000'
      - id: 6
        customerId: ALFKI
        employeeId: 3
        orderDate: '1998-04-08T22:00:00.000Z'
        requiredDate: '1998-05-06T22:00:00.000Z'
        shippedDate: '1998-04-12T22:00:00.000Z'
        shipViaId: 1
        freight: '1.2100'
        name: Alfred-s Futterkiste
        address: Obere Str. 57
        city: Berlin
        region: null
        postalCode: '12209'
        country: Germany
        details:
          - orderId: 6
            productId: 58
            unitPrice: '13.2500'
            quantity: '40.0000'
            discount: '0.0000'
          - orderId: 6
            productId: 71
            unitPrice: '21.5000'
            quantity: '20.0000'
            discount: '0.0000'
test:
  - name: update 1
    context: a
    lambda: () => Orders.update()
    sentences:
      - dialect: mariadb
        sentence: >-
          UPDATE Orders o SET CustomerID = ?,EmployeeID = ?,OrderDate =
          ?,RequiredDate = ?,ShippedDate = ?,ShipVia = ?,Freight = ?,ShipName =
          ?,ShipAddress = ?,ShipCity = ?,ShipRegion = ?,ShipPostalCode =
          ?,ShipCountry = ? WHERE o.OrderID = ? 
      - dialect: mssql
        sentence: >-
          UPDATE Orders o SET CustomerID = :customerId,EmployeeID =
          :employeeId,OrderDate = :orderDate,RequiredDate =
          :requiredDate,ShippedDate = :shippedDate,ShipVia = :shipViaId,Freight
          = :freight,ShipName = :name,ShipAddress = :address,ShipCity =
          :city,ShipRegion = :region,ShipPostalCode = :postalCode,ShipCountry =
          :country WHERE o.OrderID = :obj.id 
      - dialect: mysql
        sentence: >-
          UPDATE Orders o SET CustomerID = ?,EmployeeID = ?,OrderDate =
          ?,RequiredDate = ?,ShippedDate = ?,ShipVia = ?,Freight = ?,ShipName =
          ?,ShipAddress = ?,ShipCity = ?,ShipRegion = ?,ShipPostalCode =
          ?,ShipCountry = ? WHERE o.OrderID = ? 
      - dialect: oracle
        sentence: >-
          UPDATE Orders o SET CustomerID = :customerId,EmployeeID =
          :employeeId,OrderDate = :orderDate,RequiredDate =
          :requiredDate,ShippedDate = :shippedDate,ShipVia = :shipViaId,Freight
          = :freight,ShipName = :name,ShipAddress = :address,ShipCity =
          :city,ShipRegion = :region,ShipPostalCode = :postalCode,ShipCountry =
          :country WHERE o.OrderID = :obj.id 
      - dialect: postgres
        sentence: >-
          UPDATE Orders o SET CustomerID = $1,EmployeeID = $2,OrderDate =
          $3,RequiredDate = $4,ShippedDate = $5,ShipVia = $6,Freight =
          $7,ShipName = $8,ShipAddress = $9,ShipCity = $10,ShipRegion =
          $11,ShipPostalCode = $12,ShipCountry = $13 WHERE o.OrderID = $14 
    errors: 0
    expression: Orders.update()
    completeExpression: >-
      Orders.filter(p=>(p.id==obj.id)).update({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country})
    model:
      customerId: string
      employeeId: integer
      orderDate: datetime
      requiredDate: datetime
      shippedDate: datetime
      shipViaId: integer
      freight: decimal
      name: string
      address: string
      city: string
      region: string
      postalCode: string
      country: string
    parameters:
      - name: customerId
        type: string
        value: ANATR
      - name: employeeId
        type: integer
        value: 7
      - name: orderDate
        type: datetime
        value: '1996-09-18 00:00:00'
      - name: requiredDate
        type: datetime
        value: '1996-10-16 00:00:00'
      - name: shippedDate
        type: datetime
        value: '1996-09-24 00:00:00'
      - name: shipViaId
        type: integer
        value: 3
      - name: freight
        type: decimal
        value: '1.6100'
      - name: name
        type: string
        value: Ana Trujillo Emparedados y helados
      - name: address
        type: string
        value: Avda. de la Constitucin 2222
      - name: city
        type: string
        value: Mxico D.F.
      - name: region
        type: string
        value: null
      - name: postalCode
        type: string
        value: '5021'
      - name: country
        type: string
        value: Mexico
      - name: obj.id
        type: integer
        value: null
    fields:
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: datetime
      - name: requiredDate
        type: datetime
      - name: shippedDate
        type: datetime
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
    executions:
      - database: mysql
      - database: postgres
    result: 0
  - name: update 2
    context: b
    lambda: (entity) => Orders.update(entity)
    sentences:
      - dialect: mariadb
        sentence: >-
          UPDATE Orders o SET CustomerID = ?,EmployeeID = ?,OrderDate =
          ?,RequiredDate = ?,ShippedDate = ?,ShipVia = ?,Freight = ?,ShipName =
          ?,ShipAddress = ?,ShipCity = ?,ShipRegion = ?,ShipPostalCode =
          ?,ShipCountry = ? WHERE o.OrderID = ? 
      - dialect: mssql
        sentence: >-
          UPDATE Orders o SET CustomerID = :entity.customerId,EmployeeID =
          :entity.employeeId,OrderDate = :entity.orderDate,RequiredDate =
          :entity.requiredDate,ShippedDate = :entity.shippedDate,ShipVia =
          :entity.shipViaId,Freight = :entity.freight,ShipName =
          :entity.name,ShipAddress = :entity.address,ShipCity =
          :entity.city,ShipRegion = :entity.region,ShipPostalCode =
          :entity.postalCode,ShipCountry = :entity.country WHERE o.OrderID =
          :obj.id 
      - dialect: mysql
        sentence: >-
          UPDATE Orders o SET CustomerID = ?,EmployeeID = ?,OrderDate =
          ?,RequiredDate = ?,ShippedDate = ?,ShipVia = ?,Freight = ?,ShipName =
          ?,ShipAddress = ?,ShipCity = ?,ShipRegion = ?,ShipPostalCode =
          ?,ShipCountry = ? WHERE o.OrderID = ? 
      - dialect: oracle
        sentence: >-
          UPDATE Orders o SET CustomerID = :entity.customerId,EmployeeID =
          :entity.employeeId,OrderDate = :entity.orderDate,RequiredDate =
          :entity.requiredDate,ShippedDate = :entity.shippedDate,ShipVia =
          :entity.shipViaId,Freight = :entity.freight,ShipName =
          :entity.name,ShipAddress = :entity.address,ShipCity =
          :entity.city,ShipRegion = :entity.region,ShipPostalCode =
          :entity.postalCode,ShipCountry = :entity.country WHERE o.OrderID =
          :obj.id 
      - dialect: postgres
        sentence: >-
          UPDATE Orders o SET CustomerID = $1,EmployeeID = $2,OrderDate =
          $3,RequiredDate = $4,ShippedDate = $5,ShipVia = $6,Freight =
          $7,ShipName = $8,ShipAddress = $9,ShipCity = $10,ShipRegion =
          $11,ShipPostalCode = $12,ShipCountry = $13 WHERE o.OrderID = $14 
    errors: 0
    expression: Orders.update(entity)
    completeExpression: >-
      Orders.filter(p=>(p.id==obj.id)).update({customerId:entity.customerId,employeeId:entity.employeeId,orderDate:entity.orderDate,requiredDate:entity.requiredDate,shippedDate:entity.shippedDate,shipViaId:entity.shipViaId,freight:entity.freight,name:entity.name,address:entity.address,city:entity.city,region:entity.region,postalCode:entity.postalCode,country:entity.country})
    model:
      customerId: string
      employeeId: integer
      orderDate: datetime
      requiredDate: datetime
      shippedDate: datetime
      shipViaId: integer
      freight: decimal
      name: string
      address: string
      city: string
      region: string
      postalCode: string
      country: string
    parameters:
      - name: entity.customerId
        type: string
        value: ANATR
      - name: entity.employeeId
        type: integer
        value: 3
      - name: entity.orderDate
        type: datetime
        value: '1997-08-08 00:00:00'
      - name: entity.requiredDate
        type: datetime
        value: '1997-09-05 00:00:00'
      - name: entity.shippedDate
        type: datetime
        value: '1997-08-14 00:00:00'
      - name: entity.shipViaId
        type: integer
        value: 1
      - name: entity.freight
        type: decimal
        value: '43.9000'
      - name: entity.name
        type: string
        value: Ana Trujillo Emparedados y helados
      - name: entity.address
        type: string
        value: Avda. de la Constitucin 2222
      - name: entity.city
        type: string
        value: Mxico D.F.
      - name: entity.region
        type: string
        value: null
      - name: entity.postalCode
        type: string
        value: '5021'
      - name: entity.country
        type: string
        value: Mexico
      - name: obj.id
        type: integer
        value: null
    fields:
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: datetime
      - name: requiredDate
        type: datetime
      - name: shippedDate
        type: datetime
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
    executions:
      - database: mysql
      - database: postgres
    result: 0
  - name: update 3
    context: c
    lambda: '(postalCode) => Orders.updateAll({ postalCode: postalCode })'
    sentences:
      - dialect: mariadb
        sentence: 'UPDATE Orders o SET ShipPostalCode = ? '
      - dialect: mssql
        sentence: 'UPDATE Orders o SET ShipPostalCode = :postalCode '
      - dialect: mysql
        sentence: 'UPDATE Orders o SET ShipPostalCode = ? '
      - dialect: oracle
        sentence: 'UPDATE Orders o SET ShipPostalCode = :postalCode '
      - dialect: postgres
        sentence: 'UPDATE Orders o SET ShipPostalCode = $1 '
    errors: 0
    expression: 'Orders.updateAll({ postalCode: postalCode })'
    completeExpression: 'Orders.update({postalCode:postalCode})'
    model:
      postalCode: string
    parameters:
      - name: postalCode
        type: string
        value: xxx
    fields:
      - name: postalCode
        type: string
    executions:
      - database: mysql
      - database: postgres
    result: 833
  - name: update 4
    context: b
    lambda: >-
      (entity) => Orders.update({ name: entity.name }).filter(p => p.id ===
      entity.id)
    sentences:
      - dialect: mariadb
        sentence: 'UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? '
      - dialect: mssql
        sentence: >-
          UPDATE Orders o SET ShipName = :entity.name WHERE o.OrderID =
          :entity.id 
      - dialect: mysql
        sentence: 'UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? '
      - dialect: oracle
        sentence: >-
          UPDATE Orders o SET ShipName = :entity.name WHERE o.OrderID =
          :entity.id 
      - dialect: postgres
        sentence: 'UPDATE Orders o SET ShipName = $1 WHERE o.OrderID = $2 '
    errors: 0
    expression: 'Orders.update({ name: entity.name }).filter(p => p.id === entity.id)'
    completeExpression: 'Orders.update({name:entity.name}).filter(p=>(p.id===entity.id))'
    model:
      name: string
    parameters:
      - name: entity.name
        type: string
        value: Ana Trujillo Emparedados y helados
      - name: entity.id
        type: integer
        value: 8
    fields:
      - name: name
        type: string
    executions:
      - database: mysql
      - database: postgres
    result: 1
  - name: update 5
    context: b
    lambda: >-
      (entity) => Orders.update({ name: entity.name }).include(p =>
      p.details.update(p => p)).filter(p => p.id === entity.id)
    sentences:
      - dialect: mariadb
        sentence: >-
          UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? 

          UPDATE `Order Details` o1 SET UnitPrice = o1.UnitPrice,Quantity =
          o1.Quantity,Discount = o1.Discount WHERE (o1.OrderID = ? AND
          o1.ProductID = ?) 
      - dialect: mssql
        sentence: >-
          UPDATE Orders o SET ShipName = :entity.name WHERE o.OrderID =
          :entity.id 

          UPDATE [Order Details] o1 SET UnitPrice = o1.UnitPrice,Quantity =
          o1.Quantity,Discount = o1.Discount WHERE (o1.OrderID = :orderId AND
          o1.ProductID = :productId) 
      - dialect: mysql
        sentence: >-
          UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? 

          UPDATE `Order Details` o1 SET UnitPrice = o1.UnitPrice,Quantity =
          o1.Quantity,Discount = o1.Discount WHERE (o1.OrderID = ? AND
          o1.ProductID = ?) 
      - dialect: oracle
        sentence: >-
          UPDATE Orders o SET ShipName = :entity.name WHERE o.OrderID =
          :entity.id 

          UPDATE "Order Details" o1 SET UnitPrice = o1.UnitPrice,Quantity =
          o1.Quantity,Discount = o1.Discount WHERE (o1.OrderID = :orderId AND
          o1.ProductID = :productId) 
      - dialect: postgres
        sentence: >-
          UPDATE Orders o SET ShipName = $1 WHERE o.OrderID = $2 

          UPDATE "Order Details" o1 SET UnitPrice = o1.UnitPrice,Quantity =
          o1.Quantity,Discount = o1.Discount WHERE (o1.OrderID = $1 AND
          o1.ProductID = $2) 
    errors: 0
    expression: >-
      Orders.update({ name: entity.name }).include(p => p.details.update(p =>
      p)).filter(p => p.id === entity.id)
    completeExpression: >-
      Orders.update({name:entity.name}).include(p=>p.details.filter(p=>((p.orderId==orderId)&&(p.productId==productId))).update(p=>{unitPrice:p.unitPrice,quantity:p.quantity,discount:p.discount})).filter(p=>(p.id===entity.id))
    model:
      name: string
      details:
        - unitPrice: decimal
          quantity: decimal
          discount: decimal
    parameters:
      - name: entity.name
        type: string
        value: Ana Trujillo Emparedados y helados
      - name: entity.id
        type: integer
        value: 8
    fields:
      - name: name
        type: string
    executions:
      - database: mysql
      - database: postgres
    result: 1
  - name: update 6
    context: b
    lambda: >-
      (entity) => Orders.update({ name: entity.name }).include(p =>
      p.details.update(p => ({ unitPrice: p.unitPrice, productId: p.productId
      }))).filter(p => p.id === entity.id)
    sentences:
      - dialect: mariadb
        sentence: >-
          UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? 

          UPDATE `Order Details` o1 SET UnitPrice = o1.UnitPrice,ProductID =
          o1.ProductID WHERE (o1.OrderID = ? AND o1.ProductID = ?) 
      - dialect: mssql
        sentence: >-
          UPDATE Orders o SET ShipName = :entity.name WHERE o.OrderID =
          :entity.id 

          UPDATE [Order Details] o1 SET UnitPrice = o1.UnitPrice,ProductID =
          o1.ProductID WHERE (o1.OrderID = :orderId AND o1.ProductID =
          :productId) 
      - dialect: mysql
        sentence: >-
          UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? 

          UPDATE `Order Details` o1 SET UnitPrice = o1.UnitPrice,ProductID =
          o1.ProductID WHERE (o1.OrderID = ? AND o1.ProductID = ?) 
      - dialect: oracle
        sentence: >-
          UPDATE Orders o SET ShipName = :entity.name WHERE o.OrderID =
          :entity.id 

          UPDATE "Order Details" o1 SET UnitPrice = o1.UnitPrice,ProductID =
          o1.ProductID WHERE (o1.OrderID = :orderId AND o1.ProductID =
          :productId) 
      - dialect: postgres
        sentence: >-
          UPDATE Orders o SET ShipName = $1 WHERE o.OrderID = $2 

          UPDATE "Order Details" o1 SET UnitPrice = o1.UnitPrice,ProductID =
          o1.ProductID WHERE (o1.OrderID = $1 AND o1.ProductID = $2) 
    errors: 0
    expression: >-
      Orders.update({ name: entity.name }).include(p => p.details.update(p => ({
      unitPrice: p.unitPrice, productId: p.productId }))).filter(p => p.id ===
      entity.id)
    completeExpression: >-
      Orders.update({name:entity.name}).include(p=>p.details.filter(p=>((p.orderId==orderId)&&(p.productId==productId))).update(p=>{unitPrice:p.unitPrice,productId:p.productId})).filter(p=>(p.id===entity.id))
    model:
      name: string
      details:
        - unitPrice: decimal
          productId: integer
    parameters:
      - name: entity.name
        type: string
        value: Ana Trujillo Emparedados y helados
      - name: entity.id
        type: integer
        value: 8
    fields:
      - name: name
        type: string
    executions:
      - database: mysql
      - database: postgres
    result: 1
  - name: update 7
    context: a
    lambda: () => Orders.update().include(p => p.details)
    sentences:
      - dialect: mariadb
        sentence: >-
          UPDATE Orders o SET CustomerID = ?,EmployeeID = ?,OrderDate =
          ?,RequiredDate = ?,ShippedDate = ?,ShipVia = ?,Freight = ?,ShipName =
          ?,ShipAddress = ?,ShipCity = ?,ShipRegion = ?,ShipPostalCode =
          ?,ShipCountry = ? WHERE o.OrderID = ? 

          UPDATE `Order Details` o1 SET OrderID = ?,ProductID = ?,UnitPrice =
          ?,Quantity = ?,Discount = ? WHERE (o1.OrderID = ? AND o1.ProductID =
          ?) 
      - dialect: mssql
        sentence: >-
          UPDATE Orders o SET CustomerID = :customerId,EmployeeID =
          :employeeId,OrderDate = :orderDate,RequiredDate =
          :requiredDate,ShippedDate = :shippedDate,ShipVia = :shipViaId,Freight
          = :freight,ShipName = :name,ShipAddress = :address,ShipCity =
          :city,ShipRegion = :region,ShipPostalCode = :postalCode,ShipCountry =
          :country WHERE o.OrderID = :obj.id 

          UPDATE [Order Details] o1 SET OrderID = :orderId,ProductID =
          :productId,UnitPrice = :unitPrice,Quantity = :quantity,Discount =
          :discount WHERE (o1.OrderID = :obj.orderId AND o1.ProductID =
          :obj.productId) 
      - dialect: mysql
        sentence: >-
          UPDATE Orders o SET CustomerID = ?,EmployeeID = ?,OrderDate =
          ?,RequiredDate = ?,ShippedDate = ?,ShipVia = ?,Freight = ?,ShipName =
          ?,ShipAddress = ?,ShipCity = ?,ShipRegion = ?,ShipPostalCode =
          ?,ShipCountry = ? WHERE o.OrderID = ? 

          UPDATE `Order Details` o1 SET OrderID = ?,ProductID = ?,UnitPrice =
          ?,Quantity = ?,Discount = ? WHERE (o1.OrderID = ? AND o1.ProductID =
          ?) 
      - dialect: oracle
        sentence: >-
          UPDATE Orders o SET CustomerID = :customerId,EmployeeID =
          :employeeId,OrderDate = :orderDate,RequiredDate =
          :requiredDate,ShippedDate = :shippedDate,ShipVia = :shipViaId,Freight
          = :freight,ShipName = :name,ShipAddress = :address,ShipCity =
          :city,ShipRegion = :region,ShipPostalCode = :postalCode,ShipCountry =
          :country WHERE o.OrderID = :obj.id 

          UPDATE "Order Details" o1 SET OrderID = :orderId,ProductID =
          :productId,UnitPrice = :unitPrice,Quantity = :quantity,Discount =
          :discount WHERE (o1.OrderID = :obj.orderId AND o1.ProductID =
          :obj.productId) 
      - dialect: postgres
        sentence: >-
          UPDATE Orders o SET CustomerID = $1,EmployeeID = $2,OrderDate =
          $3,RequiredDate = $4,ShippedDate = $5,ShipVia = $6,Freight =
          $7,ShipName = $8,ShipAddress = $9,ShipCity = $10,ShipRegion =
          $11,ShipPostalCode = $12,ShipCountry = $13 WHERE o.OrderID = $14 

          UPDATE "Order Details" o1 SET OrderID = $1,ProductID = $2,UnitPrice =
          $3,Quantity = $4,Discount = $5 WHERE (o1.OrderID = $6 AND o1.ProductID
          = $7) 
    errors: 0
    expression: Orders.update().include(p => p.details)
    completeExpression: >-
      Orders.filter(p=>(p.id==obj.id)).update({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country}).include(p=>p.details.filter(p=>((p.orderId==obj.orderId)&&(p.productId==obj.productId))).update({orderId:orderId,productId:productId,unitPrice:unitPrice,quantity:quantity,discount:discount}))
    model:
      customerId: string
      employeeId: integer
      orderDate: datetime
      requiredDate: datetime
      shippedDate: datetime
      shipViaId: integer
      freight: decimal
      name: string
      address: string
      city: string
      region: string
      postalCode: string
      country: string
      details:
        - orderId: integer
          productId: integer
          unitPrice: decimal
          quantity: decimal
          discount: decimal
    parameters:
      - name: customerId
        type: string
        value: ANATR
      - name: employeeId
        type: integer
        value: 7
      - name: orderDate
        type: datetime
        value: '1996-09-18 00:00:00'
      - name: requiredDate
        type: datetime
        value: '1996-10-16 00:00:00'
      - name: shippedDate
        type: datetime
        value: '1996-09-24 00:00:00'
      - name: shipViaId
        type: integer
        value: 3
      - name: freight
        type: decimal
        value: '1.6100'
      - name: name
        type: string
        value: Ana Trujillo Emparedados y helados
      - name: address
        type: string
        value: Avda. de la Constitucin 2222
      - name: city
        type: string
        value: Mxico D.F.
      - name: region
        type: string
        value: null
      - name: postalCode
        type: string
        value: '5021'
      - name: country
        type: string
        value: Mexico
      - name: obj.id
        type: integer
        value: null
    fields:
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: datetime
      - name: requiredDate
        type: datetime
      - name: shippedDate
        type: datetime
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
    executions:
      - database: mysql
      - database: postgres
    result: 0
  - name: update 8
    context: c
    lambda: () => Customers.update().include(p => p.orders.include(p => p.details))
    sentences:
      - dialect: mariadb
        sentence: >-
          UPDATE Customers c SET CustomerID = ?,CompanyName = ?,ContactName =
          ?,ContactTitle = ?,Address = ?,City = ?,Region = ?,PostalCode =
          ?,Country = ? WHERE c.CustomerID = ? 

          UPDATE Orders o SET CustomerID = ?,EmployeeID = ?,OrderDate =
          ?,RequiredDate = ?,ShippedDate = ?,ShipVia = ?,Freight = ?,ShipName =
          ?,ShipAddress = ?,ShipCity = ?,ShipRegion = ?,ShipPostalCode =
          ?,ShipCountry = ? WHERE o.OrderID = ? 

          UPDATE `Order Details` o1 SET OrderID = ?,ProductID = ?,UnitPrice =
          ?,Quantity = ?,Discount = ? WHERE (o1.OrderID = ? AND o1.ProductID =
          ?) 
      - dialect: mssql
        sentence: >-
          UPDATE Customers c SET CustomerID = :id,CompanyName =
          :name,ContactName = :contact,ContactTitle = :phone,Address =
          :address,City = :city,Region = :region,PostalCode =
          :postalCode,Country = :country WHERE c.CustomerID = :obj.id 

          UPDATE Orders o SET CustomerID = :customerId,EmployeeID =
          :employeeId,OrderDate = :orderDate,RequiredDate =
          :requiredDate,ShippedDate = :shippedDate,ShipVia = :shipViaId,Freight
          = :freight,ShipName = :name,ShipAddress = :address,ShipCity =
          :city,ShipRegion = :region,ShipPostalCode = :postalCode,ShipCountry =
          :country WHERE o.OrderID = :obj.id 

          UPDATE [Order Details] o1 SET OrderID = :orderId,ProductID =
          :productId,UnitPrice = :unitPrice,Quantity = :quantity,Discount =
          :discount WHERE (o1.OrderID = :obj.orderId AND o1.ProductID =
          :obj.productId) 
      - dialect: mysql
        sentence: >-
          UPDATE Customers c SET CustomerID = ?,CompanyName = ?,ContactName =
          ?,ContactTitle = ?,Address = ?,City = ?,Region = ?,PostalCode =
          ?,Country = ? WHERE c.CustomerID = ? 

          UPDATE Orders o SET CustomerID = ?,EmployeeID = ?,OrderDate =
          ?,RequiredDate = ?,ShippedDate = ?,ShipVia = ?,Freight = ?,ShipName =
          ?,ShipAddress = ?,ShipCity = ?,ShipRegion = ?,ShipPostalCode =
          ?,ShipCountry = ? WHERE o.OrderID = ? 

          UPDATE `Order Details` o1 SET OrderID = ?,ProductID = ?,UnitPrice =
          ?,Quantity = ?,Discount = ? WHERE (o1.OrderID = ? AND o1.ProductID =
          ?) 
      - dialect: oracle
        sentence: >-
          UPDATE Customers c SET CustomerID = :id,CompanyName =
          :name,ContactName = :contact,ContactTitle = :phone,Address =
          :address,City = :city,Region = :region,PostalCode =
          :postalCode,Country = :country WHERE c.CustomerID = :obj.id 

          UPDATE Orders o SET CustomerID = :customerId,EmployeeID =
          :employeeId,OrderDate = :orderDate,RequiredDate =
          :requiredDate,ShippedDate = :shippedDate,ShipVia = :shipViaId,Freight
          = :freight,ShipName = :name,ShipAddress = :address,ShipCity =
          :city,ShipRegion = :region,ShipPostalCode = :postalCode,ShipCountry =
          :country WHERE o.OrderID = :obj.id 

          UPDATE "Order Details" o1 SET OrderID = :orderId,ProductID =
          :productId,UnitPrice = :unitPrice,Quantity = :quantity,Discount =
          :discount WHERE (o1.OrderID = :obj.orderId AND o1.ProductID =
          :obj.productId) 
      - dialect: postgres
        sentence: >-
          UPDATE Customers c SET CustomerID = $1,CompanyName = $2,ContactName =
          $3,ContactTitle = $4,Address = $5,City = $6,Region = $7,PostalCode =
          $8,Country = $9 WHERE c.CustomerID = $10 

          UPDATE Orders o SET CustomerID = $1,EmployeeID = $2,OrderDate =
          $3,RequiredDate = $4,ShippedDate = $5,ShipVia = $6,Freight =
          $7,ShipName = $8,ShipAddress = $9,ShipCity = $10,ShipRegion =
          $11,ShipPostalCode = $12,ShipCountry = $13 WHERE o.OrderID = $14 

          UPDATE "Order Details" o1 SET OrderID = $1,ProductID = $2,UnitPrice =
          $3,Quantity = $4,Discount = $5 WHERE (o1.OrderID = $6 AND o1.ProductID
          = $7) 
    errors: 0
    expression: Customers.update().include(p => p.orders.include(p => p.details))
    completeExpression: >-
      Customers.filter(p=>(p.id==obj.id)).update({id:id,name:name,contact:contact,phone:phone,address:address,city:city,region:region,postalCode:postalCode,country:country}).include(p=>p.orders.include(p=>p.details.filter(p=>((p.orderId==obj.orderId)&&(p.productId==obj.productId))).update({orderId:orderId,productId:productId,unitPrice:unitPrice,quantity:quantity,discount:discount})).filter(p=>(p.id==obj.id)).update({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country}))
    model:
      id: string
      name: string
      contact: string
      phone: string
      address: string
      city: string
      region: string
      postalCode: string
      country: string
      orders:
        - customerId: string
          employeeId: integer
          orderDate: datetime
          requiredDate: datetime
          shippedDate: datetime
          shipViaId: integer
          freight: decimal
          name: string
          address: string
          city: string
          region: string
          postalCode: string
          country: string
          details:
            - orderId: integer
              productId: integer
              unitPrice: decimal
              quantity: decimal
              discount: decimal
    parameters:
      - name: id
        type: string
        value: null
      - name: name
        type: string
        value: null
      - name: contact
        type: string
        value: null
      - name: phone
        type: string
        value: null
      - name: address
        type: string
        value: null
      - name: city
        type: string
        value: null
      - name: region
        type: string
        value: null
      - name: postalCode
        type: string
        value: xxx
      - name: country
        type: string
        value: null
      - name: obj.id
        type: string
        value: null
    fields:
      - name: id
        type: string
      - name: name
        type: string
      - name: contact
        type: string
      - name: phone
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
    executions:
      - database: mysql
      - database: postgres
    result: 0
errors: 0
