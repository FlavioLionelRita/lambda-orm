{
  "operators": {
    "unary": {
      "-": {
        "name": "negative",
        "category": "arithmetic",
        "priority": 8,
        "return": "number",
        "params": [
          {
            "name": "value",
            "type": "number"
          }
        ]
      },
      "~": {
        "name": "bitNot",
        "category": "bitwise",
        "priority": 4,
        "return": "boolean",
        "params": [
          {
            "name": "value",
            "type": "boolean"
          }
        ]
      },
      "!": {
        "name": "not",
        "category": "logical",
        "priority": 4,
        "return": "boolean",
        "params": [
          {
            "name": "value",
            "type": "boolean"
          }
        ]
      }
    },
    "binary": {
      "+": {
        "name": "addition",
        "category": "arithmetic",
        "priority": 4,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "-": {
        "name": "subtraction",
        "category": "arithmetic",
        "priority": 4,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "*": {
        "name": "multiplication",
        "category": "arithmetic",
        "priority": 5,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "/": {
        "name": "division",
        "category": "arithmetic",
        "priority": 5,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "**": {
        "name": "exponentiation",
        "category": "arithmetic",
        "priority": 6,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "//": {
        "name": "floorDivision",
        "category": "arithmetic",
        "priority": 6,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "%": {
        "name": "mod",
        "category": "arithmetic",
        "priority": 7,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "&": {
        "name": "bitAnd",
        "category": "bitwise",
        "priority": 4,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "|": {
        "name": "bitOr",
        "category": "bitwise",
        "priority": 4,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "^": {
        "name": "bitXor",
        "category": "bitwise",
        "priority": 4,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "<<": {
        "name": "leftShift",
        "category": "bitwise",
        "priority": 4,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      ">>": {
        "name": "rightShift",
        "category": "bitwise",
        "priority": 4,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "==": {
        "name": "equal",
        "category": "comparison",
        "priority": 3,
        "return": "boolean",
        "params": [
          {
            "name": "a",
            "type": "T"
          },
          {
            "name": "b",
            "type": "T"
          }
        ]
      },
      "!=": {
        "name": "notEqual",
        "category": "comparison",
        "priority": 3,
        "return": "boolean",
        "params": [
          {
            "name": "a",
            "type": "T"
          },
          {
            "name": "b",
            "type": "T"
          }
        ]
      },
      ">": {
        "name": "greaterThan",
        "category": "comparison",
        "priority": 3,
        "return": "boolean",
        "params": [
          {
            "name": "a",
            "type": "T"
          },
          {
            "name": "b",
            "type": "T"
          }
        ]
      },
      "<": {
        "name": "lessThan",
        "category": "comparison",
        "priority": 3,
        "return": "boolean",
        "params": [
          {
            "name": "a",
            "type": "T"
          },
          {
            "name": "b",
            "type": "T"
          }
        ]
      },
      ">=": {
        "name": "greaterThanOrEqual",
        "category": "comparison",
        "priority": 3,
        "return": "boolean",
        "params": [
          {
            "name": "a",
            "type": "T"
          },
          {
            "name": "b",
            "type": "T"
          }
        ]
      },
      "<=": {
        "name": "lessThanOrEqual",
        "category": "comparison",
        "priority": 3,
        "return": "boolean",
        "params": [
          {
            "name": "a",
            "type": "T"
          },
          {
            "name": "b",
            "type": "T"
          }
        ]
      },
      "&&": {
        "name": "and",
        "category": "logical",
        "priority": 3,
        "return": "boolean",
        "params": [
          {
            "name": "a",
            "type": "boolean"
          },
          {
            "name": "b",
            "type": "boolean"
          }
        ]
      },
      "||": {
        "name": "or",
        "category": "logical",
        "priority": 3,
        "return": "boolean",
        "params": [
          {
            "name": "a",
            "type": "boolean"
          },
          {
            "name": "b",
            "type": "boolean"
          }
        ]
      },
      "[]": {
        "name": "item",
        "category": "list",
        "priority": 2,
        "return": "T",
        "params": [
          {
            "name": "array",
            "type": "T[]"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      "=": {
        "name": "assigment",
        "category": "assignment",
        "priority": 1,
        "return": "T",
        "params": [
          {
            "name": "a",
            "type": "T"
          },
          {
            "name": "b",
            "type": "T"
          }
        ]
      },
      "+=": {
        "name": "assigmentAddition",
        "category": "assignment",
        "priority": 1,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "-=": {
        "name": "assigmentSubtraction",
        "category": "assignment",
        "priority": 1,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "*=": {
        "name": "assigmentMultiplication",
        "category": "assignment",
        "priority": 1,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "/=": {
        "name": "assigmentDivision",
        "category": "assignment",
        "priority": 1,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "**=": {
        "name": "assigmentExponentiation",
        "category": "assignment",
        "priority": 1,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "//=": {
        "name": "assigmentFloorDivision",
        "category": "assignment",
        "priority": 1,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "%=": {
        "name": "assigmentMod",
        "category": "assignment",
        "priority": 1,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "&=": {
        "name": "assigmentBitAnd",
        "category": "assignment",
        "priority": 1,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "|=": {
        "name": "assigmentBitOr",
        "category": "assignment",
        "priority": 1,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "^=": {
        "name": "assigmentBitXor",
        "category": "assignment",
        "priority": 1,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      "<<=": {
        "name": "assigmentLeftShift",
        "category": "assignment",
        "priority": 1,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      ">>=": {
        "name": "assigmentRightShift",
        "category": "assignment",
        "priority": 1,
        "return": "number",
        "params": [
          {
            "name": "a",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      }
    },
    "ternary": {
      "?": {
        "name": "condicional",
        "category": "flowcontrol",
        "priority": 1,
        "return": "T",
        "params": [
          {
            "name": "condition",
            "type": "boolean"
          },
          {
            "name": "b",
            "type": "T"
          },
          {
            "name": "b",
            "type": "T"
          }
        ]
      }
    }
  },
  "functions": {
    "as": {
      "desc": null,
      "category": "general",
      "return": "T",
      "params": [
        {
          "name": "value",
          "type": "T"
        },
        {
          "name": "name",
          "type": "string"
        }
      ]
    },
    "desc": {
      "desc": null,
      "category": "sort",
      "return": "void",
      "params": [
        {
          "name": "value",
          "type": "any"
        }
      ]
    },
    "asc": {
      "desc": null,
      "category": "sort",
      "return": "void",
      "params": [
        {
          "name": "value",
          "type": "any"
        }
      ]
    },
    "between": {
      "desc": null,
      "category": "condition",
      "return": "boolean",
      "params": [
        {
          "name": "value",
          "type": "any"
        },
        {
          "name": "from",
          "type": "any"
        },
        {
          "name": "to",
          "type": "any"
        }
      ]
    },
    "includes": {
      "desc": null,
      "category": "condition",
      "return": "boolean",
      "params": [
        {
          "name": "value",
          "type": "any"
        },
        {
          "name": "list",
          "type": "any[]"
        }
      ]
    },
    "abs": {
      "desc": "Get the absolute value",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "acos": {
      "desc": "Get the arc cosine",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "asin": {
      "desc": "Get the arc sine",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "atan": {
      "desc": "Get the arc tangent",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "atan2": {
      "desc": "Get the arc tangent of x and y",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ]
    },
    "ceil": {
      "desc": "Get the smallest following integer",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "cos": {
      "desc": "Get the cosine",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "cosh": {
      "desc": "Get hyperbolic cosine",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "exp": {
      "desc": "Raise e to the nth power",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "floor": {
      "desc": "Get the largest preceding integer",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "ln": {
      "desc": "Get natural logarithm of num",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "log": {
      "desc": "Get logarithm, base num1, of num2",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "n1",
          "type": "number"
        },
        {
          "name": "n2",
          "type": "number"
        }
      ]
    },
    "remainder": {
      "desc": "Get remainder",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "n1",
          "type": "number"
        },
        {
          "name": "n2",
          "type": "number"
        }
      ]
    },
    "round": {
      "desc": "Get rounded value",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        },
        {
          "name": "decimals",
          "type": "number"
        }
      ]
    },
    "sign": {
      "desc": "Get sign of exp",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "sin": {
      "desc": "Get sine",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "sinh": {
      "desc": "Get hyperbolic sine",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "tan": {
      "desc": "Get tangent",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "tanh": {
      "desc": "Get hyperbolic tangent",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "trunc": {
      "desc": "Truncate num",
      "category": "numeric",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "chr": {
      "desc": "Get character from ASCII code",
      "category": "string",
      "return": "string",
      "params": [
        {
          "name": "value",
          "type": "string"
        }
      ]
    },
    "initcap": {
      "desc": "Capitalize words",
      "category": "string",
      "return": "string",
      "params": [
        {
          "name": "value",
          "type": "string"
        }
      ]
    },
    "lower": {
      "desc": "Lowercase string",
      "category": "string",
      "return": "string",
      "params": [
        {
          "name": "value",
          "type": "string"
        }
      ]
    },
    "lpad": {
      "desc": "Pad the left-side of string",
      "category": "string",
      "return": "string",
      "params": [
        {
          "name": "value",
          "type": "string"
        },
        {
          "name": "len",
          "type": "number"
        },
        {
          "name": "pad",
          "type": "string"
        }
      ]
    },
    "ltrim": {
      "desc": "Remove leading chars",
      "category": "string",
      "return": "string",
      "params": [
        {
          "name": "value",
          "type": "string"
        }
      ]
    },
    "replace": {
      "desc": "The replace() method searches a string for a specified value and returns a new string where the specified values are replaced.",
      "category": "string",
      "return": "string",
      "params": [
        {
          "name": "value",
          "type": "string"
        },
        {
          "name": "source",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        }
      ]
    },
    "rpad": {
      "desc": "Pad the right-side of string",
      "category": "string",
      "return": "string",
      "params": [
        {
          "name": "value",
          "type": "string"
        },
        {
          "name": "len",
          "type": "number"
        },
        {
          "name": "pad",
          "type": "string"
        }
      ]
    },
    "rtrim": {
      "desc": "Remove trailing spaces",
      "category": "string",
      "return": "string",
      "params": [
        {
          "name": "value",
          "type": "string"
        }
      ]
    },
    "substr": {
      "desc": "Get a substring of string",
      "category": "string",
      "return": "string",
      "params": [
        {
          "name": "value",
          "type": "string"
        },
        {
          "name": "from",
          "type": "number"
        },
        {
          "name": "count",
          "type": "number"
        }
      ]
    },
    "trim": {
      "desc": "Remove characters",
      "category": "string",
      "return": "string",
      "params": [
        {
          "name": "value",
          "type": "string"
        }
      ]
    },
    "upper": {
      "desc": "Uppercase string",
      "category": "string",
      "return": "string",
      "params": [
        {
          "name": "value",
          "type": "string"
        }
      ]
    },
    "concat": {
      "desc": "String concatenation",
      "category": "string",
      "return": "string",
      "multipleParams": true,
      "params": [
        {
          "name": "values",
          "type": "string"
        }
      ]
    },
    "curtime": {
      "desc": "Get the current time",
      "category": "datetime",
      "return": "Date"
    },
    "today": {
      "desc": "Get the current date",
      "category": "datetime",
      "return": "Date"
    },
    "now": {
      "desc": "Get the current datetime",
      "category": "datetime",
      "return": "Date"
    },
    "time": {
      "desc": null,
      "category": "datetime",
      "return": "Date",
      "params": [
        {
          "name": "value",
          "type": "any"
        }
      ]
    },
    "date": {
      "desc": null,
      "category": "datetime",
      "return": "Date",
      "params": [
        {
          "name": "value",
          "type": "any"
        }
      ]
    },
    "year": {
      "desc": null,
      "category": "datetime",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "Date"
        }
      ]
    },
    "month": {
      "desc": null,
      "category": "datetime",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "Date"
        }
      ]
    },
    "day": {
      "desc": null,
      "category": "datetime",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "Date"
        }
      ]
    },
    "weekday": {
      "desc": null,
      "category": "datetime",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "Date"
        }
      ]
    },
    "hours": {
      "desc": null,
      "category": "datetime",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "Date"
        }
      ]
    },
    "minutes": {
      "desc": null,
      "category": "datetime",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "Date"
        }
      ]
    },
    "seconds": {
      "desc": null,
      "category": "datetime",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "Date"
        }
      ]
    },
    "addYear": {
      "desc": null,
      "category": "datetime",
      "return": "Date",
      "params": [
        {
          "name": "date",
          "type": "Date"
        },
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "addMonth": {
      "desc": null,
      "category": "datetime",
      "return": "Date",
      "params": [
        {
          "name": "date",
          "type": "Date"
        },
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "addDay": {
      "desc": null,
      "category": "datetime",
      "return": "Date",
      "params": [
        {
          "name": "date",
          "type": "Date"
        },
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "addHours": {
      "desc": null,
      "category": "datetime",
      "return": "Date",
      "params": [
        {
          "name": "date",
          "type": "Date"
        },
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "addMinutes": {
      "desc": null,
      "category": "datetime",
      "return": "Date",
      "params": [
        {
          "name": "date",
          "type": "Date"
        },
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "addSeconds": {
      "desc": null,
      "category": "datetime",
      "return": "Date",
      "params": [
        {
          "name": "date",
          "type": "Date"
        },
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "addTime": {
      "desc": null,
      "category": "datetime",
      "return": "Date",
      "params": [
        {
          "name": "date",
          "type": "Date"
        },
        {
          "name": "value",
          "type": "Date"
        }
      ]
    },
    "dateDiff": {
      "desc": null,
      "category": "datetime",
      "return": "Date",
      "params": [
        {
          "name": "date",
          "type": "Date"
        },
        {
          "name": "date2",
          "type": "Date"
        }
      ]
    },
    "timeDiff": {
      "desc": null,
      "category": "datetime",
      "return": "Date",
      "params": [
        {
          "name": "time",
          "type": "Date"
        },
        {
          "name": "time2",
          "type": "Date"
        }
      ]
    },
    "toString": {
      "desc": null,
      "category": "convert",
      "return": "string",
      "params": [
        {
          "name": "value",
          "type": "any"
        }
      ]
    },
    "toDate": {
      "desc": null,
      "category": "convert",
      "return": "Date",
      "params": [
        {
          "name": "value",
          "type": "any"
        }
      ]
    },
    "toDatetime": {
      "desc": null,
      "category": "convert",
      "return": "Date",
      "params": [
        {
          "name": "value",
          "type": "any"
        }
      ]
    },
    "toTime": {
      "desc": null,
      "category": "convert",
      "return": "Date",
      "params": [
        {
          "name": "value",
          "type": "any"
        }
      ]
    },
    "toJson": {
      "desc": null,
      "category": "convert",
      "return": "any",
      "params": [
        {
          "name": "value",
          "type": "any"
        }
      ]
    },
    "toNumber": {
      "desc": null,
      "category": "convert",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "any"
        }
      ]
    },
    "user": {
      "desc": "get username",
      "category": "metadata",
      "return": "string"
    },
    "source": {
      "desc": "get source",
      "category": "metadata",
      "return": "string"
    },
    "nvl": {
      "desc": null,
      "category": "nullable",
      "return": "T",
      "params": [
        {
          "name": "value",
          "type": "T"
        },
        {
          "name": "_default",
          "type": "T"
        }
      ]
    },
    "nvl2": {
      "desc": null,
      "category": "nullable",
      "return": "T",
      "params": [
        {
          "name": "value",
          "type": "T"
        },
        {
          "name": "a",
          "type": "T"
        },
        {
          "name": "b",
          "type": "T"
        }
      ]
    },
    "isNull": {
      "desc": null,
      "category": "nullable",
      "return": "boolean",
      "params": [
        {
          "name": "value",
          "type": "any"
        }
      ]
    },
    "isNotNull": {
      "desc": null,
      "category": "nullable",
      "return": "boolean",
      "params": [
        {
          "name": "value",
          "type": "any"
        }
      ]
    },
    "avg": {
      "desc": null,
      "category": "group",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "count": {
      "desc": null,
      "category": "group",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "any"
        }
      ]
    },
    "first": {
      "desc": null,
      "category": "group",
      "return": "T",
      "params": [
        {
          "name": "value",
          "type": "T"
        }
      ]
    },
    "last": {
      "desc": null,
      "category": "group",
      "return": "T",
      "params": [
        {
          "name": "value",
          "type": "T"
        }
      ]
    },
    "max": {
      "desc": null,
      "category": "group",
      "return": "T",
      "params": [
        {
          "name": "value",
          "type": "T"
        }
      ]
    },
    "min": {
      "desc": null,
      "category": "group",
      "return": "T",
      "params": [
        {
          "name": "value",
          "type": "T"
        }
      ]
    },
    "sum": {
      "desc": null,
      "category": "group",
      "return": "number",
      "params": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    }
  },
  "enums": {
    "DayOfWeek": {
      "Sunday": 0,
      "Monday": 1,
      "Tuesday": 2,
      "Wednesday": 3,
      "Thursday": 4,
      "Friday": 5,
      "Saturday": 6
    }
  }
}