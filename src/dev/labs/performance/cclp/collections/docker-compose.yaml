version: '3'

networks:
  collections:
    driver: bridge
services:
  Postgres:
    container_name: collectionsPostgres
    image: postgres:10
    restart: always
    environment:
      - POSTGRES_DB=collections
      - POSTGRES_USER=collections
      - POSTGRES_PASSWORD=collections
    volumes:
      - ./volume/collectionsPostgres:/var/lib/postgresql/data
      - ./sql/postgresInit.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'
    networks:
      - collections
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "collections" ]
      interval: 3s
      timeout: 1s
      retries: 10
  Oracle:
    container_name: collectionsOracle
    image: oracledb19c/oracle.19.3.0-ee:oracle19.3.0-ee
    environment:
      ORACLE_SID: ORCLCDB
      ORACLE_PDB: ORCLCPDB
      ORACLE_PWD: password
      ORACLE_CHARACTERSET: WE8MSWIN1252
    volumes:
      # - ./volume/oradata:/opt/oracle/oradata # persistent oracle database data
      #  al usar el volume ./volume/oradata da error de permisos y no crea la instancia dentro del container
      #  por este motivo se crea el volume oradata:
      # info: https://github.com/oracle/docker-images/issues/439
      - oradata:/opt/oracle/oradata # persistent oracle database data
      - ./sql/oracle.sql:/home/oracle/setup/custom_scripts/init.sql
    ports:
      - 1521:1521
      - 5500:5500
    networks:
      - collections
  MongoDB:
    image: mongo:5.0
    container_name: collectionsMongoDB
    ports:
      - '27017:27017'
    networks:
      - collections
    environment:
      - MONGO_INITDB_DATABASE=COLLECTIONS
      - MONGO_INITDB_ROOT_USERNAME=COLLECTIONS
      - MONGO_INITDB_ROOT_PASSWORD=COLLECTIONS
    restart: always
    volumes:
      - ./volume/MongoDB:/data/db
  Insight:
    container_name: collectionsInsight
    image: postgres:10
    restart: always
    environment:      
      - POSTGRES_DB=insight
      - POSTGRES_USER=insight
      - POSTGRES_PASSWORD=insight
    volumes:
      - ./volume/collectionsInsight:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    networks:
      - collections
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "insight" ]
      interval: 3s
      timeout: 1s
      retries: 10    
volumes:
  oradata: null
