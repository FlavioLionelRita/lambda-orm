{
  "name": "numeric",
  "cases": [
    {
      "name": "normalize",
      "tests": [
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3+2-1 })",
          "result": "Countries.map(p=>{result:((3+2)-1)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3*4-1})",
          "result": "Countries.map(p=>{result:((3*4)-1)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1-2-5})",
          "result": "Countries.map(p=>{result:((1-2)-5)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (2+3)*2})",
          "result": "Countries.map(p=>{result:((2+3)*2)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 2*(3+2)})",
          "result": "Countries.map(p=>{result:(2*(3+2))}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2*3*4})",
          "result": "Countries.map(p=>{result:(1+((2*3)*4))}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (1+(2**3)*4)})",
          "result": "Countries.map(p=>{result:(1+((2**3)*4))}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2**(3*4)})",
          "result": "Countries.map(p=>{result:(1+(2**(3*4)))}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: abs(-9)})",
          "result": "Countries.map(p=>{result:abs(-9)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: acos(0.434)})",
          "result": "Countries.map(p=>{result:acos(0.434)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: asin(0.434)})",
          "result": "Countries.map(p=>{result:asin(0.434)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan(2)})",
          "result": "Countries.map(p=>{result:atan(2)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan2(90, 15)})",
          "result": "Countries.map(p=>{result:atan2(90,15)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ceil(2)})",
          "result": "Countries.map(p=>{result:ceil(2)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cos(2)})",
          "result": "Countries.map(p=>{result:cos(2)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cosh(2)})",
          "result": "Countries.map(p=>{result:cosh(2)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: exp(7)})",
          "result": "Countries.map(p=>{result:exp(7)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: floor(7)})",
          "result": "Countries.map(p=>{result:floor(7)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ln(7)})",
          "result": "Countries.map(p=>{result:ln(7)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log(7,10)})",
          "result": "Countries.map(p=>{result:log(7,10)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log10(7)})",
          "result": "Countries.map(p=>{result:log10(7)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: remainder(7,2)})",
          "result": "Countries.map(p=>{result:remainder(7,2)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: round(7.984938,2)})",
          "result": "Countries.map(p=>{result:round(7.984938,2)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sign(-7)})",
          "result": "Countries.map(p=>{result:sign(-7)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sin(7)})",
          "result": "Countries.map(p=>{result:sin(7)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sinh(7)})",
          "result": "Countries.map(p=>{result:sinh(7)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tan(7)})",
          "result": "Countries.map(p=>{result:tan(7)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tanh(7)})",
          "result": "Countries.map(p=>{result:tanh(7)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: trunc(7.984938,2)})",
          "result": "Countries.map(p=>{result:trunc(7.984938,2)}).filter(p=>(p.iso3==BRA))"
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toNumber(\"3.141516\")})",
          "result": "Countries.map(p=>{result:toNumber(3.141516)}).filter(p=>(p.iso3==BRA))"
        }
      ],
      "errors": 0
    },
    {
      "name": "model",
      "tests": [
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3+2-1 })",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3*4-1})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1-2-5})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (2+3)*2})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 2*(3+2)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2*3*4})",
          "result": [
            {
              "name": "result",
              "type": "integer"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (1+(2**3)*4)})",
          "result": [
            {
              "name": "result",
              "type": "integer"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2**(3*4)})",
          "result": [
            {
              "name": "result",
              "type": "integer"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: abs(-9)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: acos(0.434)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: asin(0.434)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan(2)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan2(90, 15)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ceil(2)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cos(2)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cosh(2)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: exp(7)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: floor(7)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ln(7)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log(7,10)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log10(7)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: remainder(7,2)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: round(7.984938,2)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sign(-7)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sin(7)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sinh(7)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tan(7)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tanh(7)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: trunc(7.984938,2)})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toNumber(\"3.141516\")})",
          "result": [
            {
              "name": "result",
              "type": "number"
            }
          ]
        }
      ],
      "errors": 0
    },
    {
      "name": "parameters",
      "tests": [
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3+2-1 })",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3*4-1})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1-2-5})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (2+3)*2})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 2*(3+2)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2*3*4})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (1+(2**3)*4)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2**(3*4)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: abs(-9)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: acos(0.434)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: asin(0.434)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan(2)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan2(90, 15)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ceil(2)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cos(2)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cosh(2)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: exp(7)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: floor(7)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ln(7)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log(7,10)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log10(7)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: remainder(7,2)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: round(7.984938,2)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sign(-7)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sin(7)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sinh(7)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tan(7)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tanh(7)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: trunc(7.984938,2)})",
          "result": []
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toNumber(\"3.141516\")})",
          "result": []
        }
      ],
      "errors": 0
    },
    {
      "name": "constraints",
      "tests": [
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3+2-1 })",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3*4-1})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1-2-5})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (2+3)*2})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 2*(3+2)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2*3*4})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (1+(2**3)*4)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2**(3*4)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: abs(-9)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: acos(0.434)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: asin(0.434)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan(2)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan2(90, 15)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ceil(2)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cos(2)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cosh(2)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: exp(7)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: floor(7)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ln(7)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log(7,10)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log10(7)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: remainder(7,2)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: round(7.984938,2)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sign(-7)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sin(7)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sinh(7)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tan(7)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tanh(7)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: trunc(7.984938,2)})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toNumber(\"3.141516\")})",
          "result": {
            "entity": "Countries",
            "constraints": []
          }
        }
      ],
      "errors": 0
    },
    {
      "name": "metadata",
      "tests": [
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3+2-1 })",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3*4-1})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1-2-5})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (2+3)*2})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 2*(3+2)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2*3*4})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "integer"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (1+(2**3)*4)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "integer"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2**(3*4)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "integer"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: abs(-9)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: acos(0.434)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: asin(0.434)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan(2)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan2(90, 15)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ceil(2)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cos(2)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cosh(2)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: exp(7)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: floor(7)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ln(7)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log(7,10)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log10(7)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: remainder(7,2)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: round(7.984938,2)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sign(-7)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sin(7)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sinh(7)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tan(7)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tanh(7)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: trunc(7.984938,2)})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toNumber(\"3.141516\")})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 42
            },
            "name": "select",
            "children": [],
            "type": "any",
            "entity": "Countries",
            "columns": [
              {
                "name": "result",
                "type": "number"
              }
            ],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "select",
            "alias": "c"
          }
        }
      ],
      "errors": 0
    },
    {
      "name": "getInfo",
      "tests": [
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3+2-1 })",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT ((3 + 2) - 1) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3*4-1})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT ((3 * 4) - 1) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1-2-5})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT ((1 - 2) - 5) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (2+3)*2})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT ((2 + 3) * 2) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 2*(3+2)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT (2 * (3 + 2)) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2*3*4})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT (1 + ((2 * 3) * 4)) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (1+(2**3)*4)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT (1 + (POWER(2,3) * 4)) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2**(3*4)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT (1 + POWER(2,(3 * 4))) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: abs(-9)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT ABS(-9) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: acos(0.434)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT ACOS(0.434) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: asin(0.434)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT ASIN(0.434) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan(2)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT ATAN(2) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan2(90, 15)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT ATAN(90,15) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ceil(2)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT CEIL(2) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cos(2)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT COS(2) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cosh(2)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT ((EXP(2) + EXP(-2)) / 2) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: exp(7)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT EXP(7) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: floor(7)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT FLOOR(7) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ln(7)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT LN(7) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log(7,10)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT LOG(7,10) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log10(7)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT LOG10(7) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: remainder(7,2)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT (7 - 2*ROUND(7/2)) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: round(7.984938,2)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT ROUND(7.984938,2) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sign(-7)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT SIGN(-7) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sin(7)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT SIN(7) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sinh(7)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT ((EXP(7) - EXP(-7)) / 2) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tan(7)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT TAN(7) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tanh(7)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT (EXP(2*7) - 1)/(EXP(2*7) + 1) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: trunc(7.984938,2)})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT TRUNCATE(7.984938,2) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        },
        {
          "test": "Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toNumber(\"3.141516\")})",
          "result": {
            "entity": "Countries",
            "dialect": "MySQL",
            "source": "dataSource1",
            "sentence": "SELECT CONVERT('3.141516', DECIMAL) AS result FROM Countries c  WHERE c.iso3 = 'BRA' "
          }
        }
      ],
      "errors": 0
    }
  ],
  "errors": 0
}