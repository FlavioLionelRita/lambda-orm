name: include
data:
  a:
    id: 1
test:
  - name: include 1
    data: a
    sentences:
      - stage: MySQL
        info:
          entity: Orders
          dialect: MySQL
          source: MySQL
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.CustomerID AS `__customerId`
            FROM Orders o  WHERE o.OrderID = ? 
          children:
            - entity: Customers
              dialect: MySQL
              source: MySQL
              sentence: >-
                SELECT c.CustomerID AS id, c.CompanyName AS name, c.ContactName
                AS contact, c.ContactTitle AS phone, c.Address AS address,
                c.City AS city, c.Region AS region, c.PostalCode AS postalCode,
                c.Country AS country, c.CustomerID AS LambdaOrmParentId FROM
                Customers c  WHERE  c.CustomerID IN (?) 
      - stage: MariaDB
        info:
          entity: Orders
          dialect: MariaDB
          source: MariaDB
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.CustomerID AS `__customerId`
            FROM Orders o  WHERE o.OrderID = ? 
          children:
            - entity: Customers
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                SELECT c.CustomerID AS id, c.CompanyName AS name, c.ContactName
                AS contact, c.ContactTitle AS phone, c.Address AS address,
                c.City AS city, c.Region AS region, c.PostalCode AS postalCode,
                c.Country AS country, c.CustomerID AS LambdaOrmParentId FROM
                Customers c  WHERE  c.CustomerID IN (?) 
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.CustomerID AS "__customerId" FROM Orders o  WHERE
            o.OrderID = $1 
          children:
            - entity: Customers
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT c.CustomerID AS "id", c.CompanyName AS "name",
                c.ContactName AS "contact", c.ContactTitle AS "phone", c.Address
                AS "address", c.City AS "city", c.Region AS "region",
                c.PostalCode AS "postalCode", c.Country AS "country",
                c.CustomerID AS "LambdaOrmParentId" FROM Customers c  WHERE 
                c.CustomerID IN ($1) 
      - stage: SqlServer
        info:
          entity: Orders
          dialect: SqlServer
          source: SqlServer
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.CustomerID AS [__customerId]
            FROM Orders o  WHERE o.OrderID = @id 
          children:
            - entity: Customers
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                SELECT c.CustomerID AS id, c.CompanyName AS name, c.ContactName
                AS contact, c.ContactTitle AS phone, c.Address AS address,
                c.City AS city, c.Region AS region, c.PostalCode AS postalCode,
                c.Country AS country, c.CustomerID AS LambdaOrmParentId FROM
                Customers c  WHERE  c.CustomerID IN (@LambdaOrmParentId) 
      - stage: MongoDB
        info:
          entity: Orders
          dialect: MongoDB
          source: MongoDB
          sentence: >-
            [{"$match":{"_id":"$id$"}},{"$project":{"_id":0,"id":"$_id","customerId":"$CustomerID","employeeId":"$EmployeeID","orderDate":"$OrderDate","requiredDate":"$RequiredDate","shippedDate":"$ShippedDate","shipViaId":"$ShipVia","freight":"$Freight","name":"$ShipName","address":"$ShipAddress","city":"$ShipCity","region":"$ShipRegion","postalCode":"$ShipPostalCode","country":"$ShipCountry","__customerId":"$CustomerID"}}]
          children:
            - entity: Customers
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                [{"$match":{"_id":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"id":"$_id","name":"$CompanyName","contact":"$ContactName","phone":"$ContactTitle","address":"$Address","city":"$City","region":"$Region","postalCode":"$PostalCode","country":"$Country","LambdaOrmParentId":"$_id"}}]
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.CustomerID AS "__customerId" FROM Orders o  WHERE
            o.OrderID = :id 
          children:
            - entity: Customers
              dialect: Oracle
              source: Oracle
              sentence: >-
                SELECT c.CustomerID AS "id", c.CompanyName AS "name",
                c.ContactName AS "contact", c.ContactTitle AS "phone", c.Address
                AS "address", c.City AS "city", c.Region AS "region",
                c.PostalCode AS "postalCode", c.Country AS "country",
                c.CustomerID AS "LambdaOrmParentId" FROM Customers c  WHERE 
                c.CustomerID IN (:LambdaOrmParentId) 
    errors: 1
    expression: Orders.filter(p => p.id === id).include(p => p.customer)
    normalizeExpression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__customerId:p.customerId}).filter(p=>(p.id==id)).include(p=>p.customer.map(p=>{id:p.id,name:p.name,contact:p.contact,phone:p.phone,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,LambdaOrmParentId:p.id}).filter(p=>in(p.id,LambdaOrmParentId)))
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: customer
        type: Customers
        children:
          - name: id
            type: string
          - name: name
            type: string
          - name: contact
            type: string
          - name: phone
            type: string
          - name: address
            type: string
          - name: city
            type: string
          - name: region
            type: string
          - name: postalCode
            type: string
          - name: country
            type: string
          - name: LambdaOrmParentId
            type: string
    parameters:
      - name: id
        type: integer
      - name: customer
        type: Customers
        children:
          - name: LambdaOrmParentId
            type: any
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Customers
          constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 40
      name: select
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 45
          name: select
          children: []
          type: any
          entity: Customers
          columns:
            - name: id
              type: string
            - name: name
              type: string
            - name: contact
              type: string
            - name: phone
              type: string
            - name: address
              type: string
            - name: city
              type: string
            - name: region
              type: string
            - name: postalCode
              type: string
            - name: country
              type: string
            - name: LambdaOrmParentId
              type: string
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: c
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: __customerId
          type: string
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: o
    executions:
      - stage: MySQL
      - stage: MariaDB
      - stage: PostgreSQL
      - stage: SqlServer
      - stage: MongoDB
        error: not equal MySQL
        result:
          - id: 1
            customerId: VINET
            employeeId: 5
            orderDate: '1996-07-04T00:00:00.000+02:00'
            requiredDate: '1996-08-01'
            shippedDate: '1996-07-16'
            shipViaId: 3
            freight: 32.38
            name: Vins et alcools Chevalier
            address: 59 rue de l-Abbaye
            city: Reims
            region: null
            postalCode: '51100'
            country: France
            customer:
              id: VINET
              name: Vins et alcools Chevalier
              contact: Paul Henriot
              phone: Accounting Manager
              address: 59 rue de l'Abbaye
              city: Reims
              region: null
              postalCode: '51100'
              country: France
      - stage: Oracle
    result:
      - id: 1
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        customer:
          id: VINET
          name: Vins et alcools Chevalier
          contact: Paul Henriot
          phone: Accounting Manager
          address: 59 rue de l'Abbaye
          city: Reims
          region: null
          postalCode: '51100'
          country: France
  - name: include 2
    data: a
    sentences:
      - stage: MySQL
        info:
          entity: Orders
          dialect: MySQL
          source: MySQL
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.OrderID AS `__id` FROM
            Orders o  WHERE o.OrderID = ? 
          children:
            - entity: Orders.details
              dialect: MySQL
              source: MySQL
              sentence: >-
                SELECT o1.OrderID AS orderId, o1.ProductID AS productId,
                o1.UnitPrice AS unitPrice, o1.Quantity AS quantity, o1.Discount
                AS discount, o1.OrderID AS LambdaOrmParentId FROM `Order
                Details` o1  WHERE  o1.OrderID IN (?) 
      - stage: MariaDB
        info:
          entity: Orders
          dialect: MariaDB
          source: MariaDB
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.OrderID AS `__id` FROM
            Orders o  WHERE o.OrderID = ? 
          children:
            - entity: Orders.details
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                SELECT o1.OrderID AS orderId, o1.ProductID AS productId,
                o1.UnitPrice AS unitPrice, o1.Quantity AS quantity, o1.Discount
                AS discount, o1.OrderID AS LambdaOrmParentId FROM `Order
                Details` o1  WHERE  o1.OrderID IN (?) 
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.OrderID AS "__id" FROM Orders o  WHERE o.OrderID = $1 
          children:
            - entity: Orders.details
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT o1.OrderID AS "orderId", o1.ProductID AS "productId",
                o1.UnitPrice AS "unitPrice", o1.Quantity AS "quantity",
                o1.Discount AS "discount", o1.OrderID AS "LambdaOrmParentId"
                FROM "Order Details" o1  WHERE  o1.OrderID IN ($1) 
      - stage: SqlServer
        info:
          entity: Orders
          dialect: SqlServer
          source: SqlServer
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.OrderID AS [__id] FROM
            Orders o  WHERE o.OrderID = @id 
          children:
            - entity: Orders.details
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                SELECT o1.OrderID AS orderId, o1.ProductID AS productId,
                o1.UnitPrice AS unitPrice, o1.Quantity AS quantity, o1.Discount
                AS discount, o1.OrderID AS LambdaOrmParentId FROM [Order
                Details] o1  WHERE  o1.OrderID IN (@LambdaOrmParentId) 
      - stage: MongoDB
        info:
          entity: Orders
          dialect: MongoDB
          source: MongoDB
          sentence: >-
            [{"$match":{"_id":"$id$"}},{"$project":{"_id":0,"id":"$_id","customerId":"$CustomerID","employeeId":"$EmployeeID","orderDate":"$OrderDate","requiredDate":"$RequiredDate","shippedDate":"$ShippedDate","shipViaId":"$ShipVia","freight":"$Freight","name":"$ShipName","address":"$ShipAddress","city":"$ShipCity","region":"$ShipRegion","postalCode":"$ShipPostalCode","country":"$ShipCountry","__id":"$_id","details":{"$map":{"input":"$\"Order
            Details\"","in":{"orderId":"$$this.OrderID","productId":"$$this.ProductID","unitPrice":"$$this.UnitPrice","quantity":"$$this.Quantity","discount":"$$this.Discount","LambdaOrmParentId":"$$this.OrderID"}}}}}]
          children:
            - entity: Orders.details
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                [{"$unwind":"$\"Order
                Details\""},{"$replaceRoot":{"newRoot":"$\"Order
                Details\""}},{"$match":{"OrderID":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"orderId":"$OrderID","productId":"$ProductID","unitPrice":"$UnitPrice","quantity":"$Quantity","discount":"$Discount","LambdaOrmParentId":"$OrderID"}}]
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.OrderID AS "__id" FROM Orders o  WHERE o.OrderID = :id 
          children:
            - entity: Orders.details
              dialect: Oracle
              source: Oracle
              sentence: >-
                SELECT o1.OrderID AS "orderId", o1.ProductID AS "productId",
                o1.UnitPrice AS "unitPrice", o1.Quantity AS "quantity",
                o1.Discount AS "discount", o1.OrderID AS "LambdaOrmParentId"
                FROM "Order Details" o1  WHERE  o1.OrderID IN
                (:LambdaOrmParentId) 
    errors: 2
    expression: Orders.filter(p => p.id === id).include(p => p.details)
    normalizeExpression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__id:p.id}).filter(p=>(p.id==id)).include(p=>p.details.map(p=>{orderId:p.orderId,productId:p.productId,unitPrice:p.unitPrice,quantity:p.quantity,discount:p.discount,LambdaOrmParentId:p.orderId}).filter(p=>in(p.orderId,LambdaOrmParentId)))
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
          - name: LambdaOrmParentId
            type: integer
    parameters:
      - name: id
        type: integer
      - name: details
        type: Orders.details
        children:
          - name: LambdaOrmParentId
            type: any
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Orders.details
          constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 40
      name: select
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 45
          name: select
          children: []
          type: any
          entity: Orders.details
          columns:
            - name: orderId
              type: integer
            - name: productId
              type: integer
            - name: unitPrice
              type: decimal
            - name: quantity
              type: decimal
            - name: discount
              type: decimal
            - name: LambdaOrmParentId
              type: integer
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: o1
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: __id
          type: integer
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: o
    executions:
      - stage: MySQL
      - stage: MariaDB
      - stage: PostgreSQL
      - stage: SqlServer
        error: not equal MySQL
        result:
          - id: 1
            customerId: VINET
            employeeId: 5
            orderDate: '1996-07-04T00:00:00.000Z'
            requiredDate: '1996-08-01T00:00:00.000Z'
            shippedDate: '1996-07-16T00:00:00.000Z'
            shipViaId: 3
            freight: 32.38
            name: Vins et alcools Chevalier
            address: 59 rue de l-Abbaye
            city: Reims
            region: null
            postalCode: '51100'
            country: France
            details:
              - orderId: 1
                productId: 2
                unitPrice: 19
                quantity: 15
                discount: 0
              - orderId: 1
                productId: 29
                unitPrice: 123.79
                quantity: 20
                discount: 0
      - stage: MongoDB
        error: not equal MySQL
        result:
          - id: 1
            customerId: VINET
            employeeId: 5
            orderDate: '1996-07-04T00:00:00.000+02:00'
            requiredDate: '1996-08-01'
            shippedDate: '1996-07-16'
            shipViaId: 3
            freight: 32.38
            name: Vins et alcools Chevalier
            address: 59 rue de l-Abbaye
            city: Reims
            region: null
            postalCode: '51100'
            country: France
            details:
              - orderId: 1
                productId: 11
                unitPrice: 14
                quantity: 12
                discount: 0
              - orderId: 1
                productId: 42
                unitPrice: 9.8
                quantity: 10
                discount: 0
              - orderId: 1
                productId: 72
                unitPrice: 34.8
                quantity: 5
                discount: 0
      - stage: Oracle
    result:
      - id: 1
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        details:
          - orderId: 1
            productId: 11
            unitPrice: 14
            quantity: 12
            discount: 0
          - orderId: 1
            productId: 42
            unitPrice: 9.8
            quantity: 10
            discount: 0
          - orderId: 1
            productId: 72
            unitPrice: 34.8
            quantity: 5
            discount: 0
  - name: include 3
    data: a
    sentences:
      - stage: MySQL
        info:
          entity: Orders
          dialect: MySQL
          source: MySQL
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.OrderID AS `__id`,
            o.CustomerID AS `__customerId` FROM Orders o  WHERE o.OrderID = ? 
          children:
            - entity: Orders.details
              dialect: MySQL
              source: MySQL
              sentence: >-
                SELECT o1.OrderID AS orderId, o1.ProductID AS productId,
                o1.UnitPrice AS unitPrice, o1.Quantity AS quantity, o1.Discount
                AS discount, o1.OrderID AS LambdaOrmParentId FROM `Order
                Details` o1  WHERE  o1.OrderID IN (?) 
            - entity: Customers
              dialect: MySQL
              source: MySQL
              sentence: >-
                SELECT c.CustomerID AS id, c.CompanyName AS name, c.ContactName
                AS contact, c.ContactTitle AS phone, c.Address AS address,
                c.City AS city, c.Region AS region, c.PostalCode AS postalCode,
                c.Country AS country, c.CustomerID AS LambdaOrmParentId FROM
                Customers c  WHERE  c.CustomerID IN (?) 
      - stage: MariaDB
        info:
          entity: Orders
          dialect: MariaDB
          source: MariaDB
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.OrderID AS `__id`,
            o.CustomerID AS `__customerId` FROM Orders o  WHERE o.OrderID = ? 
          children:
            - entity: Orders.details
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                SELECT o1.OrderID AS orderId, o1.ProductID AS productId,
                o1.UnitPrice AS unitPrice, o1.Quantity AS quantity, o1.Discount
                AS discount, o1.OrderID AS LambdaOrmParentId FROM `Order
                Details` o1  WHERE  o1.OrderID IN (?) 
            - entity: Customers
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                SELECT c.CustomerID AS id, c.CompanyName AS name, c.ContactName
                AS contact, c.ContactTitle AS phone, c.Address AS address,
                c.City AS city, c.Region AS region, c.PostalCode AS postalCode,
                c.Country AS country, c.CustomerID AS LambdaOrmParentId FROM
                Customers c  WHERE  c.CustomerID IN (?) 
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.OrderID AS "__id", o.CustomerID AS "__customerId" FROM
            Orders o  WHERE o.OrderID = $1 
          children:
            - entity: Orders.details
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT o1.OrderID AS "orderId", o1.ProductID AS "productId",
                o1.UnitPrice AS "unitPrice", o1.Quantity AS "quantity",
                o1.Discount AS "discount", o1.OrderID AS "LambdaOrmParentId"
                FROM "Order Details" o1  WHERE  o1.OrderID IN ($1) 
            - entity: Customers
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT c.CustomerID AS "id", c.CompanyName AS "name",
                c.ContactName AS "contact", c.ContactTitle AS "phone", c.Address
                AS "address", c.City AS "city", c.Region AS "region",
                c.PostalCode AS "postalCode", c.Country AS "country",
                c.CustomerID AS "LambdaOrmParentId" FROM Customers c  WHERE 
                c.CustomerID IN ($1) 
      - stage: SqlServer
        info:
          entity: Orders
          dialect: SqlServer
          source: SqlServer
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.OrderID AS [__id],
            o.CustomerID AS [__customerId] FROM Orders o  WHERE o.OrderID = @id 
          children:
            - entity: Orders.details
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                SELECT o1.OrderID AS orderId, o1.ProductID AS productId,
                o1.UnitPrice AS unitPrice, o1.Quantity AS quantity, o1.Discount
                AS discount, o1.OrderID AS LambdaOrmParentId FROM [Order
                Details] o1  WHERE  o1.OrderID IN (@LambdaOrmParentId) 
            - entity: Customers
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                SELECT c.CustomerID AS id, c.CompanyName AS name, c.ContactName
                AS contact, c.ContactTitle AS phone, c.Address AS address,
                c.City AS city, c.Region AS region, c.PostalCode AS postalCode,
                c.Country AS country, c.CustomerID AS LambdaOrmParentId FROM
                Customers c  WHERE  c.CustomerID IN (@LambdaOrmParentId) 
      - stage: MongoDB
        info:
          entity: Orders
          dialect: MongoDB
          source: MongoDB
          sentence: >-
            [{"$match":{"_id":"$id$"}},{"$project":{"_id":0,"id":"$_id","customerId":"$CustomerID","employeeId":"$EmployeeID","orderDate":"$OrderDate","requiredDate":"$RequiredDate","shippedDate":"$ShippedDate","shipViaId":"$ShipVia","freight":"$Freight","name":"$ShipName","address":"$ShipAddress","city":"$ShipCity","region":"$ShipRegion","postalCode":"$ShipPostalCode","country":"$ShipCountry","__id":"$_id","__customerId":"$CustomerID","details":{"$map":{"input":"$\"Order
            Details\"","in":{"orderId":"$$this.OrderID","productId":"$$this.ProductID","unitPrice":"$$this.UnitPrice","quantity":"$$this.Quantity","discount":"$$this.Discount","LambdaOrmParentId":"$$this.OrderID"}}}}}]
          children:
            - entity: Orders.details
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                [{"$unwind":"$\"Order
                Details\""},{"$replaceRoot":{"newRoot":"$\"Order
                Details\""}},{"$match":{"OrderID":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"orderId":"$OrderID","productId":"$ProductID","unitPrice":"$UnitPrice","quantity":"$Quantity","discount":"$Discount","LambdaOrmParentId":"$OrderID"}}]
            - entity: Customers
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                [{"$match":{"_id":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"id":"$_id","name":"$CompanyName","contact":"$ContactName","phone":"$ContactTitle","address":"$Address","city":"$City","region":"$Region","postalCode":"$PostalCode","country":"$Country","LambdaOrmParentId":"$_id"}}]
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.OrderID AS "__id", o.CustomerID AS "__customerId" FROM
            Orders o  WHERE o.OrderID = :id 
          children:
            - entity: Orders.details
              dialect: Oracle
              source: Oracle
              sentence: >-
                SELECT o1.OrderID AS "orderId", o1.ProductID AS "productId",
                o1.UnitPrice AS "unitPrice", o1.Quantity AS "quantity",
                o1.Discount AS "discount", o1.OrderID AS "LambdaOrmParentId"
                FROM "Order Details" o1  WHERE  o1.OrderID IN
                (:LambdaOrmParentId) 
            - entity: Customers
              dialect: Oracle
              source: Oracle
              sentence: >-
                SELECT c.CustomerID AS "id", c.CompanyName AS "name",
                c.ContactName AS "contact", c.ContactTitle AS "phone", c.Address
                AS "address", c.City AS "city", c.Region AS "region",
                c.PostalCode AS "postalCode", c.Country AS "country",
                c.CustomerID AS "LambdaOrmParentId" FROM Customers c  WHERE 
                c.CustomerID IN (:LambdaOrmParentId) 
    errors: 2
    expression: Orders.filter(p => p.id === id).include(p => [p.details, p.customer])
    normalizeExpression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__id:p.id,__customerId:p.customerId}).filter(p=>(p.id==id)).include(p=>p.details.map(p=>{orderId:p.orderId,productId:p.productId,unitPrice:p.unitPrice,quantity:p.quantity,discount:p.discount,LambdaOrmParentId:p.orderId}).filter(p=>in(p.orderId,LambdaOrmParentId)))
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
          - name: LambdaOrmParentId
            type: integer
      - name: customer
        type: Customers
        children:
          - name: id
            type: string
          - name: name
            type: string
          - name: contact
            type: string
          - name: phone
            type: string
          - name: address
            type: string
          - name: city
            type: string
          - name: region
            type: string
          - name: postalCode
            type: string
          - name: country
            type: string
          - name: LambdaOrmParentId
            type: string
    parameters:
      - name: id
        type: integer
      - name: details
        type: Orders.details
        children:
          - name: LambdaOrmParentId
            type: any
      - name: customer
        type: Customers
        children:
          - name: LambdaOrmParentId
            type: any
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Orders.details
          constraints: []
        - entity: Customers
          constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 40
      name: select
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 46
          name: select
          children: []
          type: any
          entity: Orders.details
          columns:
            - name: orderId
              type: integer
            - name: productId
              type: integer
            - name: unitPrice
              type: decimal
            - name: quantity
              type: decimal
            - name: discount
              type: decimal
            - name: LambdaOrmParentId
              type: integer
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: o1
        - classtype: Sentence
          pos:
            ln: 0
            col: 57
          name: select
          children: []
          type: any
          entity: Customers
          columns:
            - name: id
              type: string
            - name: name
              type: string
            - name: contact
              type: string
            - name: phone
              type: string
            - name: address
              type: string
            - name: city
              type: string
            - name: region
              type: string
            - name: postalCode
              type: string
            - name: country
              type: string
            - name: LambdaOrmParentId
              type: string
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: c
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: __id
          type: integer
        - name: __customerId
          type: string
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: o
    executions:
      - stage: MySQL
      - stage: MariaDB
      - stage: PostgreSQL
      - stage: SqlServer
        error: not equal MySQL
        result:
          - id: 1
            customerId: VINET
            employeeId: 5
            orderDate: '1996-07-04T00:00:00.000Z'
            requiredDate: '1996-08-01T00:00:00.000Z'
            shippedDate: '1996-07-16T00:00:00.000Z'
            shipViaId: 3
            freight: 32.38
            name: Vins et alcools Chevalier
            address: 59 rue de l-Abbaye
            city: Reims
            region: null
            postalCode: '51100'
            country: France
            details:
              - orderId: 1
                productId: 2
                unitPrice: 19
                quantity: 15
                discount: 0
              - orderId: 1
                productId: 29
                unitPrice: 123.79
                quantity: 20
                discount: 0
            customer:
              id: VINET
              name: Vins et alcools Chevalier
              contact: Paul Henriot
              phone: Accounting Manager
              address: 59 rue de l'Abbaye
              city: Reims
              region: null
              postalCode: '51100'
              country: France
      - stage: MongoDB
        error: not equal MySQL
        result:
          - id: 1
            customerId: VINET
            employeeId: 5
            orderDate: '1996-07-04T00:00:00.000+02:00'
            requiredDate: '1996-08-01'
            shippedDate: '1996-07-16'
            shipViaId: 3
            freight: 32.38
            name: Vins et alcools Chevalier
            address: 59 rue de l-Abbaye
            city: Reims
            region: null
            postalCode: '51100'
            country: France
            details:
              - orderId: 1
                productId: 11
                unitPrice: 14
                quantity: 12
                discount: 0
              - orderId: 1
                productId: 42
                unitPrice: 9.8
                quantity: 10
                discount: 0
              - orderId: 1
                productId: 72
                unitPrice: 34.8
                quantity: 5
                discount: 0
            customer:
              id: VINET
              name: Vins et alcools Chevalier
              contact: Paul Henriot
              phone: Accounting Manager
              address: 59 rue de l'Abbaye
              city: Reims
              region: null
              postalCode: '51100'
              country: France
      - stage: Oracle
    result:
      - id: 1
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        details:
          - orderId: 1
            productId: 11
            unitPrice: 14
            quantity: 12
            discount: 0
          - orderId: 1
            productId: 42
            unitPrice: 9.8
            quantity: 10
            discount: 0
          - orderId: 1
            productId: 72
            unitPrice: 34.8
            quantity: 5
            discount: 0
        customer:
          id: VINET
          name: Vins et alcools Chevalier
          contact: Paul Henriot
          phone: Accounting Manager
          address: 59 rue de l'Abbaye
          city: Reims
          region: null
          postalCode: '51100'
          country: France
  - name: include 4
    data: a
    sentences:
      - stage: MySQL
        info:
          entity: Orders
          dialect: MySQL
          source: MySQL
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.OrderID AS `__id`,
            o.CustomerID AS `__customerId` FROM Orders o  WHERE o.OrderID = ? 
          children:
            - entity: Orders.details
              dialect: MySQL
              source: MySQL
              sentence: >-
                SELECT o1.OrderID AS orderId, o1.ProductID AS productId,
                o1.UnitPrice AS unitPrice, o1.Quantity AS quantity, o1.Discount
                AS discount, o1.ProductID AS `__productId`, o1.OrderID AS
                LambdaOrmParentId FROM `Order Details` o1  WHERE  o1.OrderID IN
                (?) 
              children:
                - entity: Products
                  dialect: MySQL
                  source: MySQL
                  sentence: >-
                    SELECT p.ProductID AS id, p.ProductName AS name,
                    p.SupplierID AS supplierId, p.CategoryID AS categoryId,
                    p.QuantityPerUnit AS quantity, p.UnitPrice AS price,
                    p.UnitsInStock AS inStock, p.UnitsOnOrder AS onOrder,
                    p.ReorderLevel AS reorderLevel, p.Discontinued AS
                    discontinued, p.ProductID AS LambdaOrmParentId FROM Products
                    p  WHERE  p.ProductID IN (?) 
            - entity: Customers
              dialect: MySQL
              source: MySQL
              sentence: >-
                SELECT c.CustomerID AS id, c.CompanyName AS name, c.ContactName
                AS contact, c.ContactTitle AS phone, c.Address AS address,
                c.City AS city, c.Region AS region, c.PostalCode AS postalCode,
                c.Country AS country, c.CustomerID AS LambdaOrmParentId FROM
                Customers c  WHERE  c.CustomerID IN (?) 
      - stage: MariaDB
        info:
          entity: Orders
          dialect: MariaDB
          source: MariaDB
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.OrderID AS `__id`,
            o.CustomerID AS `__customerId` FROM Orders o  WHERE o.OrderID = ? 
          children:
            - entity: Orders.details
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                SELECT o1.OrderID AS orderId, o1.ProductID AS productId,
                o1.UnitPrice AS unitPrice, o1.Quantity AS quantity, o1.Discount
                AS discount, o1.ProductID AS `__productId`, o1.OrderID AS
                LambdaOrmParentId FROM `Order Details` o1  WHERE  o1.OrderID IN
                (?) 
              children:
                - entity: Products
                  dialect: MariaDB
                  source: MariaDB
                  sentence: >-
                    SELECT p.ProductID AS id, p.ProductName AS name,
                    p.SupplierID AS supplierId, p.CategoryID AS categoryId,
                    p.QuantityPerUnit AS quantity, p.UnitPrice AS price,
                    p.UnitsInStock AS inStock, p.UnitsOnOrder AS onOrder,
                    p.ReorderLevel AS reorderLevel, p.Discontinued AS
                    discontinued, p.ProductID AS LambdaOrmParentId FROM Products
                    p  WHERE  p.ProductID IN (?) 
            - entity: Customers
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                SELECT c.CustomerID AS id, c.CompanyName AS name, c.ContactName
                AS contact, c.ContactTitle AS phone, c.Address AS address,
                c.City AS city, c.Region AS region, c.PostalCode AS postalCode,
                c.Country AS country, c.CustomerID AS LambdaOrmParentId FROM
                Customers c  WHERE  c.CustomerID IN (?) 
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.OrderID AS "__id", o.CustomerID AS "__customerId" FROM
            Orders o  WHERE o.OrderID = $1 
          children:
            - entity: Orders.details
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT o1.OrderID AS "orderId", o1.ProductID AS "productId",
                o1.UnitPrice AS "unitPrice", o1.Quantity AS "quantity",
                o1.Discount AS "discount", o1.ProductID AS "__productId",
                o1.OrderID AS "LambdaOrmParentId" FROM "Order Details" o1 
                WHERE  o1.OrderID IN ($1) 
              children:
                - entity: Products
                  dialect: PostgreSQL
                  source: PostgreSQL
                  sentence: >-
                    SELECT p.ProductID AS "id", p.ProductName AS "name",
                    p.SupplierID AS "supplierId", p.CategoryID AS "categoryId",
                    p.QuantityPerUnit AS "quantity", p.UnitPrice AS "price",
                    p.UnitsInStock AS "inStock", p.UnitsOnOrder AS "onOrder",
                    p.ReorderLevel AS "reorderLevel", p.Discontinued AS
                    "discontinued", p.ProductID AS "LambdaOrmParentId" FROM
                    Products p  WHERE  p.ProductID IN ($1) 
            - entity: Customers
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT c.CustomerID AS "id", c.CompanyName AS "name",
                c.ContactName AS "contact", c.ContactTitle AS "phone", c.Address
                AS "address", c.City AS "city", c.Region AS "region",
                c.PostalCode AS "postalCode", c.Country AS "country",
                c.CustomerID AS "LambdaOrmParentId" FROM Customers c  WHERE 
                c.CustomerID IN ($1) 
      - stage: SqlServer
        info:
          entity: Orders
          dialect: SqlServer
          source: SqlServer
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.OrderID AS [__id],
            o.CustomerID AS [__customerId] FROM Orders o  WHERE o.OrderID = @id 
          children:
            - entity: Orders.details
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                SELECT o1.OrderID AS orderId, o1.ProductID AS productId,
                o1.UnitPrice AS unitPrice, o1.Quantity AS quantity, o1.Discount
                AS discount, o1.ProductID AS [__productId], o1.OrderID AS
                LambdaOrmParentId FROM [Order Details] o1  WHERE  o1.OrderID IN
                (@LambdaOrmParentId) 
              children:
                - entity: Products
                  dialect: SqlServer
                  source: SqlServer
                  sentence: >-
                    SELECT p.ProductID AS id, p.ProductName AS name,
                    p.SupplierID AS supplierId, p.CategoryID AS categoryId,
                    p.QuantityPerUnit AS quantity, p.UnitPrice AS price,
                    p.UnitsInStock AS inStock, p.UnitsOnOrder AS onOrder,
                    p.ReorderLevel AS reorderLevel, p.Discontinued AS
                    discontinued, p.ProductID AS LambdaOrmParentId FROM Products
                    p  WHERE  p.ProductID IN (@LambdaOrmParentId) 
            - entity: Customers
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                SELECT c.CustomerID AS id, c.CompanyName AS name, c.ContactName
                AS contact, c.ContactTitle AS phone, c.Address AS address,
                c.City AS city, c.Region AS region, c.PostalCode AS postalCode,
                c.Country AS country, c.CustomerID AS LambdaOrmParentId FROM
                Customers c  WHERE  c.CustomerID IN (@LambdaOrmParentId) 
      - stage: MongoDB
        info:
          entity: Orders
          dialect: MongoDB
          source: MongoDB
          sentence: >-
            [{"$match":{"_id":"$id$"}},{"$project":{"_id":0,"id":"$_id","customerId":"$CustomerID","employeeId":"$EmployeeID","orderDate":"$OrderDate","requiredDate":"$RequiredDate","shippedDate":"$ShippedDate","shipViaId":"$ShipVia","freight":"$Freight","name":"$ShipName","address":"$ShipAddress","city":"$ShipCity","region":"$ShipRegion","postalCode":"$ShipPostalCode","country":"$ShipCountry","__id":"$_id","__customerId":"$CustomerID","details":{"$map":{"input":"$\"Order
            Details\"","in":{"orderId":"$$this.OrderID","productId":"$$this.ProductID","unitPrice":"$$this.UnitPrice","quantity":"$$this.Quantity","discount":"$$this.Discount","__productId":"$$this.ProductID","LambdaOrmParentId":"$$this.OrderID"}}}}}]
          children:
            - entity: Orders.details
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                [{"$unwind":"$\"Order
                Details\""},{"$replaceRoot":{"newRoot":"$\"Order
                Details\""}},{"$match":{"OrderID":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"orderId":"$OrderID","productId":"$ProductID","unitPrice":"$UnitPrice","quantity":"$Quantity","discount":"$Discount","__productId":"$ProductID","LambdaOrmParentId":"$OrderID"}}]
              children:
                - entity: Products
                  dialect: MongoDB
                  source: MongoDB
                  sentence: >-
                    [{"$match":{"_id":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"id":"$_id","name":"$ProductName","supplierId":"$SupplierID","categoryId":"$CategoryID","quantity":"$QuantityPerUnit","price":"$UnitPrice","inStock":"$UnitsInStock","onOrder":"$UnitsOnOrder","reorderLevel":"$ReorderLevel","discontinued":"$Discontinued","LambdaOrmParentId":"$_id"}}]
            - entity: Customers
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                [{"$match":{"_id":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"id":"$_id","name":"$CompanyName","contact":"$ContactName","phone":"$ContactTitle","address":"$Address","city":"$City","region":"$Region","postalCode":"$PostalCode","country":"$Country","LambdaOrmParentId":"$_id"}}]
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.OrderID AS "__id", o.CustomerID AS "__customerId" FROM
            Orders o  WHERE o.OrderID = :id 
          children:
            - entity: Orders.details
              dialect: Oracle
              source: Oracle
              sentence: >-
                SELECT o1.OrderID AS "orderId", o1.ProductID AS "productId",
                o1.UnitPrice AS "unitPrice", o1.Quantity AS "quantity",
                o1.Discount AS "discount", o1.ProductID AS "__productId",
                o1.OrderID AS "LambdaOrmParentId" FROM "Order Details" o1 
                WHERE  o1.OrderID IN (:LambdaOrmParentId) 
              children:
                - entity: Products
                  dialect: Oracle
                  source: Oracle
                  sentence: >-
                    SELECT p.ProductID AS "id", p.ProductName AS "name",
                    p.SupplierID AS "supplierId", p.CategoryID AS "categoryId",
                    p.QuantityPerUnit AS "quantity", p.UnitPrice AS "price",
                    p.UnitsInStock AS "inStock", p.UnitsOnOrder AS "onOrder",
                    p.ReorderLevel AS "reorderLevel", p.Discontinued AS
                    "discontinued", p.ProductID AS "LambdaOrmParentId" FROM
                    Products p  WHERE  p.ProductID IN (:LambdaOrmParentId) 
            - entity: Customers
              dialect: Oracle
              source: Oracle
              sentence: >-
                SELECT c.CustomerID AS "id", c.CompanyName AS "name",
                c.ContactName AS "contact", c.ContactTitle AS "phone", c.Address
                AS "address", c.City AS "city", c.Region AS "region",
                c.PostalCode AS "postalCode", c.Country AS "country",
                c.CustomerID AS "LambdaOrmParentId" FROM Customers c  WHERE 
                c.CustomerID IN (:LambdaOrmParentId) 
    errors: 2
    expression: >-
      Orders.filter(p => p.id === id).include(p => [p.details.include(q =>
      q.product), p.customer])
    normalizeExpression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__id:p.id,__customerId:p.customerId}).filter(p=>(p.id==id)).include(p=>p.details.map(p=>{orderId:p.orderId,productId:p.productId,unitPrice:p.unitPrice,quantity:p.quantity,discount:p.discount,__productId:p.productId,LambdaOrmParentId:p.orderId}).filter(p=>in(p.orderId,LambdaOrmParentId)).include(q=>q.product.map(p=>{id:p.id,name:p.name,supplierId:p.supplierId,categoryId:p.categoryId,quantity:p.quantity,price:p.price,inStock:p.inStock,onOrder:p.onOrder,reorderLevel:p.reorderLevel,discontinued:p.discontinued,LambdaOrmParentId:p.id}).filter(p=>in(p.id,LambdaOrmParentId))))
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
          - name: LambdaOrmParentId
            type: integer
          - name: product
            type: Products
            children:
              - name: id
                type: integer
              - name: name
                type: string
              - name: supplierId
                type: integer
              - name: categoryId
                type: integer
              - name: quantity
                type: string
              - name: price
                type: decimal
              - name: inStock
                type: decimal
              - name: onOrder
                type: decimal
              - name: reorderLevel
                type: decimal
              - name: discontinued
                type: boolean
              - name: LambdaOrmParentId
                type: integer
      - name: customer
        type: Customers
        children:
          - name: id
            type: string
          - name: name
            type: string
          - name: contact
            type: string
          - name: phone
            type: string
          - name: address
            type: string
          - name: city
            type: string
          - name: region
            type: string
          - name: postalCode
            type: string
          - name: country
            type: string
          - name: LambdaOrmParentId
            type: string
    parameters:
      - name: id
        type: integer
      - name: details
        type: Orders.details
        children:
          - name: LambdaOrmParentId
            type: any
          - name: product
            type: Products
            children:
              - name: LambdaOrmParentId
                type: any
      - name: customer
        type: Customers
        children:
          - name: LambdaOrmParentId
            type: any
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Orders.details
          constraints: []
          children:
            - entity: Products
              constraints: []
        - entity: Customers
          constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 40
      name: select
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 64
          name: select
          children:
            - classtype: Sentence
              pos:
                ln: 0
                col: 69
              name: select
              children: []
              type: any
              entity: Products
              columns:
                - name: id
                  type: integer
                - name: name
                  type: string
                - name: supplierId
                  type: integer
                - name: categoryId
                  type: integer
                - name: quantity
                  type: string
                - name: price
                  type: decimal
                - name: inStock
                  type: decimal
                - name: onOrder
                  type: decimal
                - name: reorderLevel
                  type: decimal
                - name: discontinued
                  type: boolean
                - name: LambdaOrmParentId
                  type: integer
              parameters:
                - name: LambdaOrmParentId
                  type: any
              constraints: []
              values: []
              defaults: []
              clause: select
              alias: p
          type: any
          entity: Orders.details
          columns:
            - name: orderId
              type: integer
            - name: productId
              type: integer
            - name: unitPrice
              type: decimal
            - name: quantity
              type: decimal
            - name: discount
              type: decimal
            - name: __productId
              type: integer
            - name: LambdaOrmParentId
              type: integer
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: o1
        - classtype: Sentence
          pos:
            ln: 0
            col: 81
          name: select
          children: []
          type: any
          entity: Customers
          columns:
            - name: id
              type: string
            - name: name
              type: string
            - name: contact
              type: string
            - name: phone
              type: string
            - name: address
              type: string
            - name: city
              type: string
            - name: region
              type: string
            - name: postalCode
              type: string
            - name: country
              type: string
            - name: LambdaOrmParentId
              type: string
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: c
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: __id
          type: integer
        - name: __customerId
          type: string
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: o
    executions:
      - stage: MySQL
      - stage: MariaDB
      - stage: PostgreSQL
      - stage: SqlServer
        error: not equal MySQL
        result:
          - id: 1
            customerId: VINET
            employeeId: 5
            orderDate: '1996-07-04T00:00:00.000Z'
            requiredDate: '1996-08-01T00:00:00.000Z'
            shippedDate: '1996-07-16T00:00:00.000Z'
            shipViaId: 3
            freight: 32.38
            name: Vins et alcools Chevalier
            address: 59 rue de l-Abbaye
            city: Reims
            region: null
            postalCode: '51100'
            country: France
            details:
              - orderId: 1
                productId: 2
                unitPrice: 19
                quantity: 15
                discount: 0
                product:
                  id: 2
                  name: Chang
                  supplierId: 1
                  categoryId: 1
                  quantity: 24 - 12 oz bottles
                  price: 19
                  inStock: 17
                  onOrder: 40
                  reorderLevel: 25
                  discontinued: false
              - orderId: 1
                productId: 29
                unitPrice: 123.79
                quantity: 20
                discount: 0
                product:
                  id: 29
                  name: Thringer Rostbratwurst
                  supplierId: 12
                  categoryId: 6
                  quantity: 50 bags x 30 sausgs.
                  price: 123.79
                  inStock: 0
                  onOrder: 0
                  reorderLevel: 0
                  discontinued: true
            customer:
              id: VINET
              name: Vins et alcools Chevalier
              contact: Paul Henriot
              phone: Accounting Manager
              address: 59 rue de l'Abbaye
              city: Reims
              region: null
              postalCode: '51100'
              country: France
      - stage: MongoDB
        error: not equal MySQL
        result:
          - id: 1
            customerId: VINET
            employeeId: 5
            orderDate: '1996-07-04T00:00:00.000+02:00'
            requiredDate: '1996-08-01'
            shippedDate: '1996-07-16'
            shipViaId: 3
            freight: 32.38
            name: Vins et alcools Chevalier
            address: 59 rue de l-Abbaye
            city: Reims
            region: null
            postalCode: '51100'
            country: France
            details:
              - orderId: 1
                productId: 11
                unitPrice: 14
                quantity: 12
                discount: 0
                product:
                  id: 11
                  name: Queso Cabrales
                  supplierId: 5
                  categoryId: 4
                  quantity: 1 kg pkg.
                  price: 21
                  inStock: 22
                  onOrder: 30
                  reorderLevel: 30
                  discontinued: false
              - orderId: 1
                productId: 42
                unitPrice: 9.8
                quantity: 10
                discount: 0
                product:
                  id: 42
                  name: Singaporean Hokkien Fried Mee
                  supplierId: 20
                  categoryId: 5
                  quantity: 32 - 1 kg pkgs.
                  price: 14
                  inStock: 26
                  onOrder: 0
                  reorderLevel: 0
                  discontinued: true
              - orderId: 1
                productId: 72
                unitPrice: 34.8
                quantity: 5
                discount: 0
                product:
                  id: 72
                  name: Mozzarella di Giovanni
                  supplierId: 14
                  categoryId: 4
                  quantity: 24 - 200 g pkgs.
                  price: 34.8
                  inStock: 14
                  onOrder: 0
                  reorderLevel: 0
                  discontinued: false
            customer:
              id: VINET
              name: Vins et alcools Chevalier
              contact: Paul Henriot
              phone: Accounting Manager
              address: 59 rue de l'Abbaye
              city: Reims
              region: null
              postalCode: '51100'
              country: France
      - stage: Oracle
    result:
      - id: 1
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        details:
          - orderId: 1
            productId: 11
            unitPrice: 14
            quantity: 12
            discount: 0
            product:
              id: 11
              name: Queso Cabrales
              supplierId: 5
              categoryId: 4
              quantity: 1 kg pkg.
              price: 21
              inStock: 22
              onOrder: 30
              reorderLevel: 30
              discontinued: false
          - orderId: 1
            productId: 42
            unitPrice: 9.8
            quantity: 10
            discount: 0
            product:
              id: 42
              name: Singaporean Hokkien Fried Mee
              supplierId: 20
              categoryId: 5
              quantity: 32 - 1 kg pkgs.
              price: 14
              inStock: 26
              onOrder: 0
              reorderLevel: 0
              discontinued: true
          - orderId: 1
            productId: 72
            unitPrice: 34.8
            quantity: 5
            discount: 0
            product:
              id: 72
              name: Mozzarella di Giovanni
              supplierId: 14
              categoryId: 4
              quantity: 24 - 200 g pkgs.
              price: 34.8
              inStock: 14
              onOrder: 0
              reorderLevel: 0
              discontinued: false
        customer:
          id: VINET
          name: Vins et alcools Chevalier
          contact: Paul Henriot
          phone: Accounting Manager
          address: 59 rue de l'Abbaye
          city: Reims
          region: null
          postalCode: '51100'
          country: France
  - name: include 5
    data: a
    sentences:
      - stage: MySQL
        info:
          entity: Orders
          dialect: MySQL
          source: MySQL
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.OrderID AS `__id`,
            o.CustomerID AS `__customerId` FROM Orders o  WHERE o.OrderID = ? 
          children:
            - entity: Orders.details
              dialect: MySQL
              source: MySQL
              sentence: >-
                SELECT o1.OrderID AS orderId, o1.ProductID AS productId,
                o1.UnitPrice AS unitPrice, o1.Quantity AS quantity, o1.Discount
                AS discount, o1.ProductID AS `__productId`, o1.OrderID AS
                LambdaOrmParentId FROM `Order Details` o1  WHERE  o1.OrderID IN
                (?) 
              children:
                - entity: Products
                  dialect: MySQL
                  source: MySQL
                  sentence: >-
                    SELECT p.ProductID AS id, p.ProductName AS name,
                    p.SupplierID AS supplierId, p.CategoryID AS categoryId,
                    p.QuantityPerUnit AS quantity, p.UnitPrice AS price,
                    p.UnitsInStock AS inStock, p.UnitsOnOrder AS onOrder,
                    p.ReorderLevel AS reorderLevel, p.Discontinued AS
                    discontinued, p.CategoryID AS `__categoryId`, p.ProductID AS
                    LambdaOrmParentId FROM Products p  WHERE  p.ProductID IN
                    (?) 
                  children:
                    - entity: Categories
                      dialect: MySQL
                      source: MySQL
                      sentence: >-
                        SELECT c.CategoryID AS id, c.CategoryName AS name,
                        c.Description AS description, c.CategoryID AS
                        LambdaOrmParentId FROM Categories c  WHERE  c.CategoryID
                        IN (?) 
            - entity: Customers
              dialect: MySQL
              source: MySQL
              sentence: >-
                SELECT c1.CustomerID AS id, c1.CompanyName AS name,
                c1.ContactName AS contact, c1.ContactTitle AS phone, c1.Address
                AS address, c1.City AS city, c1.Region AS region, c1.PostalCode
                AS postalCode, c1.Country AS country, c1.CustomerID AS
                LambdaOrmParentId FROM Customers c1  WHERE  c1.CustomerID IN
                (?) 
      - stage: MariaDB
        info:
          entity: Orders
          dialect: MariaDB
          source: MariaDB
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.OrderID AS `__id`,
            o.CustomerID AS `__customerId` FROM Orders o  WHERE o.OrderID = ? 
          children:
            - entity: Orders.details
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                SELECT o1.OrderID AS orderId, o1.ProductID AS productId,
                o1.UnitPrice AS unitPrice, o1.Quantity AS quantity, o1.Discount
                AS discount, o1.ProductID AS `__productId`, o1.OrderID AS
                LambdaOrmParentId FROM `Order Details` o1  WHERE  o1.OrderID IN
                (?) 
              children:
                - entity: Products
                  dialect: MariaDB
                  source: MariaDB
                  sentence: >-
                    SELECT p.ProductID AS id, p.ProductName AS name,
                    p.SupplierID AS supplierId, p.CategoryID AS categoryId,
                    p.QuantityPerUnit AS quantity, p.UnitPrice AS price,
                    p.UnitsInStock AS inStock, p.UnitsOnOrder AS onOrder,
                    p.ReorderLevel AS reorderLevel, p.Discontinued AS
                    discontinued, p.CategoryID AS `__categoryId`, p.ProductID AS
                    LambdaOrmParentId FROM Products p  WHERE  p.ProductID IN
                    (?) 
                  children:
                    - entity: Categories
                      dialect: MariaDB
                      source: MariaDB
                      sentence: >-
                        SELECT c.CategoryID AS id, c.CategoryName AS name,
                        c.Description AS description, c.CategoryID AS
                        LambdaOrmParentId FROM Categories c  WHERE  c.CategoryID
                        IN (?) 
            - entity: Customers
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                SELECT c1.CustomerID AS id, c1.CompanyName AS name,
                c1.ContactName AS contact, c1.ContactTitle AS phone, c1.Address
                AS address, c1.City AS city, c1.Region AS region, c1.PostalCode
                AS postalCode, c1.Country AS country, c1.CustomerID AS
                LambdaOrmParentId FROM Customers c1  WHERE  c1.CustomerID IN
                (?) 
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.OrderID AS "__id", o.CustomerID AS "__customerId" FROM
            Orders o  WHERE o.OrderID = $1 
          children:
            - entity: Orders.details
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT o1.OrderID AS "orderId", o1.ProductID AS "productId",
                o1.UnitPrice AS "unitPrice", o1.Quantity AS "quantity",
                o1.Discount AS "discount", o1.ProductID AS "__productId",
                o1.OrderID AS "LambdaOrmParentId" FROM "Order Details" o1 
                WHERE  o1.OrderID IN ($1) 
              children:
                - entity: Products
                  dialect: PostgreSQL
                  source: PostgreSQL
                  sentence: >-
                    SELECT p.ProductID AS "id", p.ProductName AS "name",
                    p.SupplierID AS "supplierId", p.CategoryID AS "categoryId",
                    p.QuantityPerUnit AS "quantity", p.UnitPrice AS "price",
                    p.UnitsInStock AS "inStock", p.UnitsOnOrder AS "onOrder",
                    p.ReorderLevel AS "reorderLevel", p.Discontinued AS
                    "discontinued", p.CategoryID AS "__categoryId", p.ProductID
                    AS "LambdaOrmParentId" FROM Products p  WHERE  p.ProductID
                    IN ($1) 
                  children:
                    - entity: Categories
                      dialect: PostgreSQL
                      source: PostgreSQL
                      sentence: >-
                        SELECT c.CategoryID AS "id", c.CategoryName AS "name",
                        c.Description AS "description", c.CategoryID AS
                        "LambdaOrmParentId" FROM Categories c  WHERE 
                        c.CategoryID IN ($1) 
            - entity: Customers
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT c1.CustomerID AS "id", c1.CompanyName AS "name",
                c1.ContactName AS "contact", c1.ContactTitle AS "phone",
                c1.Address AS "address", c1.City AS "city", c1.Region AS
                "region", c1.PostalCode AS "postalCode", c1.Country AS
                "country", c1.CustomerID AS "LambdaOrmParentId" FROM Customers
                c1  WHERE  c1.CustomerID IN ($1) 
      - stage: SqlServer
        info:
          entity: Orders
          dialect: SqlServer
          source: SqlServer
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.OrderID AS [__id],
            o.CustomerID AS [__customerId] FROM Orders o  WHERE o.OrderID = @id 
          children:
            - entity: Orders.details
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                SELECT o1.OrderID AS orderId, o1.ProductID AS productId,
                o1.UnitPrice AS unitPrice, o1.Quantity AS quantity, o1.Discount
                AS discount, o1.ProductID AS [__productId], o1.OrderID AS
                LambdaOrmParentId FROM [Order Details] o1  WHERE  o1.OrderID IN
                (@LambdaOrmParentId) 
              children:
                - entity: Products
                  dialect: SqlServer
                  source: SqlServer
                  sentence: >-
                    SELECT p.ProductID AS id, p.ProductName AS name,
                    p.SupplierID AS supplierId, p.CategoryID AS categoryId,
                    p.QuantityPerUnit AS quantity, p.UnitPrice AS price,
                    p.UnitsInStock AS inStock, p.UnitsOnOrder AS onOrder,
                    p.ReorderLevel AS reorderLevel, p.Discontinued AS
                    discontinued, p.CategoryID AS [__categoryId], p.ProductID AS
                    LambdaOrmParentId FROM Products p  WHERE  p.ProductID IN
                    (@LambdaOrmParentId) 
                  children:
                    - entity: Categories
                      dialect: SqlServer
                      source: SqlServer
                      sentence: >-
                        SELECT c.CategoryID AS id, c.CategoryName AS name,
                        c.Description AS description, c.CategoryID AS
                        LambdaOrmParentId FROM Categories c  WHERE  c.CategoryID
                        IN (@LambdaOrmParentId) 
            - entity: Customers
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                SELECT c1.CustomerID AS id, c1.CompanyName AS name,
                c1.ContactName AS contact, c1.ContactTitle AS phone, c1.Address
                AS address, c1.City AS city, c1.Region AS region, c1.PostalCode
                AS postalCode, c1.Country AS country, c1.CustomerID AS
                LambdaOrmParentId FROM Customers c1  WHERE  c1.CustomerID IN
                (@LambdaOrmParentId) 
      - stage: MongoDB
        info:
          entity: Orders
          dialect: MongoDB
          source: MongoDB
          sentence: >-
            [{"$match":{"_id":"$id$"}},{"$project":{"_id":0,"id":"$_id","customerId":"$CustomerID","employeeId":"$EmployeeID","orderDate":"$OrderDate","requiredDate":"$RequiredDate","shippedDate":"$ShippedDate","shipViaId":"$ShipVia","freight":"$Freight","name":"$ShipName","address":"$ShipAddress","city":"$ShipCity","region":"$ShipRegion","postalCode":"$ShipPostalCode","country":"$ShipCountry","__id":"$_id","__customerId":"$CustomerID","details":{"$map":{"input":"$\"Order
            Details\"","in":{"orderId":"$$this.OrderID","productId":"$$this.ProductID","unitPrice":"$$this.UnitPrice","quantity":"$$this.Quantity","discount":"$$this.Discount","__productId":"$$this.ProductID","LambdaOrmParentId":"$$this.OrderID"}}}}}]
          children:
            - entity: Orders.details
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                [{"$unwind":"$\"Order
                Details\""},{"$replaceRoot":{"newRoot":"$\"Order
                Details\""}},{"$match":{"OrderID":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"orderId":"$OrderID","productId":"$ProductID","unitPrice":"$UnitPrice","quantity":"$Quantity","discount":"$Discount","__productId":"$ProductID","LambdaOrmParentId":"$OrderID"}}]
              children:
                - entity: Products
                  dialect: MongoDB
                  source: MongoDB
                  sentence: >-
                    [{"$match":{"_id":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"id":"$_id","name":"$ProductName","supplierId":"$SupplierID","categoryId":"$CategoryID","quantity":"$QuantityPerUnit","price":"$UnitPrice","inStock":"$UnitsInStock","onOrder":"$UnitsOnOrder","reorderLevel":"$ReorderLevel","discontinued":"$Discontinued","__categoryId":"$CategoryID","LambdaOrmParentId":"$_id"}}]
                  children:
                    - entity: Categories
                      dialect: MongoDB
                      source: MongoDB
                      sentence: >-
                        [{"$match":{"_id":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"id":"$_id","name":"$CategoryName","description":"$Description","LambdaOrmParentId":"$_id"}}]
            - entity: Customers
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                [{"$match":{"_id":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"id":"$_id","name":"$CompanyName","contact":"$ContactName","phone":"$ContactTitle","address":"$Address","city":"$City","region":"$Region","postalCode":"$PostalCode","country":"$Country","LambdaOrmParentId":"$_id"}}]
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.OrderID AS "__id", o.CustomerID AS "__customerId" FROM
            Orders o  WHERE o.OrderID = :id 
          children:
            - entity: Orders.details
              dialect: Oracle
              source: Oracle
              sentence: >-
                SELECT o1.OrderID AS "orderId", o1.ProductID AS "productId",
                o1.UnitPrice AS "unitPrice", o1.Quantity AS "quantity",
                o1.Discount AS "discount", o1.ProductID AS "__productId",
                o1.OrderID AS "LambdaOrmParentId" FROM "Order Details" o1 
                WHERE  o1.OrderID IN (:LambdaOrmParentId) 
              children:
                - entity: Products
                  dialect: Oracle
                  source: Oracle
                  sentence: >-
                    SELECT p.ProductID AS "id", p.ProductName AS "name",
                    p.SupplierID AS "supplierId", p.CategoryID AS "categoryId",
                    p.QuantityPerUnit AS "quantity", p.UnitPrice AS "price",
                    p.UnitsInStock AS "inStock", p.UnitsOnOrder AS "onOrder",
                    p.ReorderLevel AS "reorderLevel", p.Discontinued AS
                    "discontinued", p.CategoryID AS "__categoryId", p.ProductID
                    AS "LambdaOrmParentId" FROM Products p  WHERE  p.ProductID
                    IN (:LambdaOrmParentId) 
                  children:
                    - entity: Categories
                      dialect: Oracle
                      source: Oracle
                      sentence: >-
                        SELECT c.CategoryID AS "id", c.CategoryName AS "name",
                        c.Description AS "description", c.CategoryID AS
                        "LambdaOrmParentId" FROM Categories c  WHERE 
                        c.CategoryID IN (:LambdaOrmParentId) 
            - entity: Customers
              dialect: Oracle
              source: Oracle
              sentence: >-
                SELECT c1.CustomerID AS "id", c1.CompanyName AS "name",
                c1.ContactName AS "contact", c1.ContactTitle AS "phone",
                c1.Address AS "address", c1.City AS "city", c1.Region AS
                "region", c1.PostalCode AS "postalCode", c1.Country AS
                "country", c1.CustomerID AS "LambdaOrmParentId" FROM Customers
                c1  WHERE  c1.CustomerID IN (:LambdaOrmParentId) 
    errors: 2
    expression: >-
      Orders.filter(p => p.id === id).include(p => [p.details.include(q =>
      q.product.include(p => p.category)), p.customer])
    normalizeExpression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__id:p.id,__customerId:p.customerId}).filter(p=>(p.id==id)).include(p=>p.details.map(p=>{orderId:p.orderId,productId:p.productId,unitPrice:p.unitPrice,quantity:p.quantity,discount:p.discount,__productId:p.productId,LambdaOrmParentId:p.orderId}).filter(p=>in(p.orderId,LambdaOrmParentId)).include(q=>q.product.map(p=>{id:p.id,name:p.name,supplierId:p.supplierId,categoryId:p.categoryId,quantity:p.quantity,price:p.price,inStock:p.inStock,onOrder:p.onOrder,reorderLevel:p.reorderLevel,discontinued:p.discontinued,__categoryId:p.categoryId,LambdaOrmParentId:p.id}).filter(p=>in(p.id,LambdaOrmParentId)).include(p=>p.category.map(p=>{id:p.id,name:p.name,description:p.description,LambdaOrmParentId:p.id}).filter(p=>in(p.id,LambdaOrmParentId)))))
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
          - name: LambdaOrmParentId
            type: integer
          - name: product
            type: Products
            children:
              - name: id
                type: integer
              - name: name
                type: string
              - name: supplierId
                type: integer
              - name: categoryId
                type: integer
              - name: quantity
                type: string
              - name: price
                type: decimal
              - name: inStock
                type: decimal
              - name: onOrder
                type: decimal
              - name: reorderLevel
                type: decimal
              - name: discontinued
                type: boolean
              - name: LambdaOrmParentId
                type: integer
              - name: category
                type: Categories
                children:
                  - name: id
                    type: integer
                  - name: name
                    type: string
                  - name: description
                    type: string
                  - name: LambdaOrmParentId
                    type: integer
      - name: customer
        type: Customers
        children:
          - name: id
            type: string
          - name: name
            type: string
          - name: contact
            type: string
          - name: phone
            type: string
          - name: address
            type: string
          - name: city
            type: string
          - name: region
            type: string
          - name: postalCode
            type: string
          - name: country
            type: string
          - name: LambdaOrmParentId
            type: string
    parameters:
      - name: id
        type: integer
      - name: details
        type: Orders.details
        children:
          - name: LambdaOrmParentId
            type: any
          - name: product
            type: Products
            children:
              - name: LambdaOrmParentId
                type: any
              - name: category
                type: Categories
                children:
                  - name: LambdaOrmParentId
                    type: any
      - name: customer
        type: Customers
        children:
          - name: LambdaOrmParentId
            type: any
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Orders.details
          constraints: []
          children:
            - entity: Products
              constraints: []
              children:
                - entity: Categories
                  constraints: []
        - entity: Customers
          constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 40
      name: select
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 64
          name: select
          children:
            - classtype: Sentence
              pos:
                ln: 0
                col: 87
              name: select
              children:
                - classtype: Sentence
                  pos:
                    ln: 0
                    col: 92
                  name: select
                  children: []
                  type: any
                  entity: Categories
                  columns:
                    - name: id
                      type: integer
                    - name: name
                      type: string
                    - name: description
                      type: string
                    - name: LambdaOrmParentId
                      type: integer
                  parameters:
                    - name: LambdaOrmParentId
                      type: any
                  constraints: []
                  values: []
                  defaults: []
                  clause: select
                  alias: c
              type: any
              entity: Products
              columns:
                - name: id
                  type: integer
                - name: name
                  type: string
                - name: supplierId
                  type: integer
                - name: categoryId
                  type: integer
                - name: quantity
                  type: string
                - name: price
                  type: decimal
                - name: inStock
                  type: decimal
                - name: onOrder
                  type: decimal
                - name: reorderLevel
                  type: decimal
                - name: discontinued
                  type: boolean
                - name: __categoryId
                  type: integer
                - name: LambdaOrmParentId
                  type: integer
              parameters:
                - name: LambdaOrmParentId
                  type: any
              constraints: []
              values: []
              defaults: []
              clause: select
              alias: p
          type: any
          entity: Orders.details
          columns:
            - name: orderId
              type: integer
            - name: productId
              type: integer
            - name: unitPrice
              type: decimal
            - name: quantity
              type: decimal
            - name: discount
              type: decimal
            - name: __productId
              type: integer
            - name: LambdaOrmParentId
              type: integer
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: o1
        - classtype: Sentence
          pos:
            ln: 0
            col: 106
          name: select
          children: []
          type: any
          entity: Customers
          columns:
            - name: id
              type: string
            - name: name
              type: string
            - name: contact
              type: string
            - name: phone
              type: string
            - name: address
              type: string
            - name: city
              type: string
            - name: region
              type: string
            - name: postalCode
              type: string
            - name: country
              type: string
            - name: LambdaOrmParentId
              type: string
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: c1
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: __id
          type: integer
        - name: __customerId
          type: string
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: o
    executions:
      - stage: MySQL
      - stage: MariaDB
      - stage: PostgreSQL
      - stage: SqlServer
        error: not equal MySQL
        result:
          - id: 1
            customerId: VINET
            employeeId: 5
            orderDate: '1996-07-04T00:00:00.000Z'
            requiredDate: '1996-08-01T00:00:00.000Z'
            shippedDate: '1996-07-16T00:00:00.000Z'
            shipViaId: 3
            freight: 32.38
            name: Vins et alcools Chevalier
            address: 59 rue de l-Abbaye
            city: Reims
            region: null
            postalCode: '51100'
            country: France
            details:
              - orderId: 1
                productId: 2
                unitPrice: 19
                quantity: 15
                discount: 0
                product:
                  id: 2
                  name: Chang
                  supplierId: 1
                  categoryId: 1
                  quantity: 24 - 12 oz bottles
                  price: 19
                  inStock: 17
                  onOrder: 40
                  reorderLevel: 25
                  discontinued: false
                  category:
                    id: 1
                    name: Beverages
                    description: Soft drinks, coffees, teas, beers, and ales
              - orderId: 1
                productId: 29
                unitPrice: 123.79
                quantity: 20
                discount: 0
                product:
                  id: 29
                  name: Thringer Rostbratwurst
                  supplierId: 12
                  categoryId: 6
                  quantity: 50 bags x 30 sausgs.
                  price: 123.79
                  inStock: 0
                  onOrder: 0
                  reorderLevel: 0
                  discontinued: true
                  category:
                    id: 6
                    name: Meat/Poultry
                    description: Prepared meats
            customer:
              id: VINET
              name: Vins et alcools Chevalier
              contact: Paul Henriot
              phone: Accounting Manager
              address: 59 rue de l'Abbaye
              city: Reims
              region: null
              postalCode: '51100'
              country: France
      - stage: MongoDB
        error: not equal MySQL
        result:
          - id: 1
            customerId: VINET
            employeeId: 5
            orderDate: '1996-07-04T00:00:00.000+02:00'
            requiredDate: '1996-08-01'
            shippedDate: '1996-07-16'
            shipViaId: 3
            freight: 32.38
            name: Vins et alcools Chevalier
            address: 59 rue de l-Abbaye
            city: Reims
            region: null
            postalCode: '51100'
            country: France
            details:
              - orderId: 1
                productId: 11
                unitPrice: 14
                quantity: 12
                discount: 0
                product:
                  id: 11
                  name: Queso Cabrales
                  supplierId: 5
                  categoryId: 4
                  quantity: 1 kg pkg.
                  price: 21
                  inStock: 22
                  onOrder: 30
                  reorderLevel: 30
                  discontinued: false
                  category:
                    id: 4
                    name: Dairy Products
                    description: Cheeses
              - orderId: 1
                productId: 42
                unitPrice: 9.8
                quantity: 10
                discount: 0
                product:
                  id: 42
                  name: Singaporean Hokkien Fried Mee
                  supplierId: 20
                  categoryId: 5
                  quantity: 32 - 1 kg pkgs.
                  price: 14
                  inStock: 26
                  onOrder: 0
                  reorderLevel: 0
                  discontinued: true
                  category:
                    id: 5
                    name: Grains/Cereals
                    description: Breads, crackers, pasta, and cereal
              - orderId: 1
                productId: 72
                unitPrice: 34.8
                quantity: 5
                discount: 0
                product:
                  id: 72
                  name: Mozzarella di Giovanni
                  supplierId: 14
                  categoryId: 4
                  quantity: 24 - 200 g pkgs.
                  price: 34.8
                  inStock: 14
                  onOrder: 0
                  reorderLevel: 0
                  discontinued: false
                  category:
                    id: 4
                    name: Dairy Products
                    description: Cheeses
            customer:
              id: VINET
              name: Vins et alcools Chevalier
              contact: Paul Henriot
              phone: Accounting Manager
              address: 59 rue de l'Abbaye
              city: Reims
              region: null
              postalCode: '51100'
              country: France
      - stage: Oracle
    result:
      - id: 1
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        details:
          - orderId: 1
            productId: 11
            unitPrice: 14
            quantity: 12
            discount: 0
            product:
              id: 11
              name: Queso Cabrales
              supplierId: 5
              categoryId: 4
              quantity: 1 kg pkg.
              price: 21
              inStock: 22
              onOrder: 30
              reorderLevel: 30
              discontinued: false
              category:
                id: 4
                name: Dairy Products
                description: Cheeses
          - orderId: 1
            productId: 42
            unitPrice: 9.8
            quantity: 10
            discount: 0
            product:
              id: 42
              name: Singaporean Hokkien Fried Mee
              supplierId: 20
              categoryId: 5
              quantity: 32 - 1 kg pkgs.
              price: 14
              inStock: 26
              onOrder: 0
              reorderLevel: 0
              discontinued: true
              category:
                id: 5
                name: Grains/Cereals
                description: Breads, crackers, pasta, and cereal
          - orderId: 1
            productId: 72
            unitPrice: 34.8
            quantity: 5
            discount: 0
            product:
              id: 72
              name: Mozzarella di Giovanni
              supplierId: 14
              categoryId: 4
              quantity: 24 - 200 g pkgs.
              price: 34.8
              inStock: 14
              onOrder: 0
              reorderLevel: 0
              discontinued: false
              category:
                id: 4
                name: Dairy Products
                description: Cheeses
        customer:
          id: VINET
          name: Vins et alcools Chevalier
          contact: Paul Henriot
          phone: Accounting Manager
          address: 59 rue de l'Abbaye
          city: Reims
          region: null
          postalCode: '51100'
          country: France
  - name: include 6
    data: a
    sentences:
      - stage: MySQL
        info:
          entity: Orders
          dialect: MySQL
          source: MySQL
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.OrderID AS `__id`,
            o.CustomerID AS `__customerId` FROM Orders o  WHERE o.OrderID = ? 
          children:
            - entity: Orders.details
              dialect: MySQL
              source: MySQL
              sentence: >-
                SELECT o1.Quantity AS quantity, o1.UnitPrice AS unitPrice,
                o1.ProductID AS productId, o1.OrderID AS LambdaOrmParentId FROM
                `Order Details` o1  WHERE  o1.OrderID IN (?) 
            - entity: Customers
              dialect: MySQL
              source: MySQL
              sentence: >-
                SELECT c.CustomerID AS id, c.CompanyName AS name, c.ContactName
                AS contact, c.ContactTitle AS phone, c.Address AS address,
                c.City AS city, c.Region AS region, c.PostalCode AS postalCode,
                c.Country AS country, c.CustomerID AS LambdaOrmParentId FROM
                Customers c  WHERE  c.CustomerID IN (?) 
      - stage: MariaDB
        info:
          entity: Orders
          dialect: MariaDB
          source: MariaDB
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.OrderID AS `__id`,
            o.CustomerID AS `__customerId` FROM Orders o  WHERE o.OrderID = ? 
          children:
            - entity: Orders.details
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                SELECT o1.Quantity AS quantity, o1.UnitPrice AS unitPrice,
                o1.ProductID AS productId, o1.OrderID AS LambdaOrmParentId FROM
                `Order Details` o1  WHERE  o1.OrderID IN (?) 
            - entity: Customers
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                SELECT c.CustomerID AS id, c.CompanyName AS name, c.ContactName
                AS contact, c.ContactTitle AS phone, c.Address AS address,
                c.City AS city, c.Region AS region, c.PostalCode AS postalCode,
                c.Country AS country, c.CustomerID AS LambdaOrmParentId FROM
                Customers c  WHERE  c.CustomerID IN (?) 
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.OrderID AS "__id", o.CustomerID AS "__customerId" FROM
            Orders o  WHERE o.OrderID = $1 
          children:
            - entity: Orders.details
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT o1.Quantity AS "quantity", o1.UnitPrice AS "unitPrice",
                o1.ProductID AS "productId", o1.OrderID AS "LambdaOrmParentId"
                FROM "Order Details" o1  WHERE  o1.OrderID IN ($1) 
            - entity: Customers
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT c.CustomerID AS "id", c.CompanyName AS "name",
                c.ContactName AS "contact", c.ContactTitle AS "phone", c.Address
                AS "address", c.City AS "city", c.Region AS "region",
                c.PostalCode AS "postalCode", c.Country AS "country",
                c.CustomerID AS "LambdaOrmParentId" FROM Customers c  WHERE 
                c.CustomerID IN ($1) 
      - stage: SqlServer
        info:
          entity: Orders
          dialect: SqlServer
          source: SqlServer
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.OrderID AS [__id],
            o.CustomerID AS [__customerId] FROM Orders o  WHERE o.OrderID = @id 
          children:
            - entity: Orders.details
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                SELECT o1.Quantity AS quantity, o1.UnitPrice AS unitPrice,
                o1.ProductID AS productId, o1.OrderID AS LambdaOrmParentId FROM
                [Order Details] o1  WHERE  o1.OrderID IN (@LambdaOrmParentId) 
            - entity: Customers
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                SELECT c.CustomerID AS id, c.CompanyName AS name, c.ContactName
                AS contact, c.ContactTitle AS phone, c.Address AS address,
                c.City AS city, c.Region AS region, c.PostalCode AS postalCode,
                c.Country AS country, c.CustomerID AS LambdaOrmParentId FROM
                Customers c  WHERE  c.CustomerID IN (@LambdaOrmParentId) 
      - stage: MongoDB
        info:
          entity: Orders
          dialect: MongoDB
          source: MongoDB
          sentence: >-
            [{"$match":{"_id":"$id$"}},{"$project":{"_id":0,"id":"$_id","customerId":"$CustomerID","employeeId":"$EmployeeID","orderDate":"$OrderDate","requiredDate":"$RequiredDate","shippedDate":"$ShippedDate","shipViaId":"$ShipVia","freight":"$Freight","name":"$ShipName","address":"$ShipAddress","city":"$ShipCity","region":"$ShipRegion","postalCode":"$ShipPostalCode","country":"$ShipCountry","__id":"$_id","__customerId":"$CustomerID","details":{"$map":{"input":"$\"Order
            Details\"","in":{"quantity":"$$this.Quantity","unitPrice":"$$this.UnitPrice","productId":"$$this.ProductID","LambdaOrmParentId":"$$this.OrderID"}}}}}]
          children:
            - entity: Orders.details
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                [{"$unwind":"$\"Order
                Details\""},{"$replaceRoot":{"newRoot":"$\"Order
                Details\""}},{"$match":{"OrderID":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"quantity":"$Quantity","unitPrice":"$UnitPrice","productId":"$ProductID","LambdaOrmParentId":"$OrderID"}}]
            - entity: Customers
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                [{"$match":{"_id":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"id":"$_id","name":"$CompanyName","contact":"$ContactName","phone":"$ContactTitle","address":"$Address","city":"$City","region":"$Region","postalCode":"$PostalCode","country":"$Country","LambdaOrmParentId":"$_id"}}]
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.OrderID AS "__id", o.CustomerID AS "__customerId" FROM
            Orders o  WHERE o.OrderID = :id 
          children:
            - entity: Orders.details
              dialect: Oracle
              source: Oracle
              sentence: >-
                SELECT o1.Quantity AS "quantity", o1.UnitPrice AS "unitPrice",
                o1.ProductID AS "productId", o1.OrderID AS "LambdaOrmParentId"
                FROM "Order Details" o1  WHERE  o1.OrderID IN
                (:LambdaOrmParentId) 
            - entity: Customers
              dialect: Oracle
              source: Oracle
              sentence: >-
                SELECT c.CustomerID AS "id", c.CompanyName AS "name",
                c.ContactName AS "contact", c.ContactTitle AS "phone", c.Address
                AS "address", c.City AS "city", c.Region AS "region",
                c.PostalCode AS "postalCode", c.Country AS "country",
                c.CustomerID AS "LambdaOrmParentId" FROM Customers c  WHERE 
                c.CustomerID IN (:LambdaOrmParentId) 
    errors: 2
    expression: >-
      Orders.filter(p => p.id === id).include(p => [p.details.map(p => ({
      quantity: p.quantity, unitPrice: p.unitPrice, productId: p.productId })),
      p.customer])
    normalizeExpression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__id:p.id,__customerId:p.customerId}).filter(p=>(p.id==id)).include(p=>p.details.map(p=>{quantity:p.quantity,unitPrice:p.unitPrice,productId:p.productId,LambdaOrmParentId:p.orderId}).filter(p=>in(p.orderId,LambdaOrmParentId)))
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: quantity
            type: decimal
          - name: unitPrice
            type: decimal
          - name: productId
            type: integer
          - name: LambdaOrmParentId
            type: integer
      - name: customer
        type: Customers
        children:
          - name: id
            type: string
          - name: name
            type: string
          - name: contact
            type: string
          - name: phone
            type: string
          - name: address
            type: string
          - name: city
            type: string
          - name: region
            type: string
          - name: postalCode
            type: string
          - name: country
            type: string
          - name: LambdaOrmParentId
            type: string
    parameters:
      - name: id
        type: integer
      - name: details
        type: Orders.details
        children:
          - name: LambdaOrmParentId
            type: any
      - name: customer
        type: Customers
        children:
          - name: LambdaOrmParentId
            type: any
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Orders.details
          constraints: []
        - entity: Customers
          constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 40
      name: select
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 60
          name: select
          children: []
          type: any
          entity: Orders.details
          columns:
            - name: quantity
              type: decimal
            - name: unitPrice
              type: decimal
            - name: productId
              type: integer
            - name: LambdaOrmParentId
              type: integer
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: o1
        - classtype: Sentence
          pos:
            ln: 0
            col: 142
          name: select
          children: []
          type: any
          entity: Customers
          columns:
            - name: id
              type: string
            - name: name
              type: string
            - name: contact
              type: string
            - name: phone
              type: string
            - name: address
              type: string
            - name: city
              type: string
            - name: region
              type: string
            - name: postalCode
              type: string
            - name: country
              type: string
            - name: LambdaOrmParentId
              type: string
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: c
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: __id
          type: integer
        - name: __customerId
          type: string
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: o
    executions:
      - stage: MySQL
      - stage: MariaDB
      - stage: PostgreSQL
      - stage: SqlServer
        error: not equal MySQL
        result:
          - id: 1
            customerId: VINET
            employeeId: 5
            orderDate: '1996-07-04T00:00:00.000Z'
            requiredDate: '1996-08-01T00:00:00.000Z'
            shippedDate: '1996-07-16T00:00:00.000Z'
            shipViaId: 3
            freight: 32.38
            name: Vins et alcools Chevalier
            address: 59 rue de l-Abbaye
            city: Reims
            region: null
            postalCode: '51100'
            country: France
            details:
              - quantity: 15
                unitPrice: 19
                productId: 2
              - quantity: 20
                unitPrice: 123.79
                productId: 29
            customer:
              id: VINET
              name: Vins et alcools Chevalier
              contact: Paul Henriot
              phone: Accounting Manager
              address: 59 rue de l'Abbaye
              city: Reims
              region: null
              postalCode: '51100'
              country: France
      - stage: MongoDB
        error: not equal MySQL
        result:
          - id: 1
            customerId: VINET
            employeeId: 5
            orderDate: '1996-07-04T00:00:00.000+02:00'
            requiredDate: '1996-08-01'
            shippedDate: '1996-07-16'
            shipViaId: 3
            freight: 32.38
            name: Vins et alcools Chevalier
            address: 59 rue de l-Abbaye
            city: Reims
            region: null
            postalCode: '51100'
            country: France
            details:
              - quantity: 12
                unitPrice: 14
                productId: 11
              - quantity: 10
                unitPrice: 9.8
                productId: 42
              - quantity: 5
                unitPrice: 34.8
                productId: 72
            customer:
              id: VINET
              name: Vins et alcools Chevalier
              contact: Paul Henriot
              phone: Accounting Manager
              address: 59 rue de l'Abbaye
              city: Reims
              region: null
              postalCode: '51100'
              country: France
      - stage: Oracle
    result:
      - id: 1
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        details:
          - quantity: 12
            unitPrice: 14
            productId: 11
          - quantity: 10
            unitPrice: 9.8
            productId: 42
          - quantity: 5
            unitPrice: 34.8
            productId: 72
        customer:
          id: VINET
          name: Vins et alcools Chevalier
          contact: Paul Henriot
          phone: Accounting Manager
          address: 59 rue de l'Abbaye
          city: Reims
          region: null
          postalCode: '51100'
          country: France
  - name: include 7
    data: a
    sentences:
      - stage: MySQL
        info:
          entity: Orders
          dialect: MySQL
          source: MySQL
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.OrderID AS `__id`,
            o.CustomerID AS `__customerId` FROM Orders o  WHERE o.OrderID = ? 
          children:
            - entity: Orders.details
              dialect: MySQL
              source: MySQL
              sentence: >-
                SELECT o1.Quantity AS quantity, o1.UnitPrice AS unitPrice,
                o1.ProductID AS productId, o1.ProductID AS `__productId`,
                o1.OrderID AS LambdaOrmParentId FROM `Order Details` o1  WHERE 
                o1.OrderID IN (?) 
              children:
                - entity: Products
                  dialect: MySQL
                  source: MySQL
                  sentence: >-
                    SELECT p.ProductID AS id, p.ProductName AS name,
                    p.SupplierID AS supplierId, p.CategoryID AS categoryId,
                    p.QuantityPerUnit AS quantity, p.UnitPrice AS price,
                    p.UnitsInStock AS inStock, p.UnitsOnOrder AS onOrder,
                    p.ReorderLevel AS reorderLevel, p.Discontinued AS
                    discontinued, p.ProductID AS LambdaOrmParentId FROM Products
                    p  WHERE  p.ProductID IN (?) 
            - entity: Customers
              dialect: MySQL
              source: MySQL
              sentence: >-
                SELECT c.CustomerID AS id, c.CompanyName AS name, c.ContactName
                AS contact, c.ContactTitle AS phone, c.Address AS address,
                c.City AS city, c.Region AS region, c.PostalCode AS postalCode,
                c.Country AS country, c.CustomerID AS LambdaOrmParentId FROM
                Customers c  WHERE  c.CustomerID IN (?) 
      - stage: MariaDB
        info:
          entity: Orders
          dialect: MariaDB
          source: MariaDB
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.OrderID AS `__id`,
            o.CustomerID AS `__customerId` FROM Orders o  WHERE o.OrderID = ? 
          children:
            - entity: Orders.details
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                SELECT o1.Quantity AS quantity, o1.UnitPrice AS unitPrice,
                o1.ProductID AS productId, o1.ProductID AS `__productId`,
                o1.OrderID AS LambdaOrmParentId FROM `Order Details` o1  WHERE 
                o1.OrderID IN (?) 
              children:
                - entity: Products
                  dialect: MariaDB
                  source: MariaDB
                  sentence: >-
                    SELECT p.ProductID AS id, p.ProductName AS name,
                    p.SupplierID AS supplierId, p.CategoryID AS categoryId,
                    p.QuantityPerUnit AS quantity, p.UnitPrice AS price,
                    p.UnitsInStock AS inStock, p.UnitsOnOrder AS onOrder,
                    p.ReorderLevel AS reorderLevel, p.Discontinued AS
                    discontinued, p.ProductID AS LambdaOrmParentId FROM Products
                    p  WHERE  p.ProductID IN (?) 
            - entity: Customers
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                SELECT c.CustomerID AS id, c.CompanyName AS name, c.ContactName
                AS contact, c.ContactTitle AS phone, c.Address AS address,
                c.City AS city, c.Region AS region, c.PostalCode AS postalCode,
                c.Country AS country, c.CustomerID AS LambdaOrmParentId FROM
                Customers c  WHERE  c.CustomerID IN (?) 
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.OrderID AS "__id", o.CustomerID AS "__customerId" FROM
            Orders o  WHERE o.OrderID = $1 
          children:
            - entity: Orders.details
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT o1.Quantity AS "quantity", o1.UnitPrice AS "unitPrice",
                o1.ProductID AS "productId", o1.ProductID AS "__productId",
                o1.OrderID AS "LambdaOrmParentId" FROM "Order Details" o1 
                WHERE  o1.OrderID IN ($1) 
              children:
                - entity: Products
                  dialect: PostgreSQL
                  source: PostgreSQL
                  sentence: >-
                    SELECT p.ProductID AS "id", p.ProductName AS "name",
                    p.SupplierID AS "supplierId", p.CategoryID AS "categoryId",
                    p.QuantityPerUnit AS "quantity", p.UnitPrice AS "price",
                    p.UnitsInStock AS "inStock", p.UnitsOnOrder AS "onOrder",
                    p.ReorderLevel AS "reorderLevel", p.Discontinued AS
                    "discontinued", p.ProductID AS "LambdaOrmParentId" FROM
                    Products p  WHERE  p.ProductID IN ($1) 
            - entity: Customers
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT c.CustomerID AS "id", c.CompanyName AS "name",
                c.ContactName AS "contact", c.ContactTitle AS "phone", c.Address
                AS "address", c.City AS "city", c.Region AS "region",
                c.PostalCode AS "postalCode", c.Country AS "country",
                c.CustomerID AS "LambdaOrmParentId" FROM Customers c  WHERE 
                c.CustomerID IN ($1) 
      - stage: SqlServer
        info:
          entity: Orders
          dialect: SqlServer
          source: SqlServer
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.OrderID AS [__id],
            o.CustomerID AS [__customerId] FROM Orders o  WHERE o.OrderID = @id 
          children:
            - entity: Orders.details
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                SELECT o1.Quantity AS quantity, o1.UnitPrice AS unitPrice,
                o1.ProductID AS productId, o1.ProductID AS [__productId],
                o1.OrderID AS LambdaOrmParentId FROM [Order Details] o1  WHERE 
                o1.OrderID IN (@LambdaOrmParentId) 
              children:
                - entity: Products
                  dialect: SqlServer
                  source: SqlServer
                  sentence: >-
                    SELECT p.ProductID AS id, p.ProductName AS name,
                    p.SupplierID AS supplierId, p.CategoryID AS categoryId,
                    p.QuantityPerUnit AS quantity, p.UnitPrice AS price,
                    p.UnitsInStock AS inStock, p.UnitsOnOrder AS onOrder,
                    p.ReorderLevel AS reorderLevel, p.Discontinued AS
                    discontinued, p.ProductID AS LambdaOrmParentId FROM Products
                    p  WHERE  p.ProductID IN (@LambdaOrmParentId) 
            - entity: Customers
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                SELECT c.CustomerID AS id, c.CompanyName AS name, c.ContactName
                AS contact, c.ContactTitle AS phone, c.Address AS address,
                c.City AS city, c.Region AS region, c.PostalCode AS postalCode,
                c.Country AS country, c.CustomerID AS LambdaOrmParentId FROM
                Customers c  WHERE  c.CustomerID IN (@LambdaOrmParentId) 
      - stage: MongoDB
        info:
          entity: Orders
          dialect: MongoDB
          source: MongoDB
          sentence: >-
            [{"$match":{"_id":"$id$"}},{"$project":{"_id":0,"id":"$_id","customerId":"$CustomerID","employeeId":"$EmployeeID","orderDate":"$OrderDate","requiredDate":"$RequiredDate","shippedDate":"$ShippedDate","shipViaId":"$ShipVia","freight":"$Freight","name":"$ShipName","address":"$ShipAddress","city":"$ShipCity","region":"$ShipRegion","postalCode":"$ShipPostalCode","country":"$ShipCountry","__id":"$_id","__customerId":"$CustomerID","details":{"$map":{"input":"$\"Order
            Details\"","in":{"quantity":"$$this.Quantity","unitPrice":"$$this.UnitPrice","productId":"$$this.ProductID","__productId":"$$this.ProductID","LambdaOrmParentId":"$$this.OrderID"}}}}}]
          children:
            - entity: Orders.details
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                [{"$unwind":"$\"Order
                Details\""},{"$replaceRoot":{"newRoot":"$\"Order
                Details\""}},{"$match":{"OrderID":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"quantity":"$Quantity","unitPrice":"$UnitPrice","productId":"$ProductID","__productId":"$ProductID","LambdaOrmParentId":"$OrderID"}}]
              children:
                - entity: Products
                  dialect: MongoDB
                  source: MongoDB
                  sentence: >-
                    [{"$match":{"_id":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"id":"$_id","name":"$ProductName","supplierId":"$SupplierID","categoryId":"$CategoryID","quantity":"$QuantityPerUnit","price":"$UnitPrice","inStock":"$UnitsInStock","onOrder":"$UnitsOnOrder","reorderLevel":"$ReorderLevel","discontinued":"$Discontinued","LambdaOrmParentId":"$_id"}}]
            - entity: Customers
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                [{"$match":{"_id":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"id":"$_id","name":"$CompanyName","contact":"$ContactName","phone":"$ContactTitle","address":"$Address","city":"$City","region":"$Region","postalCode":"$PostalCode","country":"$Country","LambdaOrmParentId":"$_id"}}]
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.OrderID AS "__id", o.CustomerID AS "__customerId" FROM
            Orders o  WHERE o.OrderID = :id 
          children:
            - entity: Orders.details
              dialect: Oracle
              source: Oracle
              sentence: >-
                SELECT o1.Quantity AS "quantity", o1.UnitPrice AS "unitPrice",
                o1.ProductID AS "productId", o1.ProductID AS "__productId",
                o1.OrderID AS "LambdaOrmParentId" FROM "Order Details" o1 
                WHERE  o1.OrderID IN (:LambdaOrmParentId) 
              children:
                - entity: Products
                  dialect: Oracle
                  source: Oracle
                  sentence: >-
                    SELECT p.ProductID AS "id", p.ProductName AS "name",
                    p.SupplierID AS "supplierId", p.CategoryID AS "categoryId",
                    p.QuantityPerUnit AS "quantity", p.UnitPrice AS "price",
                    p.UnitsInStock AS "inStock", p.UnitsOnOrder AS "onOrder",
                    p.ReorderLevel AS "reorderLevel", p.Discontinued AS
                    "discontinued", p.ProductID AS "LambdaOrmParentId" FROM
                    Products p  WHERE  p.ProductID IN (:LambdaOrmParentId) 
            - entity: Customers
              dialect: Oracle
              source: Oracle
              sentence: >-
                SELECT c.CustomerID AS "id", c.CompanyName AS "name",
                c.ContactName AS "contact", c.ContactTitle AS "phone", c.Address
                AS "address", c.City AS "city", c.Region AS "region",
                c.PostalCode AS "postalCode", c.Country AS "country",
                c.CustomerID AS "LambdaOrmParentId" FROM Customers c  WHERE 
                c.CustomerID IN (:LambdaOrmParentId) 
    errors: 2
    expression: >-
      Orders.filter(p => p.id === id).include(p => [p.details.include(q =>
      q.product).map(p => ({ quantity: p.quantity, unitPrice: p.unitPrice,
      productId: p.productId })), p.customer])
    normalizeExpression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__id:p.id,__customerId:p.customerId}).filter(p=>(p.id==id)).include(p=>p.details.map(p=>{quantity:p.quantity,unitPrice:p.unitPrice,productId:p.productId,__productId:p.productId,LambdaOrmParentId:p.orderId}).filter(p=>in(p.orderId,LambdaOrmParentId)).include(q=>q.product.map(p=>{id:p.id,name:p.name,supplierId:p.supplierId,categoryId:p.categoryId,quantity:p.quantity,price:p.price,inStock:p.inStock,onOrder:p.onOrder,reorderLevel:p.reorderLevel,discontinued:p.discontinued,LambdaOrmParentId:p.id}).filter(p=>in(p.id,LambdaOrmParentId))))
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: quantity
            type: decimal
          - name: unitPrice
            type: decimal
          - name: productId
            type: integer
          - name: LambdaOrmParentId
            type: integer
          - name: product
            type: Products
            children:
              - name: id
                type: integer
              - name: name
                type: string
              - name: supplierId
                type: integer
              - name: categoryId
                type: integer
              - name: quantity
                type: string
              - name: price
                type: decimal
              - name: inStock
                type: decimal
              - name: onOrder
                type: decimal
              - name: reorderLevel
                type: decimal
              - name: discontinued
                type: boolean
              - name: LambdaOrmParentId
                type: integer
      - name: customer
        type: Customers
        children:
          - name: id
            type: string
          - name: name
            type: string
          - name: contact
            type: string
          - name: phone
            type: string
          - name: address
            type: string
          - name: city
            type: string
          - name: region
            type: string
          - name: postalCode
            type: string
          - name: country
            type: string
          - name: LambdaOrmParentId
            type: string
    parameters:
      - name: id
        type: integer
      - name: details
        type: Orders.details
        children:
          - name: LambdaOrmParentId
            type: any
          - name: product
            type: Products
            children:
              - name: LambdaOrmParentId
                type: any
      - name: customer
        type: Customers
        children:
          - name: LambdaOrmParentId
            type: any
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Orders.details
          constraints: []
          children:
            - entity: Products
              constraints: []
        - entity: Customers
          constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 40
      name: select
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 84
          name: select
          children:
            - classtype: Sentence
              pos:
                ln: 0
                col: 69
              name: select
              children: []
              type: any
              entity: Products
              columns:
                - name: id
                  type: integer
                - name: name
                  type: string
                - name: supplierId
                  type: integer
                - name: categoryId
                  type: integer
                - name: quantity
                  type: string
                - name: price
                  type: decimal
                - name: inStock
                  type: decimal
                - name: onOrder
                  type: decimal
                - name: reorderLevel
                  type: decimal
                - name: discontinued
                  type: boolean
                - name: LambdaOrmParentId
                  type: integer
              parameters:
                - name: LambdaOrmParentId
                  type: any
              constraints: []
              values: []
              defaults: []
              clause: select
              alias: p
          type: any
          entity: Orders.details
          columns:
            - name: quantity
              type: decimal
            - name: unitPrice
              type: decimal
            - name: productId
              type: integer
            - name: __productId
              type: integer
            - name: LambdaOrmParentId
              type: integer
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: o1
        - classtype: Sentence
          pos:
            ln: 0
            col: 166
          name: select
          children: []
          type: any
          entity: Customers
          columns:
            - name: id
              type: string
            - name: name
              type: string
            - name: contact
              type: string
            - name: phone
              type: string
            - name: address
              type: string
            - name: city
              type: string
            - name: region
              type: string
            - name: postalCode
              type: string
            - name: country
              type: string
            - name: LambdaOrmParentId
              type: string
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: c
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: __id
          type: integer
        - name: __customerId
          type: string
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: o
    executions:
      - stage: MySQL
      - stage: MariaDB
      - stage: PostgreSQL
      - stage: SqlServer
        error: not equal MySQL
        result:
          - id: 1
            customerId: VINET
            employeeId: 5
            orderDate: '1996-07-04T00:00:00.000Z'
            requiredDate: '1996-08-01T00:00:00.000Z'
            shippedDate: '1996-07-16T00:00:00.000Z'
            shipViaId: 3
            freight: 32.38
            name: Vins et alcools Chevalier
            address: 59 rue de l-Abbaye
            city: Reims
            region: null
            postalCode: '51100'
            country: France
            details:
              - quantity: 15
                unitPrice: 19
                productId: 2
                product:
                  id: 2
                  name: Chang
                  supplierId: 1
                  categoryId: 1
                  quantity: 24 - 12 oz bottles
                  price: 19
                  inStock: 17
                  onOrder: 40
                  reorderLevel: 25
                  discontinued: false
              - quantity: 20
                unitPrice: 123.79
                productId: 29
                product:
                  id: 29
                  name: Thringer Rostbratwurst
                  supplierId: 12
                  categoryId: 6
                  quantity: 50 bags x 30 sausgs.
                  price: 123.79
                  inStock: 0
                  onOrder: 0
                  reorderLevel: 0
                  discontinued: true
            customer:
              id: VINET
              name: Vins et alcools Chevalier
              contact: Paul Henriot
              phone: Accounting Manager
              address: 59 rue de l'Abbaye
              city: Reims
              region: null
              postalCode: '51100'
              country: France
      - stage: MongoDB
        error: not equal MySQL
        result:
          - id: 1
            customerId: VINET
            employeeId: 5
            orderDate: '1996-07-04T00:00:00.000+02:00'
            requiredDate: '1996-08-01'
            shippedDate: '1996-07-16'
            shipViaId: 3
            freight: 32.38
            name: Vins et alcools Chevalier
            address: 59 rue de l-Abbaye
            city: Reims
            region: null
            postalCode: '51100'
            country: France
            details:
              - quantity: 12
                unitPrice: 14
                productId: 11
                product:
                  id: 11
                  name: Queso Cabrales
                  supplierId: 5
                  categoryId: 4
                  quantity: 1 kg pkg.
                  price: 21
                  inStock: 22
                  onOrder: 30
                  reorderLevel: 30
                  discontinued: false
              - quantity: 10
                unitPrice: 9.8
                productId: 42
                product:
                  id: 42
                  name: Singaporean Hokkien Fried Mee
                  supplierId: 20
                  categoryId: 5
                  quantity: 32 - 1 kg pkgs.
                  price: 14
                  inStock: 26
                  onOrder: 0
                  reorderLevel: 0
                  discontinued: true
              - quantity: 5
                unitPrice: 34.8
                productId: 72
                product:
                  id: 72
                  name: Mozzarella di Giovanni
                  supplierId: 14
                  categoryId: 4
                  quantity: 24 - 200 g pkgs.
                  price: 34.8
                  inStock: 14
                  onOrder: 0
                  reorderLevel: 0
                  discontinued: false
            customer:
              id: VINET
              name: Vins et alcools Chevalier
              contact: Paul Henriot
              phone: Accounting Manager
              address: 59 rue de l'Abbaye
              city: Reims
              region: null
              postalCode: '51100'
              country: France
      - stage: Oracle
    result:
      - id: 1
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        details:
          - quantity: 12
            unitPrice: 14
            productId: 11
            product:
              id: 11
              name: Queso Cabrales
              supplierId: 5
              categoryId: 4
              quantity: 1 kg pkg.
              price: 21
              inStock: 22
              onOrder: 30
              reorderLevel: 30
              discontinued: false
          - quantity: 10
            unitPrice: 9.8
            productId: 42
            product:
              id: 42
              name: Singaporean Hokkien Fried Mee
              supplierId: 20
              categoryId: 5
              quantity: 32 - 1 kg pkgs.
              price: 14
              inStock: 26
              onOrder: 0
              reorderLevel: 0
              discontinued: true
          - quantity: 5
            unitPrice: 34.8
            productId: 72
            product:
              id: 72
              name: Mozzarella di Giovanni
              supplierId: 14
              categoryId: 4
              quantity: 24 - 200 g pkgs.
              price: 34.8
              inStock: 14
              onOrder: 0
              reorderLevel: 0
              discontinued: false
        customer:
          id: VINET
          name: Vins et alcools Chevalier
          contact: Paul Henriot
          phone: Accounting Manager
          address: 59 rue de l'Abbaye
          city: Reims
          region: null
          postalCode: '51100'
          country: France
  - name: include 8
    data: a
    sentences:
      - stage: MySQL
        info:
          entity: Orders
          dialect: MySQL
          source: MySQL
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.CustomerID AS
            `__customerId`, o.OrderID AS `__id` FROM Orders o  WHERE o.OrderID =
            ? 
          children:
            - entity: Customers
              dialect: MySQL
              source: MySQL
              sentence: >-
                SELECT c.CompanyName AS name, c.CustomerID AS LambdaOrmParentId
                FROM Customers c  WHERE  c.CustomerID IN (?) 
            - entity: Orders.details
              dialect: MySQL
              source: MySQL
              sentence: >-
                SELECT o1.Quantity AS quantity, o1.UnitPrice AS unitPrice,
                o1.ProductID AS `__productId`, o1.OrderID AS LambdaOrmParentId
                FROM `Order Details` o1  WHERE  o1.OrderID IN (?) 
              children:
                - entity: Products
                  dialect: MySQL
                  source: MySQL
                  sentence: >-
                    SELECT p.ProductName AS name, p.CategoryID AS
                    `__categoryId`, p.ProductID AS LambdaOrmParentId FROM
                    Products p  WHERE  p.ProductID IN (?) 
                  children:
                    - entity: Categories
                      dialect: MySQL
                      source: MySQL
                      sentence: >-
                        SELECT c1.CategoryName AS name, c1.CategoryID AS
                        LambdaOrmParentId FROM Categories c1  WHERE 
                        c1.CategoryID IN (?) 
      - stage: MariaDB
        info:
          entity: Orders
          dialect: MariaDB
          source: MariaDB
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.CustomerID AS
            `__customerId`, o.OrderID AS `__id` FROM Orders o  WHERE o.OrderID =
            ? 
          children:
            - entity: Customers
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                SELECT c.CompanyName AS name, c.CustomerID AS LambdaOrmParentId
                FROM Customers c  WHERE  c.CustomerID IN (?) 
            - entity: Orders.details
              dialect: MariaDB
              source: MariaDB
              sentence: >-
                SELECT o1.Quantity AS quantity, o1.UnitPrice AS unitPrice,
                o1.ProductID AS `__productId`, o1.OrderID AS LambdaOrmParentId
                FROM `Order Details` o1  WHERE  o1.OrderID IN (?) 
              children:
                - entity: Products
                  dialect: MariaDB
                  source: MariaDB
                  sentence: >-
                    SELECT p.ProductName AS name, p.CategoryID AS
                    `__categoryId`, p.ProductID AS LambdaOrmParentId FROM
                    Products p  WHERE  p.ProductID IN (?) 
                  children:
                    - entity: Categories
                      dialect: MariaDB
                      source: MariaDB
                      sentence: >-
                        SELECT c1.CategoryName AS name, c1.CategoryID AS
                        LambdaOrmParentId FROM Categories c1  WHERE 
                        c1.CategoryID IN (?) 
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.CustomerID AS "__customerId", o.OrderID AS "__id" FROM
            Orders o  WHERE o.OrderID = $1 
          children:
            - entity: Customers
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT c.CompanyName AS "name", c.CustomerID AS
                "LambdaOrmParentId" FROM Customers c  WHERE  c.CustomerID IN
                ($1) 
            - entity: Orders.details
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT o1.Quantity AS "quantity", o1.UnitPrice AS "unitPrice",
                o1.ProductID AS "__productId", o1.OrderID AS "LambdaOrmParentId"
                FROM "Order Details" o1  WHERE  o1.OrderID IN ($1) 
              children:
                - entity: Products
                  dialect: PostgreSQL
                  source: PostgreSQL
                  sentence: >-
                    SELECT p.ProductName AS "name", p.CategoryID AS
                    "__categoryId", p.ProductID AS "LambdaOrmParentId" FROM
                    Products p  WHERE  p.ProductID IN ($1) 
                  children:
                    - entity: Categories
                      dialect: PostgreSQL
                      source: PostgreSQL
                      sentence: >-
                        SELECT c1.CategoryName AS "name", c1.CategoryID AS
                        "LambdaOrmParentId" FROM Categories c1  WHERE 
                        c1.CategoryID IN ($1) 
      - stage: SqlServer
        info:
          entity: Orders
          dialect: SqlServer
          source: SqlServer
          sentence: >-
            SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS
            employeeId, o.OrderDate AS orderDate, o.RequiredDate AS
            requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId,
            o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address,
            o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS
            postalCode, o.ShipCountry AS country, o.CustomerID AS
            [__customerId], o.OrderID AS [__id] FROM Orders o  WHERE o.OrderID =
            @id 
          children:
            - entity: Customers
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                SELECT c.CompanyName AS name, c.CustomerID AS LambdaOrmParentId
                FROM Customers c  WHERE  c.CustomerID IN (@LambdaOrmParentId) 
            - entity: Orders.details
              dialect: SqlServer
              source: SqlServer
              sentence: >-
                SELECT o1.Quantity AS quantity, o1.UnitPrice AS unitPrice,
                o1.ProductID AS [__productId], o1.OrderID AS LambdaOrmParentId
                FROM [Order Details] o1  WHERE  o1.OrderID IN
                (@LambdaOrmParentId) 
              children:
                - entity: Products
                  dialect: SqlServer
                  source: SqlServer
                  sentence: >-
                    SELECT p.ProductName AS name, p.CategoryID AS
                    [__categoryId], p.ProductID AS LambdaOrmParentId FROM
                    Products p  WHERE  p.ProductID IN (@LambdaOrmParentId) 
                  children:
                    - entity: Categories
                      dialect: SqlServer
                      source: SqlServer
                      sentence: >-
                        SELECT c1.CategoryName AS name, c1.CategoryID AS
                        LambdaOrmParentId FROM Categories c1  WHERE 
                        c1.CategoryID IN (@LambdaOrmParentId) 
      - stage: MongoDB
        info:
          entity: Orders
          dialect: MongoDB
          source: MongoDB
          sentence: >-
            [{"$match":{"_id":"$id$"}},{"$project":{"_id":0,"id":"$_id","customerId":"$CustomerID","employeeId":"$EmployeeID","orderDate":"$OrderDate","requiredDate":"$RequiredDate","shippedDate":"$ShippedDate","shipViaId":"$ShipVia","freight":"$Freight","name":"$ShipName","address":"$ShipAddress","city":"$ShipCity","region":"$ShipRegion","postalCode":"$ShipPostalCode","country":"$ShipCountry","__customerId":"$CustomerID","__id":"$_id","details":{"$map":{"input":"$\"Order
            Details\"","in":{"quantity":"$$this.Quantity","unitPrice":"$$this.UnitPrice","__productId":"$$this.ProductID","LambdaOrmParentId":"$$this.OrderID"}}}}}]
          children:
            - entity: Customers
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                [{"$match":{"_id":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"name":"$CompanyName","LambdaOrmParentId":"$_id"}}]
            - entity: Orders.details
              dialect: MongoDB
              source: MongoDB
              sentence: >-
                [{"$unwind":"$\"Order
                Details\""},{"$replaceRoot":{"newRoot":"$\"Order
                Details\""}},{"$match":{"OrderID":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"quantity":"$Quantity","unitPrice":"$UnitPrice","__productId":"$ProductID","LambdaOrmParentId":"$OrderID"}}]
              children:
                - entity: Products
                  dialect: MongoDB
                  source: MongoDB
                  sentence: >-
                    [{"$match":{"_id":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"name":"$ProductName","__categoryId":"$CategoryID","LambdaOrmParentId":"$_id"}}]
                  children:
                    - entity: Categories
                      dialect: MongoDB
                      source: MongoDB
                      sentence: >-
                        [{"$match":{"_id":{"$in":["$LambdaOrmParentId$"]}}},{"$project":{"_id":0,"name":"$CategoryName","LambdaOrmParentId":"$_id"}}]
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.CustomerID AS "__customerId", o.OrderID AS "__id" FROM
            Orders o  WHERE o.OrderID = :id 
          children:
            - entity: Customers
              dialect: Oracle
              source: Oracle
              sentence: >-
                SELECT c.CompanyName AS "name", c.CustomerID AS
                "LambdaOrmParentId" FROM Customers c  WHERE  c.CustomerID IN
                (:LambdaOrmParentId) 
            - entity: Orders.details
              dialect: Oracle
              source: Oracle
              sentence: >-
                SELECT o1.Quantity AS "quantity", o1.UnitPrice AS "unitPrice",
                o1.ProductID AS "__productId", o1.OrderID AS "LambdaOrmParentId"
                FROM "Order Details" o1  WHERE  o1.OrderID IN
                (:LambdaOrmParentId) 
              children:
                - entity: Products
                  dialect: Oracle
                  source: Oracle
                  sentence: >-
                    SELECT p.ProductName AS "name", p.CategoryID AS
                    "__categoryId", p.ProductID AS "LambdaOrmParentId" FROM
                    Products p  WHERE  p.ProductID IN (:LambdaOrmParentId) 
                  children:
                    - entity: Categories
                      dialect: Oracle
                      source: Oracle
                      sentence: >-
                        SELECT c1.CategoryName AS "name", c1.CategoryID AS
                        "LambdaOrmParentId" FROM Categories c1  WHERE 
                        c1.CategoryID IN (:LambdaOrmParentId) 
    errors: 2
    expression: >-
      Orders.filter(p => p.id === id).include(p => [p.customer.map(p => p.name),
      p.details.include(p => p.product.include(p => p.category.map(p =>
      p.name)).map(p => p.name)).map(p => [p.quantity, p.unitPrice])])
    normalizeExpression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__customerId:p.customerId,__id:p.id}).filter(p=>(p.id==id)).include(p=>p.customer.map(p=>{name:p.name,LambdaOrmParentId:p.id}).filter(p=>in(p.id,LambdaOrmParentId)))
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: customer
        type: Customers
        children:
          - name: name
            type: string
          - name: LambdaOrmParentId
            type: string
      - name: details
        type: Orders.details[]
        children:
          - name: quantity
            type: decimal
          - name: unitPrice
            type: decimal
          - name: LambdaOrmParentId
            type: integer
          - name: product
            type: Products
            children:
              - name: name
                type: string
              - name: LambdaOrmParentId
                type: integer
              - name: category
                type: Categories
                children:
                  - name: name
                    type: string
                  - name: LambdaOrmParentId
                    type: integer
    parameters:
      - name: id
        type: integer
      - name: customer
        type: Customers
        children:
          - name: LambdaOrmParentId
            type: any
      - name: details
        type: Orders.details
        children:
          - name: LambdaOrmParentId
            type: any
          - name: product
            type: Products
            children:
              - name: LambdaOrmParentId
                type: any
              - name: category
                type: Categories
                children:
                  - name: LambdaOrmParentId
                    type: any
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Customers
          constraints: []
        - entity: Orders.details
          constraints: []
          children:
            - entity: Products
              constraints: []
              children:
                - entity: Categories
                  constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 40
      name: select
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 61
          name: select
          children: []
          type: any
          entity: Customers
          columns:
            - name: name
              type: string
            - name: LambdaOrmParentId
              type: string
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: c
        - classtype: Sentence
          pos:
            ln: 0
            col: 172
          name: select
          children:
            - classtype: Sentence
              pos:
                ln: 0
                col: 154
              name: select
              children:
                - classtype: Sentence
                  pos:
                    ln: 0
                    col: 136
                  name: select
                  children: []
                  type: any
                  entity: Categories
                  columns:
                    - name: name
                      type: string
                    - name: LambdaOrmParentId
                      type: integer
                  parameters:
                    - name: LambdaOrmParentId
                      type: any
                  constraints: []
                  values: []
                  defaults: []
                  clause: select
                  alias: c1
              type: any
              entity: Products
              columns:
                - name: name
                  type: string
                - name: __categoryId
                  type: integer
                - name: LambdaOrmParentId
                  type: integer
              parameters:
                - name: LambdaOrmParentId
                  type: any
              constraints: []
              values: []
              defaults: []
              clause: select
              alias: p
          type: any
          entity: Orders.details
          columns:
            - name: quantity
              type: decimal
            - name: unitPrice
              type: decimal
            - name: __productId
              type: integer
            - name: LambdaOrmParentId
              type: integer
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: o1
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: __customerId
          type: string
        - name: __id
          type: integer
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: o
    executions:
      - stage: MySQL
      - stage: MariaDB
      - stage: PostgreSQL
      - stage: SqlServer
        error: not equal MySQL
        result:
          - id: 1
            customerId: VINET
            employeeId: 5
            orderDate: '1996-07-04T00:00:00.000Z'
            requiredDate: '1996-08-01T00:00:00.000Z'
            shippedDate: '1996-07-16T00:00:00.000Z'
            shipViaId: 3
            freight: 32.38
            name: Vins et alcools Chevalier
            address: 59 rue de l-Abbaye
            city: Reims
            region: null
            postalCode: '51100'
            country: France
            customer:
              name: Vins et alcools Chevalier
            details:
              - quantity: 15
                unitPrice: 19
                product:
                  name: Chang
                  category:
                    name: Beverages
              - quantity: 20
                unitPrice: 123.79
                product:
                  name: Thringer Rostbratwurst
                  category:
                    name: Meat/Poultry
      - stage: MongoDB
        error: not equal MySQL
        result:
          - id: 1
            customerId: VINET
            employeeId: 5
            orderDate: '1996-07-04T00:00:00.000+02:00'
            requiredDate: '1996-08-01'
            shippedDate: '1996-07-16'
            shipViaId: 3
            freight: 32.38
            name: Vins et alcools Chevalier
            address: 59 rue de l-Abbaye
            city: Reims
            region: null
            postalCode: '51100'
            country: France
            details:
              - quantity: 12
                unitPrice: 14
                product:
                  name: Queso Cabrales
                  category:
                    name: Dairy Products
              - quantity: 10
                unitPrice: 9.8
                product:
                  name: Singaporean Hokkien Fried Mee
                  category:
                    name: Grains/Cereals
              - quantity: 5
                unitPrice: 34.8
                product:
                  name: Mozzarella di Giovanni
                  category:
                    name: Dairy Products
            customer:
              name: Vins et alcools Chevalier
      - stage: Oracle
    result:
      - id: 1
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        customer:
          name: Vins et alcools Chevalier
        details:
          - quantity: 12
            unitPrice: 14
            product:
              name: Queso Cabrales
              category:
                name: Dairy Products
          - quantity: 10
            unitPrice: 9.8
            product:
              name: Singaporean Hokkien Fried Mee
              category:
                name: Grains/Cereals
          - quantity: 5
            unitPrice: 34.8
            product:
              name: Mozzarella di Giovanni
              category:
                name: Dairy Products
errors: 15
