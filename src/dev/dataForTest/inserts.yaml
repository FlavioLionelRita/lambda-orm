name: inserts
data:
  a:
    name: Beverages20
    description: Soft drinks, coffees, teas, beers, and ales
  b:
    name: Beverages21
    description: Soft drinks, coffees, teas, beers, and ales
  c:
    entity:
      name: Beverages22
      description: Soft drinks, coffees, teas, beers, and ales
  order:
    customerId: VINET
    employeeId: 5
    orderDate: '1996-07-03T22:00:00.000Z'
    requiredDate: '1996-07-31T22:00:00.000Z'
    shippedDate: '1996-07-15T22:00:00.000Z'
    shipViaId: 3
    freight: 32.38
    name: Vins et alcools Chevalier
    address: 59 rue de l-Abbaye
    city: Reims
    region: null
    postalCode: '51100'
    country: France
    details:
      - productId: 11
        unitPrice: 14
        quantity: 12
        discount: 10
        orderId: null
      - productId: 42
        unitPrice: 9.8
        quantity: 10
        discount: 10
      - productId: 72
        unitPrice: 34.8
        quantity: 5
        discount: 10
test:
  - name: insert 1
    data: a
    sentences:
      - stage: SqlServer
        sentence:
          entity: Categories
          dialect: SqlServer
          dataSource: SqlServer
          sentence: >-
            INSERT INTO Categories(CategoryName,Description) OUTPUT
            INSERTED.CategoryID VALUES(@name,@description)
          children: []
    errors: 0
    expression: Categories.insert()
    normalizeExpression: Categories.insert({name:name,description:description})
    model:
      - name: name
        type: string
      - name: description
        type: string
    parameters:
      - name: name
        type: string
      - name: description
        type: string
    constraints:
      entity: Categories
      constraints:
        - message: Cannot be null property name in entity Categories
          condition: isNotNull(name)
    metadata:
      name: insert
      classtype: Sentence
      children:
        - name: Categories
          classtype: From
          children: []
          type: any
          alias: c
        - name: Categories
          classtype: Insert
          children:
            - name: obj
              classtype: Obj
              children:
                - name: name
                  classtype: KeyValue
                  children:
                    - name: name
                      classtype: Variable
                      children: []
                      type: string
                      number: 1
                  type: any
                  property: name
                - name: description
                  classtype: KeyValue
                  children:
                    - name: description
                      classtype: Variable
                      children: []
                      type: string
                      number: 2
                  type: any
                  property: description
              type: object
          type: any
          clause: insert
      type: any
      columns:
        - name: name
          type: string
        - name: description
          type: string
      parameters:
        - name: name
          type: string
        - name: description
          type: string
      entity: Categories
      constraints:
        - message: Cannot be null property name in entity Categories
          condition: isNotNull(name)
    executions:
      - stage: SqlServer
    result:
      data:
        name: Beverages20
        description: Soft drinks, coffees, teas, beers, and ales
  - name: insert 2
    data: b
    sentences:
      - stage: SqlServer
        sentence:
          entity: Categories
          dialect: SqlServer
          dataSource: SqlServer
          sentence: >-
            INSERT INTO Categories(CategoryName,Description) OUTPUT
            INSERTED.CategoryID VALUES(@name,@description)
          children: []
    errors: 0
    expression: Categories.insert(=>{name:name,description:description})
    normalizeExpression: Categories.insert(=>{name:name,description:description})
    model:
      - name: name
        type: string
      - name: description
        type: string
    parameters:
      - name: name
        type: string
      - name: description
        type: string
    constraints:
      entity: Categories
      constraints:
        - message: Cannot be null property name in entity Categories
          condition: isNotNull(name)
    metadata:
      name: insert
      classtype: Sentence
      children:
        - name: Categories
          classtype: From
          children: []
          type: any
          alias: c
        - name: Categories
          classtype: Insert
          children:
            - name: obj
              classtype: Obj
              children:
                - name: name
                  classtype: KeyValue
                  children:
                    - name: name
                      classtype: Variable
                      children: []
                      type: string
                      number: 1
                  type: any
                  property: name
                - name: description
                  classtype: KeyValue
                  children:
                    - name: description
                      classtype: Variable
                      children: []
                      type: string
                      number: 2
                  type: any
                  property: description
              type: object
          type: any
          clause: insert
      type: any
      columns:
        - name: name
          type: string
        - name: description
          type: string
      parameters:
        - name: name
          type: string
        - name: description
          type: string
      entity: Categories
      constraints:
        - message: Cannot be null property name in entity Categories
          condition: isNotNull(name)
    executions:
      - stage: SqlServer
    result:
      data:
        name: Beverages21
        description: Soft drinks, coffees, teas, beers, and ales
  - name: insert 3
    data: c
    sentences:
      - stage: SqlServer
        sentence:
          entity: Categories
          dialect: SqlServer
          dataSource: SqlServer
          sentence: >-
            INSERT INTO Categories(CategoryName,Description) OUTPUT
            INSERTED.CategoryID VALUES(@entity.name,@entity.description)
          children: []
    errors: 1
    expression: Categories.insert(entity)
    normalizeExpression: Categories.insert({name:entity.name,description:entity.description})
    model:
      - name: name
        type: string
      - name: description
        type: string
    parameters:
      - name: entity.name
        type: string
      - name: entity.description
        type: string
    constraints:
      entity: Categories
      constraints: []
    metadata:
      name: insert
      classtype: Sentence
      children:
        - name: Categories
          classtype: From
          children: []
          type: any
          alias: c
        - name: Categories
          classtype: Insert
          children:
            - name: obj
              classtype: Obj
              children:
                - name: name
                  classtype: KeyValue
                  children:
                    - name: entity.name
                      classtype: Variable
                      children: []
                      type: string
                      number: 1
                  type: any
                  property: name
                - name: description
                  classtype: KeyValue
                  children:
                    - name: entity.description
                      classtype: Variable
                      children: []
                      type: string
                      number: 2
                  type: any
                  property: description
              type: object
          type: any
          clause: insert
      type: any
      columns:
        - name: name
          type: string
        - name: description
          type: string
      parameters:
        - name: entity.name
          type: string
        - name: entity.description
          type: string
      entity: Categories
      constraints: []
    executions:
      - stage: SqlServer
        error: >-
          Error: SqlServer connection _query error: Error: Must declare the
          scalar variable "@entity".
  - name: insert 4
    data: order
    sentences:
      - stage: SqlServer
        sentence:
          entity: Orders
          dialect: SqlServer
          dataSource: SqlServer
          sentence: >-
            INSERT INTO
            Orders(CustomerID,EmployeeID,OrderDate,RequiredDate,ShippedDate,ShipVia,Freight,ShipName,ShipAddress,ShipCity,ShipRegion,ShipPostalCode,ShipCountry)
            OUTPUT INSERTED.OrderID
            VALUES(@customerId,@employeeId,@orderDate,@requiredDate,@shippedDate,@shipViaId,@freight,@name,@address,@city,@region,@postalCode,@country)
          children: []
    errors: 0
    expression: Orders.insert()
    normalizeExpression: >-
      Orders.insert({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country})
    model:
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: datetime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
    parameters:
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: datetime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
    constraints:
      entity: Orders
      constraints:
        - message: Cannot be null property customerId in entity Orders
          condition: isNotNull(customerId)
        - message: Cannot be null property employeeId in entity Orders
          condition: isNotNull(employeeId)
    metadata:
      name: insert
      classtype: Sentence
      children:
        - name: Orders
          classtype: From
          children: []
          type: any
          alias: o
        - name: Orders
          classtype: Insert
          children:
            - name: obj
              classtype: Obj
              children:
                - name: customerId
                  classtype: KeyValue
                  children:
                    - name: customerId
                      classtype: Variable
                      children: []
                      type: string
                      number: 1
                  type: any
                  property: customerId
                - name: employeeId
                  classtype: KeyValue
                  children:
                    - name: employeeId
                      classtype: Variable
                      children: []
                      type: integer
                      number: 2
                  type: any
                  property: employeeId
                - name: orderDate
                  classtype: KeyValue
                  children:
                    - name: orderDate
                      classtype: Variable
                      children: []
                      type: datetime
                      number: 3
                  type: any
                  property: orderDate
                - name: requiredDate
                  classtype: KeyValue
                  children:
                    - name: requiredDate
                      classtype: Variable
                      children: []
                      type: date
                      number: 4
                  type: any
                  property: requiredDate
                - name: shippedDate
                  classtype: KeyValue
                  children:
                    - name: shippedDate
                      classtype: Variable
                      children: []
                      type: date
                      number: 5
                  type: any
                  property: shippedDate
                - name: shipViaId
                  classtype: KeyValue
                  children:
                    - name: shipViaId
                      classtype: Variable
                      children: []
                      type: integer
                      number: 6
                  type: any
                  property: shipViaId
                - name: freight
                  classtype: KeyValue
                  children:
                    - name: freight
                      classtype: Variable
                      children: []
                      type: decimal
                      number: 7
                  type: any
                  property: freight
                - name: name
                  classtype: KeyValue
                  children:
                    - name: name
                      classtype: Variable
                      children: []
                      type: string
                      number: 8
                  type: any
                  property: name
                - name: address
                  classtype: KeyValue
                  children:
                    - name: address
                      classtype: Variable
                      children: []
                      type: string
                      number: 9
                  type: any
                  property: address
                - name: city
                  classtype: KeyValue
                  children:
                    - name: city
                      classtype: Variable
                      children: []
                      type: string
                      number: 10
                  type: any
                  property: city
                - name: region
                  classtype: KeyValue
                  children:
                    - name: region
                      classtype: Variable
                      children: []
                      type: string
                      number: 11
                  type: any
                  property: region
                - name: postalCode
                  classtype: KeyValue
                  children:
                    - name: postalCode
                      classtype: Variable
                      children: []
                      type: string
                      number: 12
                  type: any
                  property: postalCode
                - name: country
                  classtype: KeyValue
                  children:
                    - name: country
                      classtype: Variable
                      children: []
                      type: string
                      number: 13
                  type: any
                  property: country
              type: object
          type: any
          clause: insert
      type: any
      columns:
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: datetime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
      parameters:
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: datetime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
      entity: Orders
      constraints:
        - message: Cannot be null property customerId in entity Orders
          condition: isNotNull(customerId)
        - message: Cannot be null property employeeId in entity Orders
          condition: isNotNull(employeeId)
    executions:
      - stage: SqlServer
    result:
      data:
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        details:
          - productId: 11
            unitPrice: 14
            quantity: 12
            discount: 10
            orderId: null
          - productId: 42
            unitPrice: 9.8
            quantity: 10
            discount: 10
          - productId: 72
            unitPrice: 34.8
            quantity: 5
            discount: 10
  - name: insert 5
    data: order
    sentences:
      - stage: SqlServer
        sentence:
          entity: Orders
          dialect: SqlServer
          dataSource: SqlServer
          sentence: >-
            INSERT INTO
            Orders(CustomerID,EmployeeID,OrderDate,RequiredDate,ShippedDate,ShipVia,Freight,ShipName,ShipAddress,ShipCity,ShipRegion,ShipPostalCode,ShipCountry)
            OUTPUT INSERTED.OrderID
            VALUES(@customerId,@employeeId,@orderDate,@requiredDate,@shippedDate,@shipViaId,@freight,@name,@address,@city,@region,@postalCode,@country)
          children:
            - entity: Orders.details
              dialect: SqlServer
              dataSource: SqlServer
              sentence: >-
                INSERT INTO [Order
                Details](OrderID,ProductID,UnitPrice,Quantity,Discount) OUTPUT
                INSERTED.0
                VALUES(@orderId,@productId,@unitPrice,@quantity,@discount)
              children: []
    errors: 1
    expression: Orders.insert().include(p=>p.details)
    normalizeExpression: >-
      Orders.insert({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country}).include(p=>p.details.insert({orderId:orderId,productId:productId,unitPrice:unitPrice,quantity:quantity,discount:discount}))
    model:
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: datetime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
    parameters:
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: datetime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
    constraints:
      entity: Orders
      constraints:
        - message: Cannot be null property customerId in entity Orders
          condition: isNotNull(customerId)
        - message: Cannot be null property employeeId in entity Orders
          condition: isNotNull(employeeId)
      children:
        - entity: Orders.details
          constraints:
            - message: Cannot be null property orderId in entity Orders.details
              condition: isNotNull(orderId)
            - message: Cannot be null property productId in entity Orders.details
              condition: isNotNull(productId)
    metadata:
      name: insert
      classtype: Sentence
      children:
        - name: Orders
          classtype: From
          children: []
          type: any
          alias: o
        - name: Orders
          classtype: Insert
          children:
            - name: obj
              classtype: Obj
              children:
                - name: customerId
                  classtype: KeyValue
                  children:
                    - name: customerId
                      classtype: Variable
                      children: []
                      type: string
                      number: 1
                  type: any
                  property: customerId
                - name: employeeId
                  classtype: KeyValue
                  children:
                    - name: employeeId
                      classtype: Variable
                      children: []
                      type: integer
                      number: 2
                  type: any
                  property: employeeId
                - name: orderDate
                  classtype: KeyValue
                  children:
                    - name: orderDate
                      classtype: Variable
                      children: []
                      type: datetime
                      number: 3
                  type: any
                  property: orderDate
                - name: requiredDate
                  classtype: KeyValue
                  children:
                    - name: requiredDate
                      classtype: Variable
                      children: []
                      type: date
                      number: 4
                  type: any
                  property: requiredDate
                - name: shippedDate
                  classtype: KeyValue
                  children:
                    - name: shippedDate
                      classtype: Variable
                      children: []
                      type: date
                      number: 5
                  type: any
                  property: shippedDate
                - name: shipViaId
                  classtype: KeyValue
                  children:
                    - name: shipViaId
                      classtype: Variable
                      children: []
                      type: integer
                      number: 6
                  type: any
                  property: shipViaId
                - name: freight
                  classtype: KeyValue
                  children:
                    - name: freight
                      classtype: Variable
                      children: []
                      type: decimal
                      number: 7
                  type: any
                  property: freight
                - name: name
                  classtype: KeyValue
                  children:
                    - name: name
                      classtype: Variable
                      children: []
                      type: string
                      number: 8
                  type: any
                  property: name
                - name: address
                  classtype: KeyValue
                  children:
                    - name: address
                      classtype: Variable
                      children: []
                      type: string
                      number: 9
                  type: any
                  property: address
                - name: city
                  classtype: KeyValue
                  children:
                    - name: city
                      classtype: Variable
                      children: []
                      type: string
                      number: 10
                  type: any
                  property: city
                - name: region
                  classtype: KeyValue
                  children:
                    - name: region
                      classtype: Variable
                      children: []
                      type: string
                      number: 11
                  type: any
                  property: region
                - name: postalCode
                  classtype: KeyValue
                  children:
                    - name: postalCode
                      classtype: Variable
                      children: []
                      type: string
                      number: 12
                  type: any
                  property: postalCode
                - name: country
                  classtype: KeyValue
                  children:
                    - name: country
                      classtype: Variable
                      children: []
                      type: string
                      number: 13
                  type: any
                  property: country
              type: object
          type: any
          clause: insert
        - name: details
          classtype: SentenceInclude
          children:
            - name: insert
              classtype: Sentence
              children:
                - name: Orders.details
                  classtype: From
                  children: []
                  type: any
                  alias: o1
                - name: Orders.details
                  classtype: Insert
                  children:
                    - name: obj
                      classtype: Obj
                      children:
                        - name: orderId
                          classtype: KeyValue
                          children:
                            - name: orderId
                              classtype: Variable
                              children: []
                              type: integer
                              number: 1
                          type: any
                          property: orderId
                        - name: productId
                          classtype: KeyValue
                          children:
                            - name: productId
                              classtype: Variable
                              children: []
                              type: integer
                              number: 2
                          type: any
                          property: productId
                        - name: unitPrice
                          classtype: KeyValue
                          children:
                            - name: unitPrice
                              classtype: Variable
                              children: []
                              type: decimal
                              number: 3
                          type: any
                          property: unitPrice
                        - name: quantity
                          classtype: KeyValue
                          children:
                            - name: quantity
                              classtype: Variable
                              children: []
                              type: decimal
                              number: 4
                          type: any
                          property: quantity
                        - name: discount
                          classtype: KeyValue
                          children:
                            - name: discount
                              classtype: Variable
                              children: []
                              type: decimal
                              number: 5
                          type: any
                          property: discount
                      type: object
                  type: any
                  clause: insert
              type: any
              columns:
                - name: orderId
                  type: integer
                - name: productId
                  type: integer
                - name: unitPrice
                  type: decimal
                - name: quantity
                  type: decimal
                - name: discount
                  type: decimal
              parameters:
                - name: orderId
                  type: integer
                - name: productId
                  type: integer
                - name: unitPrice
                  type: decimal
                - name: quantity
                  type: decimal
                - name: discount
                  type: decimal
              entity: Orders.details
              constraints:
                - message: Cannot be null property orderId in entity Orders.details
                  condition: isNotNull(orderId)
                - message: Cannot be null property productId in entity Orders.details
                  condition: isNotNull(productId)
          type: any
          relation:
            name: details
            type: manyToOne
            composite: true
            from: id
            entity: Orders.details
            weak: true
            to: orderId
            target: order
      type: any
      columns:
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: datetime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
      parameters:
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: datetime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
      entity: Orders
      constraints:
        - message: Cannot be null property customerId in entity Orders
          condition: isNotNull(customerId)
        - message: Cannot be null property employeeId in entity Orders
          condition: isNotNull(employeeId)
    executions:
      - stage: SqlServer
        error: >-
          ValidationError: ERROR: Cannot be null property orderId in entity
          Orders.details DATA_SOURCE: SqlServer ENTITY: Orders.details SENTENCE:
          "INSERT INTO [Order
          Details](OrderID,ProductID,UnitPrice,Quantity,Discount) OUTPUT
          INSERTED.0
          VALUES(@orderId,@productId,@unitPrice,@quantity,@discount)" 
          DATA:{"productId":11,"unitPrice":14,"quantity":12,"discount":10,"orderId":null}
  - name: insert 6
    data: order
    sentences:
      - stage: SqlServer
        sentence:
          entity: Orders
          dialect: SqlServer
          dataSource: SqlServer
          sentence: >-
            INSERT INTO
            Orders(CustomerID,EmployeeID,OrderDate,RequiredDate,ShippedDate,ShipVia,Freight,ShipName,ShipAddress,ShipCity,ShipRegion,ShipPostalCode,ShipCountry)
            OUTPUT INSERTED.OrderID
            VALUES(@customerId,@employeeId,@orderDate,@requiredDate,@shippedDate,@shipViaId,@freight,@name,@address,@city,@region,@postalCode,@country)
          children:
            - entity: Orders.details
              dialect: SqlServer
              dataSource: SqlServer
              sentence: >-
                INSERT INTO [Order
                Details](OrderID,ProductID,UnitPrice,Quantity,Discount) OUTPUT
                INSERTED.0
                VALUES(@orderId,@productId,@unitPrice,@quantity,@discount)
              children: []
            - entity: Customers
              dialect: SqlServer
              dataSource: SqlServer
              sentence: >-
                INSERT INTO
                Customers(CustomerID,CompanyName,ContactName,ContactTitle,Address,City,Region,PostalCode,Country)
                OUTPUT INSERTED.0
                VALUES(@id,@name,@contact,@phone,@address,@city,@region,@postalCode,@country)
              children: []
    errors: 1
    expression: Orders.insert().include(p=>[p.details,p.customer])
    normalizeExpression: >-
      Orders.insert({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country}).include(p=>[p.details.insert({orderId:orderId,productId:productId,unitPrice:unitPrice,quantity:quantity,discount:discount}),p.customer.insert({id:id,name:name,contact:contact,phone:phone,address:address,city:city,region:region,postalCode:postalCode,country:country})])
    model:
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: datetime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
      - name: customer
        type: Customers
        children:
          - name: id
            type: string
          - name: name
            type: string
          - name: contact
            type: string
          - name: phone
            type: string
          - name: address
            type: string
          - name: city
            type: string
          - name: region
            type: string
          - name: postalCode
            type: string
          - name: country
            type: string
    parameters:
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: datetime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
      - name: customer
        type: Customers
        children:
          - name: id
            type: string
          - name: name
            type: string
          - name: contact
            type: string
          - name: phone
            type: string
          - name: address
            type: string
          - name: city
            type: string
          - name: region
            type: string
          - name: postalCode
            type: string
          - name: country
            type: string
    constraints:
      entity: Orders
      constraints:
        - message: Cannot be null property customerId in entity Orders
          condition: isNotNull(customerId)
        - message: Cannot be null property employeeId in entity Orders
          condition: isNotNull(employeeId)
      children:
        - entity: Orders.details
          constraints:
            - message: Cannot be null property orderId in entity Orders.details
              condition: isNotNull(orderId)
            - message: Cannot be null property productId in entity Orders.details
              condition: isNotNull(productId)
        - entity: Customers
          constraints:
            - message: Cannot be null property id in entity Customers
              condition: isNotNull(id)
            - message: Cannot be null property name in entity Customers
              condition: isNotNull(name)
    metadata:
      name: insert
      classtype: Sentence
      children:
        - name: Orders
          classtype: From
          children: []
          type: any
          alias: o
        - name: Orders
          classtype: Insert
          children:
            - name: obj
              classtype: Obj
              children:
                - name: customerId
                  classtype: KeyValue
                  children:
                    - name: customerId
                      classtype: Variable
                      children: []
                      type: string
                      number: 1
                  type: any
                  property: customerId
                - name: employeeId
                  classtype: KeyValue
                  children:
                    - name: employeeId
                      classtype: Variable
                      children: []
                      type: integer
                      number: 2
                  type: any
                  property: employeeId
                - name: orderDate
                  classtype: KeyValue
                  children:
                    - name: orderDate
                      classtype: Variable
                      children: []
                      type: datetime
                      number: 3
                  type: any
                  property: orderDate
                - name: requiredDate
                  classtype: KeyValue
                  children:
                    - name: requiredDate
                      classtype: Variable
                      children: []
                      type: date
                      number: 4
                  type: any
                  property: requiredDate
                - name: shippedDate
                  classtype: KeyValue
                  children:
                    - name: shippedDate
                      classtype: Variable
                      children: []
                      type: date
                      number: 5
                  type: any
                  property: shippedDate
                - name: shipViaId
                  classtype: KeyValue
                  children:
                    - name: shipViaId
                      classtype: Variable
                      children: []
                      type: integer
                      number: 6
                  type: any
                  property: shipViaId
                - name: freight
                  classtype: KeyValue
                  children:
                    - name: freight
                      classtype: Variable
                      children: []
                      type: decimal
                      number: 7
                  type: any
                  property: freight
                - name: name
                  classtype: KeyValue
                  children:
                    - name: name
                      classtype: Variable
                      children: []
                      type: string
                      number: 8
                  type: any
                  property: name
                - name: address
                  classtype: KeyValue
                  children:
                    - name: address
                      classtype: Variable
                      children: []
                      type: string
                      number: 9
                  type: any
                  property: address
                - name: city
                  classtype: KeyValue
                  children:
                    - name: city
                      classtype: Variable
                      children: []
                      type: string
                      number: 10
                  type: any
                  property: city
                - name: region
                  classtype: KeyValue
                  children:
                    - name: region
                      classtype: Variable
                      children: []
                      type: string
                      number: 11
                  type: any
                  property: region
                - name: postalCode
                  classtype: KeyValue
                  children:
                    - name: postalCode
                      classtype: Variable
                      children: []
                      type: string
                      number: 12
                  type: any
                  property: postalCode
                - name: country
                  classtype: KeyValue
                  children:
                    - name: country
                      classtype: Variable
                      children: []
                      type: string
                      number: 13
                  type: any
                  property: country
              type: object
          type: any
          clause: insert
        - name: details
          classtype: SentenceInclude
          children:
            - name: insert
              classtype: Sentence
              children:
                - name: Orders.details
                  classtype: From
                  children: []
                  type: any
                  alias: o1
                - name: Orders.details
                  classtype: Insert
                  children:
                    - name: obj
                      classtype: Obj
                      children:
                        - name: orderId
                          classtype: KeyValue
                          children:
                            - name: orderId
                              classtype: Variable
                              children: []
                              type: integer
                              number: 1
                          type: any
                          property: orderId
                        - name: productId
                          classtype: KeyValue
                          children:
                            - name: productId
                              classtype: Variable
                              children: []
                              type: integer
                              number: 2
                          type: any
                          property: productId
                        - name: unitPrice
                          classtype: KeyValue
                          children:
                            - name: unitPrice
                              classtype: Variable
                              children: []
                              type: decimal
                              number: 3
                          type: any
                          property: unitPrice
                        - name: quantity
                          classtype: KeyValue
                          children:
                            - name: quantity
                              classtype: Variable
                              children: []
                              type: decimal
                              number: 4
                          type: any
                          property: quantity
                        - name: discount
                          classtype: KeyValue
                          children:
                            - name: discount
                              classtype: Variable
                              children: []
                              type: decimal
                              number: 5
                          type: any
                          property: discount
                      type: object
                  type: any
                  clause: insert
              type: any
              columns:
                - name: orderId
                  type: integer
                - name: productId
                  type: integer
                - name: unitPrice
                  type: decimal
                - name: quantity
                  type: decimal
                - name: discount
                  type: decimal
              parameters:
                - name: orderId
                  type: integer
                - name: productId
                  type: integer
                - name: unitPrice
                  type: decimal
                - name: quantity
                  type: decimal
                - name: discount
                  type: decimal
              entity: Orders.details
              constraints:
                - message: Cannot be null property orderId in entity Orders.details
                  condition: isNotNull(orderId)
                - message: Cannot be null property productId in entity Orders.details
                  condition: isNotNull(productId)
          type: any
          relation:
            name: details
            type: manyToOne
            composite: true
            from: id
            entity: Orders.details
            weak: true
            to: orderId
            target: order
        - name: customer
          classtype: SentenceInclude
          children:
            - name: insert
              classtype: Sentence
              children:
                - name: Customers
                  classtype: From
                  children: []
                  type: any
                  alias: c
                - name: Customers
                  classtype: Insert
                  children:
                    - name: obj
                      classtype: Obj
                      children:
                        - name: id
                          classtype: KeyValue
                          children:
                            - name: id
                              classtype: Variable
                              children: []
                              type: string
                              number: 1
                          type: any
                          property: id
                        - name: name
                          classtype: KeyValue
                          children:
                            - name: name
                              classtype: Variable
                              children: []
                              type: string
                              number: 2
                          type: any
                          property: name
                        - name: contact
                          classtype: KeyValue
                          children:
                            - name: contact
                              classtype: Variable
                              children: []
                              type: string
                              number: 3
                          type: any
                          property: contact
                        - name: phone
                          classtype: KeyValue
                          children:
                            - name: phone
                              classtype: Variable
                              children: []
                              type: string
                              number: 4
                          type: any
                          property: phone
                        - name: address
                          classtype: KeyValue
                          children:
                            - name: address
                              classtype: Variable
                              children: []
                              type: string
                              number: 5
                          type: any
                          property: address
                        - name: city
                          classtype: KeyValue
                          children:
                            - name: city
                              classtype: Variable
                              children: []
                              type: string
                              number: 6
                          type: any
                          property: city
                        - name: region
                          classtype: KeyValue
                          children:
                            - name: region
                              classtype: Variable
                              children: []
                              type: string
                              number: 7
                          type: any
                          property: region
                        - name: postalCode
                          classtype: KeyValue
                          children:
                            - name: postalCode
                              classtype: Variable
                              children: []
                              type: string
                              number: 8
                          type: any
                          property: postalCode
                        - name: country
                          classtype: KeyValue
                          children:
                            - name: country
                              classtype: Variable
                              children: []
                              type: string
                              number: 9
                          type: any
                          property: country
                      type: object
                  type: any
                  clause: insert
              type: any
              columns:
                - name: id
                  type: string
                - name: name
                  type: string
                - name: contact
                  type: string
                - name: phone
                  type: string
                - name: address
                  type: string
                - name: city
                  type: string
                - name: region
                  type: string
                - name: postalCode
                  type: string
                - name: country
                  type: string
              parameters:
                - name: id
                  type: string
                - name: name
                  type: string
                - name: contact
                  type: string
                - name: phone
                  type: string
                - name: address
                  type: string
                - name: city
                  type: string
                - name: region
                  type: string
                - name: postalCode
                  type: string
                - name: country
                  type: string
              entity: Customers
              constraints:
                - message: Cannot be null property id in entity Customers
                  condition: isNotNull(id)
                - message: Cannot be null property name in entity Customers
                  condition: isNotNull(name)
          type: any
          relation:
            name: customer
            from: customerId
            entity: Customers
            to: id
            target: orders
            type: oneToMany
            weak: false
      type: any
      columns:
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: datetime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
      parameters:
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: datetime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
      entity: Orders
      constraints:
        - message: Cannot be null property customerId in entity Orders
          condition: isNotNull(customerId)
        - message: Cannot be null property employeeId in entity Orders
          condition: isNotNull(employeeId)
    executions:
      - stage: SqlServer
        error: >-
          ValidationError: ERROR: Cannot be null property orderId in entity
          Orders.details DATA_SOURCE: SqlServer ENTITY: Orders.details SENTENCE:
          "INSERT INTO [Order
          Details](OrderID,ProductID,UnitPrice,Quantity,Discount) OUTPUT
          INSERTED.0
          VALUES(@orderId,@productId,@unitPrice,@quantity,@discount)" 
          DATA:{"productId":11,"unitPrice":14,"quantity":12,"discount":10,"orderId":null}
errors: 3
