import { orm,Helper } from '../../lib'
beforeAll(async () => {
	require('dotenv').config({ path: './test.env' })
	await orm.init()
})
describe('Complete Expression', () => {
	test('update 1', () => {
		const source = 'Orders.update()'
		const expected = 'Orders.filter(p=>(p.id==obj.id)).update({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country})'
		const target = orm.normalize(source)
		expect(expected).toBe(target)
	})
	test('update 2', () => {
		const source = 'Orders.update(entity)'
		const expected = 'Orders.filter(p=>(p.id==obj.id)).update({customerId:entity.customerId,employeeId:entity.employeeId,orderDate:entity.orderDate,requiredDate:entity.requiredDate,shippedDate:entity.shippedDate,shipViaId:entity.shipViaId,freight:entity.freight,name:entity.name,address:entity.address,city:entity.city,region:entity.region,postalCode:entity.postalCode,country:entity.country})'
		const target = orm.normalize(source)
		expect(expected).toBe(target)
	})
	test('update 3', () => {
		const source = 'Orders.updateAll(=>{postalCode:postalCode})'
		const expected = 'Orders.update(=>{postalCode:postalCode})'
		const target = orm.normalize(source)
		expect(expected).toBe(target)
	})
	test('update 4', () => {
		const source = 'Orders.update(p=>{name:entity.name}).filter(p=>(p.id===entity.id))'
		const expected = 'Orders.update(p=>{name:entity.name}).filter(p=>(p.id===entity.id))'
		const target = orm.normalize(source)
		expect(expected).toBe(target)
	})
	test('update 5', () => {
		const source = 'Orders.update(=>{name:entity.name}).include(p=>p.details).filter(p=>(p.id===entity.id))'
		const expected = 'Orders.update(=>{name:entity.name}).include(p=>p.details.filter(p=>((p.orderId==obj.orderId)&&(p.productId==obj.productId))).update({orderId:orderId,productId:productId,unitPrice:unitPrice,quantity:quantity,discount:discount})).filter(p=>(p.id===entity.id))'
		const target = orm.normalize(source)
		expect(expected).toBe(target)
	})
	test('update 6', () => {
		const source = 'Orders.update(=>{name:entity.name}).include(p=>p.details.update(p=>p)).filter(p=>(p.id===entity.id))'
		const expected = 'Orders.update(=>{name:entity.name}).include(p=>p.details.filter(p=>((p.orderId==orderId)&&(p.productId==productId))).update(p=>{unitPrice:p.unitPrice,quantity:p.quantity,discount:p.discount})).filter(p=>(p.id===entity.id))'
		const target = orm.normalize(source)
		expect(expected).toBe(target)
	})
	test('update 7', () => {
		const source = 'Orders.update(=>{name:entity.name}).include(p=>p.details.update(p=>{unitPrice:p.unitPrice,productId:p.productId})).filter(p=>(p.id===entity.id))'
		const expected = 'Orders.update(=>{name:entity.name}).include(p=>p.details.filter(p=>((p.orderId==orderId)&&(p.productId==productId))).update(p=>{unitPrice:p.unitPrice,productId:p.productId})).filter(p=>(p.id===entity.id))'
		const target = orm.normalize(source)
		expect(expected).toBe(target)
	})
	test('update 8', () => {
		const source = 'Orders.update().include(p=>p.details)'
		const expected = 'Orders.filter(p=>(p.id==obj.id)).update({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country}).include(p=>p.details.filter(p=>((p.orderId==obj.orderId)&&(p.productId==obj.productId))).update({orderId:orderId,productId:productId,unitPrice:unitPrice,quantity:quantity,discount:discount}))'
		const target = orm.normalize(source)
		expect(expected).toBe(target)
	})
	test('update 9', () => {
		const source = 'Customers.update().include(p=>p.orders.include(p=>p.details))'
		const expected = 'Customers.filter(p=>(p.id==obj.id)).update({id:id,name:name,contact:contact,phone:phone,address:address,city:city,region:region,postalCode:postalCode,country:country}).include(p=>p.orders.include(p=>p.details.filter(p=>((p.orderId==obj.orderId)&&(p.productId==obj.productId))).update({orderId:orderId,productId:productId,unitPrice:unitPrice,quantity:quantity,discount:discount})).filter(p=>(p.id==obj.id)).update({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country}))'
		const target = orm.normalize(source)
		expect(expected).toBe(target)
	})
})
describe('Metadata', () => {
	test('update 1', async () => {
		const expression = 'Orders.update()'
		const modelExpected :any= [{"name":"customerId","type":"string"},{"name":"employeeId","type":"integer"},{"name":"orderDate","type":"datetime"},{"name":"requiredDate","type":"datetime"},{"name":"shippedDate","type":"datetime"},{"name":"shipViaId","type":"integer"},{"name":"freight","type":"decimal"},{"name":"name","type":"string"},{"name":"address","type":"string"},{"name":"city","type":"string"},{"name":"region","type":"string"},{"name":"postalCode","type":"string"},{"name":"country","type":"string"}]
		const parametersExpected:any = [{"name":"customerId","type":"string"},{"name":"employeeId","type":"integer"},{"name":"orderDate","type":"datetime"},{"name":"requiredDate","type":"datetime"},{"name":"shippedDate","type":"datetime"},{"name":"shipViaId","type":"integer"},{"name":"freight","type":"decimal"},{"name":"name","type":"string"},{"name":"address","type":"string"},{"name":"city","type":"string"},{"name":"region","type":"string"},{"name":"postalCode","type":"string"},{"name":"country","type":"string"},{"name":"obj.id","type":"integer"}]
		const metadataExpected :any= {"name":"update","type":"Sentence","children":[{"name":"filter","type":"Filter","children":[{"name":"==","type":"Operator","children":[{"name":"id","type":"Field","children":[],"entity":"Orders","alias":"o"},{"name":"obj.id","type":"Variable","children":[],"number":14}]}]},{"name":"Orders.o","type":"From","children":[]},{"name":"Orders.o","type":"Update","children":[{"name":"obj","type":"Obj","children":[{"name":"customerId","type":"KeyValue","children":[{"name":"customerId","type":"Variable","children":[],"number":1}],"property":"customerId"},{"name":"employeeId","type":"KeyValue","children":[{"name":"employeeId","type":"Variable","children":[],"number":2}],"property":"employeeId"},{"name":"orderDate","type":"KeyValue","children":[{"name":"orderDate","type":"Variable","children":[],"number":3}],"property":"orderDate"},{"name":"requiredDate","type":"KeyValue","children":[{"name":"requiredDate","type":"Variable","children":[],"number":4}],"property":"requiredDate"},{"name":"shippedDate","type":"KeyValue","children":[{"name":"shippedDate","type":"Variable","children":[],"number":5}],"property":"shippedDate"},{"name":"shipViaId","type":"KeyValue","children":[{"name":"shipViaId","type":"Variable","children":[],"number":6}],"property":"shipViaId"},{"name":"freight","type":"KeyValue","children":[{"name":"freight","type":"Variable","children":[],"number":7}],"property":"freight"},{"name":"name","type":"KeyValue","children":[{"name":"name","type":"Variable","children":[],"number":8}],"property":"name"},{"name":"address","type":"KeyValue","children":[{"name":"address","type":"Variable","children":[],"number":9}],"property":"address"},{"name":"city","type":"KeyValue","children":[{"name":"city","type":"Variable","children":[],"number":10}],"property":"city"},{"name":"region","type":"KeyValue","children":[{"name":"region","type":"Variable","children":[],"number":11}],"property":"region"},{"name":"postalCode","type":"KeyValue","children":[{"name":"postalCode","type":"Variable","children":[],"number":12}],"property":"postalCode"},{"name":"country","type":"KeyValue","children":[{"name":"country","type":"Variable","children":[],"number":13}],"property":"country"}]}]}],"fields":[{"name":"customerId","type":"string"},{"name":"employeeId","type":"integer"},{"name":"orderDate","type":"datetime"},{"name":"requiredDate","type":"datetime"},{"name":"shippedDate","type":"datetime"},{"name":"shipViaId","type":"integer"},{"name":"freight","type":"decimal"},{"name":"name","type":"string"},{"name":"address","type":"string"},{"name":"city","type":"string"},{"name":"region","type":"string"},{"name":"postalCode","type":"string"},{"name":"country","type":"string"}],"parameters":[{"name":"customerId","type":"string"},{"name":"employeeId","type":"integer"},{"name":"orderDate","type":"datetime"},{"name":"requiredDate","type":"datetime"},{"name":"shippedDate","type":"datetime"},{"name":"shipViaId","type":"integer"},{"name":"freight","type":"decimal"},{"name":"name","type":"string"},{"name":"address","type":"string"},{"name":"city","type":"string"},{"name":"region","type":"string"},{"name":"postalCode","type":"string"},{"name":"country","type":"string"},{"name":"obj.id","type":"integer"}],"entity":"Orders"}
		const constraintsExpected :any= {"entity":"Orders","constraints":[{"message":"Cannot be null property customerId in entity Orders","condition":"isNotNull(customerId)"},{"message":"Cannot be null property employeeId in entity Orders","condition":"isNotNull(employeeId)"}]}
		const model = orm.model(expression)
		const parameters = orm.parameters(expression)
		const constraints = orm.constraints(expression)
		const metadata = orm.metadata(expression)
		expect(modelExpected).toStrictEqual(model)
		expect(metadataExpected.fields).toStrictEqual(metadata.fields)
		expect(parametersExpected).toStrictEqual(parameters)
		expect(constraintsExpected).toStrictEqual(constraints)
	})
	test('update 2', async () => {
		const expression = 'Orders.update(entity)'
		const modelExpected :any= [{"name":"customerId","type":"string"},{"name":"employeeId","type":"integer"},{"name":"orderDate","type":"datetime"},{"name":"requiredDate","type":"datetime"},{"name":"shippedDate","type":"datetime"},{"name":"shipViaId","type":"integer"},{"name":"freight","type":"decimal"},{"name":"name","type":"string"},{"name":"address","type":"string"},{"name":"city","type":"string"},{"name":"region","type":"string"},{"name":"postalCode","type":"string"},{"name":"country","type":"string"}]
		const parametersExpected:any = [{"name":"entity.customerId","type":"string"},{"name":"entity.employeeId","type":"integer"},{"name":"entity.orderDate","type":"datetime"},{"name":"entity.requiredDate","type":"datetime"},{"name":"entity.shippedDate","type":"datetime"},{"name":"entity.shipViaId","type":"integer"},{"name":"entity.freight","type":"decimal"},{"name":"entity.name","type":"string"},{"name":"entity.address","type":"string"},{"name":"entity.city","type":"string"},{"name":"entity.region","type":"string"},{"name":"entity.postalCode","type":"string"},{"name":"entity.country","type":"string"},{"name":"obj.id","type":"integer"}]
		const metadataExpected :any= {"name":"update","type":"Sentence","children":[{"name":"filter","type":"Filter","children":[{"name":"==","type":"Operator","children":[{"name":"id","type":"Field","children":[],"entity":"Orders","alias":"o"},{"name":"obj.id","type":"Variable","children":[],"number":14}]}]},{"name":"Orders.o","type":"From","children":[]},{"name":"Orders.o","type":"Update","children":[{"name":"obj","type":"Obj","children":[{"name":"customerId","type":"KeyValue","children":[{"name":"entity.customerId","type":"Variable","children":[],"number":1}],"property":"customerId"},{"name":"employeeId","type":"KeyValue","children":[{"name":"entity.employeeId","type":"Variable","children":[],"number":2}],"property":"employeeId"},{"name":"orderDate","type":"KeyValue","children":[{"name":"entity.orderDate","type":"Variable","children":[],"number":3}],"property":"orderDate"},{"name":"requiredDate","type":"KeyValue","children":[{"name":"entity.requiredDate","type":"Variable","children":[],"number":4}],"property":"requiredDate"},{"name":"shippedDate","type":"KeyValue","children":[{"name":"entity.shippedDate","type":"Variable","children":[],"number":5}],"property":"shippedDate"},{"name":"shipViaId","type":"KeyValue","children":[{"name":"entity.shipViaId","type":"Variable","children":[],"number":6}],"property":"shipViaId"},{"name":"freight","type":"KeyValue","children":[{"name":"entity.freight","type":"Variable","children":[],"number":7}],"property":"freight"},{"name":"name","type":"KeyValue","children":[{"name":"entity.name","type":"Variable","children":[],"number":8}],"property":"name"},{"name":"address","type":"KeyValue","children":[{"name":"entity.address","type":"Variable","children":[],"number":9}],"property":"address"},{"name":"city","type":"KeyValue","children":[{"name":"entity.city","type":"Variable","children":[],"number":10}],"property":"city"},{"name":"region","type":"KeyValue","children":[{"name":"entity.region","type":"Variable","children":[],"number":11}],"property":"region"},{"name":"postalCode","type":"KeyValue","children":[{"name":"entity.postalCode","type":"Variable","children":[],"number":12}],"property":"postalCode"},{"name":"country","type":"KeyValue","children":[{"name":"entity.country","type":"Variable","children":[],"number":13}],"property":"country"}]}]}],"fields":[{"name":"customerId","type":"string"},{"name":"employeeId","type":"integer"},{"name":"orderDate","type":"datetime"},{"name":"requiredDate","type":"datetime"},{"name":"shippedDate","type":"datetime"},{"name":"shipViaId","type":"integer"},{"name":"freight","type":"decimal"},{"name":"name","type":"string"},{"name":"address","type":"string"},{"name":"city","type":"string"},{"name":"region","type":"string"},{"name":"postalCode","type":"string"},{"name":"country","type":"string"}],"parameters":[{"name":"entity.customerId","type":"string"},{"name":"entity.employeeId","type":"integer"},{"name":"entity.orderDate","type":"datetime"},{"name":"entity.requiredDate","type":"datetime"},{"name":"entity.shippedDate","type":"datetime"},{"name":"entity.shipViaId","type":"integer"},{"name":"entity.freight","type":"decimal"},{"name":"entity.name","type":"string"},{"name":"entity.address","type":"string"},{"name":"entity.city","type":"string"},{"name":"entity.region","type":"string"},{"name":"entity.postalCode","type":"string"},{"name":"entity.country","type":"string"},{"name":"obj.id","type":"integer"}],"entity":"Orders"}
		const constraintsExpected :any= {"entity":"Orders","constraints":[]}
		const model = orm.model(expression)
		const parameters = orm.parameters(expression)
		const constraints = orm.constraints(expression)
		const metadata = orm.metadata(expression)
		expect(modelExpected).toStrictEqual(model)
		expect(metadataExpected.fields).toStrictEqual(metadata.fields)
		expect(parametersExpected).toStrictEqual(parameters)
		expect(constraintsExpected).toStrictEqual(constraints)
	})
	test('update 3', async () => {
		const expression = 'Orders.updateAll(=>{postalCode:postalCode})'
		const modelExpected :any= [{"name":"postalCode","type":"string"}]
		const parametersExpected:any = [{"name":"postalCode","type":"string"}]
		const metadataExpected :any= {"name":"update","type":"Sentence","children":[{"name":"Orders.o","type":"From","children":[]},{"name":"Orders.o","type":"Update","children":[{"name":"obj","type":"Obj","children":[{"name":"postalCode","type":"KeyValue","children":[{"name":"postalCode","type":"Variable","children":[],"number":1}],"property":"postalCode"}]}]}],"fields":[{"name":"postalCode","type":"string"}],"parameters":[{"name":"postalCode","type":"string"}],"entity":"Orders"}
		const constraintsExpected :any= {"entity":"Orders","constraints":[]}
		const model = orm.model(expression)
		const parameters = orm.parameters(expression)
		const constraints = orm.constraints(expression)
		const metadata = orm.metadata(expression)
		expect(modelExpected).toStrictEqual(model)
		expect(metadataExpected.fields).toStrictEqual(metadata.fields)
		expect(parametersExpected).toStrictEqual(parameters)
		expect(constraintsExpected).toStrictEqual(constraints)
	})
	test('update 4', async () => {
		const expression = 'Orders.update(p=>{name:entity.name}).filter(p=>(p.id===entity.id))'
		const modelExpected :any= [{"name":"name","type":"string"}]
		const parametersExpected:any = [{"name":"entity.name","type":"string"},{"name":"entity.id","type":"integer"}]
		const metadataExpected :any= {"name":"update","type":"Sentence","children":[{"name":"filter","type":"Filter","children":[{"name":"===","type":"Operator","children":[{"name":"id","type":"Field","children":[],"entity":"Orders","alias":"o"},{"name":"entity.id","type":"Variable","children":[],"number":2}]}]},{"name":"Orders.o","type":"From","children":[]},{"name":"Orders.o","type":"Update","children":[{"name":"obj","type":"Obj","children":[{"name":"name","type":"KeyValue","children":[{"name":"entity.name","type":"Variable","children":[],"number":1}],"property":"name"}]}]}],"fields":[{"name":"name","type":"string"}],"parameters":[{"name":"entity.name","type":"string"},{"name":"entity.id","type":"integer"}],"entity":"Orders"}
		const constraintsExpected :any= {"entity":"Orders","constraints":[]}
		const model = orm.model(expression)
		const parameters = orm.parameters(expression)
		const constraints = orm.constraints(expression)
		const metadata = orm.metadata(expression)
		expect(modelExpected).toStrictEqual(model)
		expect(metadataExpected.fields).toStrictEqual(metadata.fields)
		expect(parametersExpected).toStrictEqual(parameters)
		expect(constraintsExpected).toStrictEqual(constraints)
	})
	test('update 5', async () => {
		const expression = 'Orders.update(=>{name:entity.name}).include(p=>p.details).filter(p=>(p.id===entity.id))'
		const modelExpected :any= [{"name":"name","type":"string"},{"name":"details","type":"OrderDetails[]","childs":[{"name":"orderId","type":"integer"},{"name":"productId","type":"integer"},{"name":"unitPrice","type":"decimal"},{"name":"quantity","type":"decimal"},{"name":"discount","type":"decimal"}]}]
		const parametersExpected:any = [{"name":"entity.name","type":"string"},{"name":"entity.id","type":"integer"},{"name":"details","type":"OrderDetails","childs":[{"name":"orderId","type":"integer"},{"name":"productId","type":"integer"},{"name":"unitPrice","type":"decimal"},{"name":"quantity","type":"decimal"},{"name":"discount","type":"decimal"},{"name":"obj.orderId","type":"integer"},{"name":"obj.productId","type":"integer"}]}]
		const metadataExpected :any= {"name":"update","type":"Sentence","children":[{"name":"filter","type":"Filter","children":[{"name":"===","type":"Operator","children":[{"name":"id","type":"Field","children":[],"entity":"Orders","alias":"o"},{"name":"entity.id","type":"Variable","children":[],"number":2}]}]},{"name":"Orders.o","type":"From","children":[]},{"name":"Orders.o","type":"Update","children":[{"name":"obj","type":"Obj","children":[{"name":"name","type":"KeyValue","children":[{"name":"entity.name","type":"Variable","children":[],"number":1}],"property":"name"}]}]},{"name":"details","type":"SentenceInclude","children":[{"name":"update","type":"Sentence","children":[{"name":"filter","type":"Filter","children":[{"name":"&&","type":"Operator","children":[{"name":"==","type":"Operator","children":[{"name":"orderId","type":"Field","children":[],"entity":"OrderDetails","alias":"o1"},{"name":"obj.orderId","type":"Variable","children":[],"number":6}]},{"name":"==","type":"Operator","children":[{"name":"productId","type":"Field","children":[],"entity":"OrderDetails","alias":"o1"},{"name":"obj.productId","type":"Variable","children":[],"number":7}]}]}]},{"name":"OrderDetails.o1","type":"From","children":[]},{"name":"OrderDetails.o1","type":"Update","children":[{"name":"obj","type":"Obj","children":[{"name":"orderId","type":"KeyValue","children":[{"name":"orderId","type":"Variable","children":[],"number":1}],"property":"orderId"},{"name":"productId","type":"KeyValue","children":[{"name":"productId","type":"Variable","children":[],"number":2}],"property":"productId"},{"name":"unitPrice","type":"KeyValue","children":[{"name":"unitPrice","type":"Variable","children":[],"number":3}],"property":"unitPrice"},{"name":"quantity","type":"KeyValue","children":[{"name":"quantity","type":"Variable","children":[],"number":4}],"property":"quantity"},{"name":"discount","type":"KeyValue","children":[{"name":"discount","type":"Variable","children":[],"number":5}],"property":"discount"}]}]}],"fields":[{"name":"orderId","type":"integer"},{"name":"productId","type":"integer"},{"name":"unitPrice","type":"decimal"},{"name":"quantity","type":"decimal"},{"name":"discount","type":"decimal"}],"parameters":[{"name":"orderId","type":"integer"},{"name":"productId","type":"integer"},{"name":"unitPrice","type":"decimal"},{"name":"quantity","type":"decimal"},{"name":"discount","type":"decimal"},{"name":"obj.orderId","type":"integer"},{"name":"obj.productId","type":"integer"}],"entity":"OrderDetails"}],"relation":{"name":"details","type":"manyToOne","composite":true,"from":"id","entity":"OrderDetails","weak":true,"to":"orderId","target":"order"}}],"fields":[{"name":"name","type":"string"}],"parameters":[{"name":"entity.name","type":"string"},{"name":"entity.id","type":"integer"}],"entity":"Orders"}
		const constraintsExpected :any= {"entity":"Orders","constraints":[],"childs":[{"entity":"OrderDetails","constraints":[{"message":"Cannot be null property orderId in entity OrderDetails","condition":"isNotNull(orderId)"},{"message":"Cannot be null property productId in entity OrderDetails","condition":"isNotNull(productId)"}]}]}
		const model = orm.model(expression)
		const parameters = orm.parameters(expression)
		const constraints = orm.constraints(expression)
		const metadata = orm.metadata(expression)
		expect(modelExpected).toStrictEqual(model)
		expect(metadataExpected.fields).toStrictEqual(metadata.fields)
		expect(parametersExpected).toStrictEqual(parameters)
		expect(constraintsExpected).toStrictEqual(constraints)
	})
	test('update 6', async () => {
		const expression = 'Orders.update(=>{name:entity.name}).include(p=>p.details.update(p=>p)).filter(p=>(p.id===entity.id))'
		const modelExpected :any= [{"name":"name","type":"string"},{"name":"details","type":"OrderDetails[]","childs":[{"name":"unitPrice","type":"decimal"},{"name":"quantity","type":"decimal"},{"name":"discount","type":"decimal"}]}]
		const parametersExpected:any = [{"name":"entity.name","type":"string"},{"name":"entity.id","type":"integer"},{"name":"details","type":"OrderDetails","childs":[{"name":"orderId","type":"integer"},{"name":"productId","type":"integer"}]}]
		const metadataExpected :any= {"name":"update","type":"Sentence","children":[{"name":"filter","type":"Filter","children":[{"name":"===","type":"Operator","children":[{"name":"id","type":"Field","children":[],"entity":"Orders","alias":"o"},{"name":"entity.id","type":"Variable","children":[],"number":2}]}]},{"name":"Orders.o","type":"From","children":[]},{"name":"Orders.o","type":"Update","children":[{"name":"obj","type":"Obj","children":[{"name":"name","type":"KeyValue","children":[{"name":"entity.name","type":"Variable","children":[],"number":1}],"property":"name"}]}]},{"name":"details","type":"SentenceInclude","children":[{"name":"update","type":"Sentence","children":[{"name":"filter","type":"Filter","children":[{"name":"&&","type":"Operator","children":[{"name":"==","type":"Operator","children":[{"name":"orderId","type":"Field","children":[],"entity":"OrderDetails","alias":"o1"},{"name":"orderId","type":"Variable","children":[],"number":1}]},{"name":"==","type":"Operator","children":[{"name":"productId","type":"Field","children":[],"entity":"OrderDetails","alias":"o1"},{"name":"productId","type":"Variable","children":[],"number":2}]}]}]},{"name":"OrderDetails.o1","type":"From","children":[]},{"name":"OrderDetails.o1","type":"Update","children":[{"name":"obj","type":"Obj","children":[{"name":"unitPrice","type":"KeyValue","children":[{"name":"unitPrice","type":"Field","children":[],"entity":"OrderDetails","alias":"o1"}],"property":"unitPrice"},{"name":"quantity","type":"KeyValue","children":[{"name":"quantity","type":"Field","children":[],"entity":"OrderDetails","alias":"o1"}],"property":"quantity"},{"name":"discount","type":"KeyValue","children":[{"name":"discount","type":"Field","children":[],"entity":"OrderDetails","alias":"o1"}],"property":"discount"}]}]}],"fields":[{"name":"unitPrice","type":"decimal"},{"name":"quantity","type":"decimal"},{"name":"discount","type":"decimal"}],"parameters":[{"name":"orderId","type":"integer"},{"name":"productId","type":"integer"}],"entity":"OrderDetails"}],"relation":{"name":"details","type":"manyToOne","composite":true,"from":"id","entity":"OrderDetails","weak":true,"to":"orderId","target":"order"}}],"fields":[{"name":"name","type":"string"}],"parameters":[{"name":"entity.name","type":"string"},{"name":"entity.id","type":"integer"}],"entity":"Orders"}
		const constraintsExpected :any= {"entity":"Orders","constraints":[],"childs":[{"entity":"OrderDetails","constraints":[{"message":"Cannot be null property orderId in entity OrderDetails","condition":"isNotNull(orderId)"},{"message":"Cannot be null property productId in entity OrderDetails","condition":"isNotNull(productId)"}]}]}
		const model = orm.model(expression)
		const parameters = orm.parameters(expression)
		const constraints = orm.constraints(expression)
		const metadata = orm.metadata(expression)
		expect(modelExpected).toStrictEqual(model)
		expect(metadataExpected.fields).toStrictEqual(metadata.fields)
		expect(parametersExpected).toStrictEqual(parameters)
		expect(constraintsExpected).toStrictEqual(constraints)
	})
	test('update 7', async () => {
		const expression = 'Orders.update(=>{name:entity.name}).include(p=>p.details.update(p=>{unitPrice:p.unitPrice,productId:p.productId})).filter(p=>(p.id===entity.id))'
		const modelExpected :any= [{"name":"name","type":"string"},{"name":"details","type":"OrderDetails[]","childs":[{"name":"unitPrice","type":"decimal"},{"name":"productId","type":"integer"}]}]
		const parametersExpected:any = [{"name":"entity.name","type":"string"},{"name":"entity.id","type":"integer"},{"name":"details","type":"OrderDetails","childs":[{"name":"orderId","type":"integer"},{"name":"productId","type":"integer"}]}]
		const metadataExpected :any= {"name":"update","type":"Sentence","children":[{"name":"filter","type":"Filter","children":[{"name":"===","type":"Operator","children":[{"name":"id","type":"Field","children":[],"entity":"Orders","alias":"o"},{"name":"entity.id","type":"Variable","children":[],"number":2}]}]},{"name":"Orders.o","type":"From","children":[]},{"name":"Orders.o","type":"Update","children":[{"name":"obj","type":"Obj","children":[{"name":"name","type":"KeyValue","children":[{"name":"entity.name","type":"Variable","children":[],"number":1}],"property":"name"}]}]},{"name":"details","type":"SentenceInclude","children":[{"name":"update","type":"Sentence","children":[{"name":"filter","type":"Filter","children":[{"name":"&&","type":"Operator","children":[{"name":"==","type":"Operator","children":[{"name":"orderId","type":"Field","children":[],"entity":"OrderDetails","alias":"o1"},{"name":"orderId","type":"Variable","children":[],"number":1}]},{"name":"==","type":"Operator","children":[{"name":"productId","type":"Field","children":[],"entity":"OrderDetails","alias":"o1"},{"name":"productId","type":"Variable","children":[],"number":2}]}]}]},{"name":"OrderDetails.o1","type":"From","children":[]},{"name":"OrderDetails.o1","type":"Update","children":[{"name":"obj","type":"Obj","children":[{"name":"unitPrice","type":"KeyValue","children":[{"name":"unitPrice","type":"Field","children":[],"entity":"OrderDetails","alias":"o1"}],"property":"unitPrice"},{"name":"productId","type":"KeyValue","children":[{"name":"productId","type":"Field","children":[],"entity":"OrderDetails","alias":"o1"}],"property":"productId"}]}]}],"fields":[{"name":"unitPrice","type":"decimal"},{"name":"productId","type":"integer"}],"parameters":[{"name":"orderId","type":"integer"},{"name":"productId","type":"integer"}],"entity":"OrderDetails"}],"relation":{"name":"details","type":"manyToOne","composite":true,"from":"id","entity":"OrderDetails","weak":true,"to":"orderId","target":"order"}}],"fields":[{"name":"name","type":"string"}],"parameters":[{"name":"entity.name","type":"string"},{"name":"entity.id","type":"integer"}],"entity":"Orders"}
		const constraintsExpected :any= {"entity":"Orders","constraints":[],"childs":[{"entity":"OrderDetails","constraints":[{"message":"Cannot be null property orderId in entity OrderDetails","condition":"isNotNull(orderId)"},{"message":"Cannot be null property productId in entity OrderDetails","condition":"isNotNull(productId)"}]}]}
		const model = orm.model(expression)
		const parameters = orm.parameters(expression)
		const constraints = orm.constraints(expression)
		const metadata = orm.metadata(expression)
		expect(modelExpected).toStrictEqual(model)
		expect(metadataExpected.fields).toStrictEqual(metadata.fields)
		expect(parametersExpected).toStrictEqual(parameters)
		expect(constraintsExpected).toStrictEqual(constraints)
	})
	test('update 8', async () => {
		const expression = 'Orders.update().include(p=>p.details)'
		const modelExpected :any= [{"name":"customerId","type":"string"},{"name":"employeeId","type":"integer"},{"name":"orderDate","type":"datetime"},{"name":"requiredDate","type":"datetime"},{"name":"shippedDate","type":"datetime"},{"name":"shipViaId","type":"integer"},{"name":"freight","type":"decimal"},{"name":"name","type":"string"},{"name":"address","type":"string"},{"name":"city","type":"string"},{"name":"region","type":"string"},{"name":"postalCode","type":"string"},{"name":"country","type":"string"},{"name":"details","type":"OrderDetails[]","childs":[{"name":"orderId","type":"integer"},{"name":"productId","type":"integer"},{"name":"unitPrice","type":"decimal"},{"name":"quantity","type":"decimal"},{"name":"discount","type":"decimal"}]}]
		const parametersExpected:any = [{"name":"customerId","type":"string"},{"name":"employeeId","type":"integer"},{"name":"orderDate","type":"datetime"},{"name":"requiredDate","type":"datetime"},{"name":"shippedDate","type":"datetime"},{"name":"shipViaId","type":"integer"},{"name":"freight","type":"decimal"},{"name":"name","type":"string"},{"name":"address","type":"string"},{"name":"city","type":"string"},{"name":"region","type":"string"},{"name":"postalCode","type":"string"},{"name":"country","type":"string"},{"name":"obj.id","type":"integer"},{"name":"details","type":"OrderDetails","childs":[{"name":"orderId","type":"integer"},{"name":"productId","type":"integer"},{"name":"unitPrice","type":"decimal"},{"name":"quantity","type":"decimal"},{"name":"discount","type":"decimal"},{"name":"obj.orderId","type":"integer"},{"name":"obj.productId","type":"integer"}]}]
		const metadataExpected :any= {"name":"update","type":"Sentence","children":[{"name":"filter","type":"Filter","children":[{"name":"==","type":"Operator","children":[{"name":"id","type":"Field","children":[],"entity":"Orders","alias":"o"},{"name":"obj.id","type":"Variable","children":[],"number":14}]}]},{"name":"Orders.o","type":"From","children":[]},{"name":"Orders.o","type":"Update","children":[{"name":"obj","type":"Obj","children":[{"name":"customerId","type":"KeyValue","children":[{"name":"customerId","type":"Variable","children":[],"number":1}],"property":"customerId"},{"name":"employeeId","type":"KeyValue","children":[{"name":"employeeId","type":"Variable","children":[],"number":2}],"property":"employeeId"},{"name":"orderDate","type":"KeyValue","children":[{"name":"orderDate","type":"Variable","children":[],"number":3}],"property":"orderDate"},{"name":"requiredDate","type":"KeyValue","children":[{"name":"requiredDate","type":"Variable","children":[],"number":4}],"property":"requiredDate"},{"name":"shippedDate","type":"KeyValue","children":[{"name":"shippedDate","type":"Variable","children":[],"number":5}],"property":"shippedDate"},{"name":"shipViaId","type":"KeyValue","children":[{"name":"shipViaId","type":"Variable","children":[],"number":6}],"property":"shipViaId"},{"name":"freight","type":"KeyValue","children":[{"name":"freight","type":"Variable","children":[],"number":7}],"property":"freight"},{"name":"name","type":"KeyValue","children":[{"name":"name","type":"Variable","children":[],"number":8}],"property":"name"},{"name":"address","type":"KeyValue","children":[{"name":"address","type":"Variable","children":[],"number":9}],"property":"address"},{"name":"city","type":"KeyValue","children":[{"name":"city","type":"Variable","children":[],"number":10}],"property":"city"},{"name":"region","type":"KeyValue","children":[{"name":"region","type":"Variable","children":[],"number":11}],"property":"region"},{"name":"postalCode","type":"KeyValue","children":[{"name":"postalCode","type":"Variable","children":[],"number":12}],"property":"postalCode"},{"name":"country","type":"KeyValue","children":[{"name":"country","type":"Variable","children":[],"number":13}],"property":"country"}]}]},{"name":"details","type":"SentenceInclude","children":[{"name":"update","type":"Sentence","children":[{"name":"filter","type":"Filter","children":[{"name":"&&","type":"Operator","children":[{"name":"==","type":"Operator","children":[{"name":"orderId","type":"Field","children":[],"entity":"OrderDetails","alias":"o1"},{"name":"obj.orderId","type":"Variable","children":[],"number":6}]},{"name":"==","type":"Operator","children":[{"name":"productId","type":"Field","children":[],"entity":"OrderDetails","alias":"o1"},{"name":"obj.productId","type":"Variable","children":[],"number":7}]}]}]},{"name":"OrderDetails.o1","type":"From","children":[]},{"name":"OrderDetails.o1","type":"Update","children":[{"name":"obj","type":"Obj","children":[{"name":"orderId","type":"KeyValue","children":[{"name":"orderId","type":"Variable","children":[],"number":1}],"property":"orderId"},{"name":"productId","type":"KeyValue","children":[{"name":"productId","type":"Variable","children":[],"number":2}],"property":"productId"},{"name":"unitPrice","type":"KeyValue","children":[{"name":"unitPrice","type":"Variable","children":[],"number":3}],"property":"unitPrice"},{"name":"quantity","type":"KeyValue","children":[{"name":"quantity","type":"Variable","children":[],"number":4}],"property":"quantity"},{"name":"discount","type":"KeyValue","children":[{"name":"discount","type":"Variable","children":[],"number":5}],"property":"discount"}]}]}],"fields":[{"name":"orderId","type":"integer"},{"name":"productId","type":"integer"},{"name":"unitPrice","type":"decimal"},{"name":"quantity","type":"decimal"},{"name":"discount","type":"decimal"}],"parameters":[{"name":"orderId","type":"integer"},{"name":"productId","type":"integer"},{"name":"unitPrice","type":"decimal"},{"name":"quantity","type":"decimal"},{"name":"discount","type":"decimal"},{"name":"obj.orderId","type":"integer"},{"name":"obj.productId","type":"integer"}],"entity":"OrderDetails"}],"relation":{"name":"details","type":"manyToOne","composite":true,"from":"id","entity":"OrderDetails","weak":true,"to":"orderId","target":"order"}}],"fields":[{"name":"customerId","type":"string"},{"name":"employeeId","type":"integer"},{"name":"orderDate","type":"datetime"},{"name":"requiredDate","type":"datetime"},{"name":"shippedDate","type":"datetime"},{"name":"shipViaId","type":"integer"},{"name":"freight","type":"decimal"},{"name":"name","type":"string"},{"name":"address","type":"string"},{"name":"city","type":"string"},{"name":"region","type":"string"},{"name":"postalCode","type":"string"},{"name":"country","type":"string"}],"parameters":[{"name":"customerId","type":"string"},{"name":"employeeId","type":"integer"},{"name":"orderDate","type":"datetime"},{"name":"requiredDate","type":"datetime"},{"name":"shippedDate","type":"datetime"},{"name":"shipViaId","type":"integer"},{"name":"freight","type":"decimal"},{"name":"name","type":"string"},{"name":"address","type":"string"},{"name":"city","type":"string"},{"name":"region","type":"string"},{"name":"postalCode","type":"string"},{"name":"country","type":"string"},{"name":"obj.id","type":"integer"}],"entity":"Orders"}
		const constraintsExpected :any= {"entity":"Orders","constraints":[{"message":"Cannot be null property customerId in entity Orders","condition":"isNotNull(customerId)"},{"message":"Cannot be null property employeeId in entity Orders","condition":"isNotNull(employeeId)"}],"childs":[{"entity":"OrderDetails","constraints":[{"message":"Cannot be null property orderId in entity OrderDetails","condition":"isNotNull(orderId)"},{"message":"Cannot be null property productId in entity OrderDetails","condition":"isNotNull(productId)"}]}]}
		const model = orm.model(expression)
		const parameters = orm.parameters(expression)
		const constraints = orm.constraints(expression)
		const metadata = orm.metadata(expression)
		expect(modelExpected).toStrictEqual(model)
		expect(metadataExpected.fields).toStrictEqual(metadata.fields)
		expect(parametersExpected).toStrictEqual(parameters)
		expect(constraintsExpected).toStrictEqual(constraints)
	})
	test('update 9', async () => {
		const expression = 'Customers.update().include(p=>p.orders.include(p=>p.details))'
		const modelExpected :any= [{"name":"id","type":"string"},{"name":"name","type":"string"},{"name":"contact","type":"string"},{"name":"phone","type":"string"},{"name":"address","type":"string"},{"name":"city","type":"string"},{"name":"region","type":"string"},{"name":"postalCode","type":"string"},{"name":"country","type":"string"},{"name":"orders","type":"Orders[]","childs":[{"name":"customerId","type":"string"},{"name":"employeeId","type":"integer"},{"name":"orderDate","type":"datetime"},{"name":"requiredDate","type":"datetime"},{"name":"shippedDate","type":"datetime"},{"name":"shipViaId","type":"integer"},{"name":"freight","type":"decimal"},{"name":"name","type":"string"},{"name":"address","type":"string"},{"name":"city","type":"string"},{"name":"region","type":"string"},{"name":"postalCode","type":"string"},{"name":"country","type":"string"},{"name":"details","type":"OrderDetails[]","childs":[{"name":"orderId","type":"integer"},{"name":"productId","type":"integer"},{"name":"unitPrice","type":"decimal"},{"name":"quantity","type":"decimal"},{"name":"discount","type":"decimal"}]}]}]
		const parametersExpected:any = [{"name":"id","type":"string"},{"name":"name","type":"string"},{"name":"contact","type":"string"},{"name":"phone","type":"string"},{"name":"address","type":"string"},{"name":"city","type":"string"},{"name":"region","type":"string"},{"name":"postalCode","type":"string"},{"name":"country","type":"string"},{"name":"obj.id","type":"string"},{"name":"orders","type":"Orders","childs":[{"name":"customerId","type":"string"},{"name":"employeeId","type":"integer"},{"name":"orderDate","type":"datetime"},{"name":"requiredDate","type":"datetime"},{"name":"shippedDate","type":"datetime"},{"name":"shipViaId","type":"integer"},{"name":"freight","type":"decimal"},{"name":"name","type":"string"},{"name":"address","type":"string"},{"name":"city","type":"string"},{"name":"region","type":"string"},{"name":"postalCode","type":"string"},{"name":"country","type":"string"},{"name":"obj.id","type":"integer"},{"name":"details","type":"OrderDetails","childs":[{"name":"orderId","type":"integer"},{"name":"productId","type":"integer"},{"name":"unitPrice","type":"decimal"},{"name":"quantity","type":"decimal"},{"name":"discount","type":"decimal"},{"name":"obj.orderId","type":"integer"},{"name":"obj.productId","type":"integer"}]}]}]
		const metadataExpected :any= {"name":"update","type":"Sentence","children":[{"name":"filter","type":"Filter","children":[{"name":"==","type":"Operator","children":[{"name":"id","type":"Field","children":[],"entity":"Customers","alias":"c"},{"name":"obj.id","type":"Variable","children":[],"number":10}]}]},{"name":"Customers.c","type":"From","children":[]},{"name":"Customers.c","type":"Update","children":[{"name":"obj","type":"Obj","children":[{"name":"id","type":"KeyValue","children":[{"name":"id","type":"Variable","children":[],"number":1}],"property":"id"},{"name":"name","type":"KeyValue","children":[{"name":"name","type":"Variable","children":[],"number":2}],"property":"name"},{"name":"contact","type":"KeyValue","children":[{"name":"contact","type":"Variable","children":[],"number":3}],"property":"contact"},{"name":"phone","type":"KeyValue","children":[{"name":"phone","type":"Variable","children":[],"number":4}],"property":"phone"},{"name":"address","type":"KeyValue","children":[{"name":"address","type":"Variable","children":[],"number":5}],"property":"address"},{"name":"city","type":"KeyValue","children":[{"name":"city","type":"Variable","children":[],"number":6}],"property":"city"},{"name":"region","type":"KeyValue","children":[{"name":"region","type":"Variable","children":[],"number":7}],"property":"region"},{"name":"postalCode","type":"KeyValue","children":[{"name":"postalCode","type":"Variable","children":[],"number":8}],"property":"postalCode"},{"name":"country","type":"KeyValue","children":[{"name":"country","type":"Variable","children":[],"number":9}],"property":"country"}]}]},{"name":"orders","type":"SentenceInclude","children":[{"name":"update","type":"Sentence","children":[{"name":"filter","type":"Filter","children":[{"name":"==","type":"Operator","children":[{"name":"id","type":"Field","children":[],"entity":"Orders","alias":"o"},{"name":"obj.id","type":"Variable","children":[],"number":14}]}]},{"name":"Orders.o","type":"From","children":[]},{"name":"Orders.o","type":"Update","children":[{"name":"obj","type":"Obj","children":[{"name":"customerId","type":"KeyValue","children":[{"name":"customerId","type":"Variable","children":[],"number":1}],"property":"customerId"},{"name":"employeeId","type":"KeyValue","children":[{"name":"employeeId","type":"Variable","children":[],"number":2}],"property":"employeeId"},{"name":"orderDate","type":"KeyValue","children":[{"name":"orderDate","type":"Variable","children":[],"number":3}],"property":"orderDate"},{"name":"requiredDate","type":"KeyValue","children":[{"name":"requiredDate","type":"Variable","children":[],"number":4}],"property":"requiredDate"},{"name":"shippedDate","type":"KeyValue","children":[{"name":"shippedDate","type":"Variable","children":[],"number":5}],"property":"shippedDate"},{"name":"shipViaId","type":"KeyValue","children":[{"name":"shipViaId","type":"Variable","children":[],"number":6}],"property":"shipViaId"},{"name":"freight","type":"KeyValue","children":[{"name":"freight","type":"Variable","children":[],"number":7}],"property":"freight"},{"name":"name","type":"KeyValue","children":[{"name":"name","type":"Variable","children":[],"number":8}],"property":"name"},{"name":"address","type":"KeyValue","children":[{"name":"address","type":"Variable","children":[],"number":9}],"property":"address"},{"name":"city","type":"KeyValue","children":[{"name":"city","type":"Variable","children":[],"number":10}],"property":"city"},{"name":"region","type":"KeyValue","children":[{"name":"region","type":"Variable","children":[],"number":11}],"property":"region"},{"name":"postalCode","type":"KeyValue","children":[{"name":"postalCode","type":"Variable","children":[],"number":12}],"property":"postalCode"},{"name":"country","type":"KeyValue","children":[{"name":"country","type":"Variable","children":[],"number":13}],"property":"country"}]}]},{"name":"details","type":"SentenceInclude","children":[{"name":"update","type":"Sentence","children":[{"name":"filter","type":"Filter","children":[{"name":"&&","type":"Operator","children":[{"name":"==","type":"Operator","children":[{"name":"orderId","type":"Field","children":[],"entity":"OrderDetails","alias":"o1"},{"name":"obj.orderId","type":"Variable","children":[],"number":6}]},{"name":"==","type":"Operator","children":[{"name":"productId","type":"Field","children":[],"entity":"OrderDetails","alias":"o1"},{"name":"obj.productId","type":"Variable","children":[],"number":7}]}]}]},{"name":"OrderDetails.o1","type":"From","children":[]},{"name":"OrderDetails.o1","type":"Update","children":[{"name":"obj","type":"Obj","children":[{"name":"orderId","type":"KeyValue","children":[{"name":"orderId","type":"Variable","children":[],"number":1}],"property":"orderId"},{"name":"productId","type":"KeyValue","children":[{"name":"productId","type":"Variable","children":[],"number":2}],"property":"productId"},{"name":"unitPrice","type":"KeyValue","children":[{"name":"unitPrice","type":"Variable","children":[],"number":3}],"property":"unitPrice"},{"name":"quantity","type":"KeyValue","children":[{"name":"quantity","type":"Variable","children":[],"number":4}],"property":"quantity"},{"name":"discount","type":"KeyValue","children":[{"name":"discount","type":"Variable","children":[],"number":5}],"property":"discount"}]}]}],"fields":[{"name":"orderId","type":"integer"},{"name":"productId","type":"integer"},{"name":"unitPrice","type":"decimal"},{"name":"quantity","type":"decimal"},{"name":"discount","type":"decimal"}],"parameters":[{"name":"orderId","type":"integer"},{"name":"productId","type":"integer"},{"name":"unitPrice","type":"decimal"},{"name":"quantity","type":"decimal"},{"name":"discount","type":"decimal"},{"name":"obj.orderId","type":"integer"},{"name":"obj.productId","type":"integer"}],"entity":"OrderDetails"}],"relation":{"name":"details","type":"manyToOne","composite":true,"from":"id","entity":"OrderDetails","weak":true,"to":"orderId","target":"order"}}],"fields":[{"name":"customerId","type":"string"},{"name":"employeeId","type":"integer"},{"name":"orderDate","type":"datetime"},{"name":"requiredDate","type":"datetime"},{"name":"shippedDate","type":"datetime"},{"name":"shipViaId","type":"integer"},{"name":"freight","type":"decimal"},{"name":"name","type":"string"},{"name":"address","type":"string"},{"name":"city","type":"string"},{"name":"region","type":"string"},{"name":"postalCode","type":"string"},{"name":"country","type":"string"}],"parameters":[{"name":"customerId","type":"string"},{"name":"employeeId","type":"integer"},{"name":"orderDate","type":"datetime"},{"name":"requiredDate","type":"datetime"},{"name":"shippedDate","type":"datetime"},{"name":"shipViaId","type":"integer"},{"name":"freight","type":"decimal"},{"name":"name","type":"string"},{"name":"address","type":"string"},{"name":"city","type":"string"},{"name":"region","type":"string"},{"name":"postalCode","type":"string"},{"name":"country","type":"string"},{"name":"obj.id","type":"integer"}],"entity":"Orders"}],"relation":{"name":"orders","type":"manyToOne","composite":true,"from":"id","entity":"Orders","weak":true,"to":"customerId","target":"customer"}}],"fields":[{"name":"id","type":"string"},{"name":"name","type":"string"},{"name":"contact","type":"string"},{"name":"phone","type":"string"},{"name":"address","type":"string"},{"name":"city","type":"string"},{"name":"region","type":"string"},{"name":"postalCode","type":"string"},{"name":"country","type":"string"}],"parameters":[{"name":"id","type":"string"},{"name":"name","type":"string"},{"name":"contact","type":"string"},{"name":"phone","type":"string"},{"name":"address","type":"string"},{"name":"city","type":"string"},{"name":"region","type":"string"},{"name":"postalCode","type":"string"},{"name":"country","type":"string"},{"name":"obj.id","type":"string"}],"entity":"Customers"}
		const constraintsExpected :any= {"entity":"Customers","constraints":[{"message":"Cannot be null property id in entity Customers","condition":"isNotNull(id)"},{"message":"Cannot be null property name in entity Customers","condition":"isNotNull(name)"}],"childs":[{"entity":"Orders","constraints":[{"message":"Cannot be null property customerId in entity Orders","condition":"isNotNull(customerId)"},{"message":"Cannot be null property employeeId in entity Orders","condition":"isNotNull(employeeId)"}],"childs":[{"entity":"OrderDetails","constraints":[{"message":"Cannot be null property orderId in entity OrderDetails","condition":"isNotNull(orderId)"},{"message":"Cannot be null property productId in entity OrderDetails","condition":"isNotNull(productId)"}]}]}]}
		const model = orm.model(expression)
		const parameters = orm.parameters(expression)
		const constraints = orm.constraints(expression)
		const metadata = orm.metadata(expression)
		expect(modelExpected).toStrictEqual(model)
		expect(metadataExpected.fields).toStrictEqual(metadata.fields)
		expect(parametersExpected).toStrictEqual(parameters)
		expect(constraintsExpected).toStrictEqual(constraints)
	})
})
describe('Sentences', () => {
	test('update 1', async () => {
		const expression = 'Orders.update()'
	})
	test('update 2', async () => {
		const expression = 'Orders.update(entity)'
	})
	test('update 3', async () => {
		const expression = 'Orders.updateAll(=>{postalCode:postalCode})'
	})
	test('update 4', async () => {
		const expression = 'Orders.update(p=>{name:entity.name}).filter(p=>(p.id===entity.id))'
	})
	test('update 5', async () => {
		const expression = 'Orders.update(=>{name:entity.name}).include(p=>p.details).filter(p=>(p.id===entity.id))'
	})
	test('update 6', async () => {
		const expression = 'Orders.update(=>{name:entity.name}).include(p=>p.details.update(p=>p)).filter(p=>(p.id===entity.id))'
	})
	test('update 7', async () => {
		const expression = 'Orders.update(=>{name:entity.name}).include(p=>p.details.update(p=>{unitPrice:p.unitPrice,productId:p.productId})).filter(p=>(p.id===entity.id))'
	})
	test('update 8', async () => {
		const expression = 'Orders.update().include(p=>p.details)'
	})
	test('update 9', async () => {
		const expression = 'Customers.update().include(p=>p.orders.include(p=>p.details))'
	})
})