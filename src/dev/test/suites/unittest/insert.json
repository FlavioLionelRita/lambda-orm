{
  "name": "insert",
  "context": {
    "id": 1
  },
  "cases": [
    {
      "name": "normalize",
      "tests": [
        {
          "test": "Categories.insert({name:name,description:description})",
          "result": "Categories.insert({name:name,description:description})"
        },
        {
          "test": "Categories.insert()",
          "result": "Categories.insert({name:name,description:description})"
        },
        {
          "test": "Categories.insert([name, description])",
          "result": "Categories.insert({name:name,description:description})"
        },
        {
          "test": "Categories.insert(entity)",
          "result": "Categories.insert({name:entity.name,description:entity.description})"
        },
        {
          "test": "Orders.insert()",
          "result": "Orders.insert({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country})"
        },
        {
          "test": "Orders.insert().include(p => p.details)",
          "result": "Orders.insert({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country}).include(p=>p.details.insert({orderId:orderId,productId:productId,unitPrice:unitPrice,quantity:quantity,discount:discount}))"
        },
        {
          "test": "Orders.insert().include(p => [p.details, p.customer])",
          "result": "Orders.insert({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country}).include(p=>p.details.insert({orderId:orderId,productId:productId,unitPrice:unitPrice,quantity:quantity,discount:discount}))"
        },
        {
          "test": "Categories.insert(() => ({ name: name, description: description }))",
          "result": "Categories.insert({name:name,description:description})"
        },
        {
          "test": "Categories.insert(p=>{name:p.name,description:p.description})",
          "result": "Categories.insert({name:p.name,description:p.description})"
        },
        {
          "test": "Categories.insert(p=> [p.name,p.description])",
          "result": "Categories.insert({name:name,description:description})"
        },
        {
          "test": "Categories.bulkInsert()",
          "result": "Categories.bulkInsert({name:name,description:description})"
        },
        {
          "test": "Orders.bulkInsert().include(p => p.details)",
          "result": "Orders.bulkInsert({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country}).include(p=>p.details.bulkInsert({orderId:orderId,productId:productId,unitPrice:unitPrice,quantity:quantity,discount:discount}))"
        },
        {
          "test": "Orders.bulkInsert().include(p => [p.details, p.customer])",
          "result": "Orders.bulkInsert({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country}).include(p=>p.details.bulkInsert({orderId:orderId,productId:productId,unitPrice:unitPrice,quantity:quantity,discount:discount}))"
        }
      ],
      "errors": 0
    },
    {
      "name": "model",
      "tests": [
        {
          "test": "Categories.insert({name:name,description:description})",
          "result": [
            {
              "name": "id",
              "type": "integer"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            }
          ]
        },
        {
          "test": "Categories.insert()",
          "result": [
            {
              "name": "id",
              "type": "integer"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            }
          ]
        },
        {
          "test": "Categories.insert([name, description])",
          "result": [
            {
              "name": "id",
              "type": "integer"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            }
          ]
        },
        {
          "test": "Categories.insert(entity)",
          "result": [
            {
              "name": "id",
              "type": "integer"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            }
          ]
        },
        {
          "test": "Orders.insert()",
          "result": [
            {
              "name": "id",
              "type": "integer"
            },
            {
              "name": "customerId",
              "type": "string"
            },
            {
              "name": "employeeId",
              "type": "integer"
            },
            {
              "name": "orderDate",
              "type": "datetime"
            },
            {
              "name": "requiredDate",
              "type": "date"
            },
            {
              "name": "shippedDate",
              "type": "date"
            },
            {
              "name": "shipViaId",
              "type": "integer"
            },
            {
              "name": "freight",
              "type": "decimal"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "address",
              "type": "string"
            },
            {
              "name": "city",
              "type": "string"
            },
            {
              "name": "region",
              "type": "string"
            },
            {
              "name": "postalCode",
              "type": "string"
            },
            {
              "name": "country",
              "type": "string"
            }
          ]
        },
        {
          "test": "Orders.insert().include(p => p.details)",
          "result": [
            {
              "name": "id",
              "type": "integer"
            },
            {
              "name": "customerId",
              "type": "string"
            },
            {
              "name": "employeeId",
              "type": "integer"
            },
            {
              "name": "orderDate",
              "type": "datetime"
            },
            {
              "name": "requiredDate",
              "type": "date"
            },
            {
              "name": "shippedDate",
              "type": "date"
            },
            {
              "name": "shipViaId",
              "type": "integer"
            },
            {
              "name": "freight",
              "type": "decimal"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "address",
              "type": "string"
            },
            {
              "name": "city",
              "type": "string"
            },
            {
              "name": "region",
              "type": "string"
            },
            {
              "name": "postalCode",
              "type": "string"
            },
            {
              "name": "country",
              "type": "string"
            },
            {
              "name": "details",
              "type": "Orders.details[]",
              "children": [
                {
                  "name": "orderId",
                  "type": "integer"
                },
                {
                  "name": "productId",
                  "type": "integer"
                },
                {
                  "name": "unitPrice",
                  "type": "decimal"
                },
                {
                  "name": "quantity",
                  "type": "decimal"
                },
                {
                  "name": "discount",
                  "type": "decimal"
                }
              ]
            }
          ]
        },
        {
          "test": "Orders.insert().include(p => [p.details, p.customer])",
          "result": [
            {
              "name": "id",
              "type": "integer"
            },
            {
              "name": "customerId",
              "type": "string"
            },
            {
              "name": "employeeId",
              "type": "integer"
            },
            {
              "name": "orderDate",
              "type": "datetime"
            },
            {
              "name": "requiredDate",
              "type": "date"
            },
            {
              "name": "shippedDate",
              "type": "date"
            },
            {
              "name": "shipViaId",
              "type": "integer"
            },
            {
              "name": "freight",
              "type": "decimal"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "address",
              "type": "string"
            },
            {
              "name": "city",
              "type": "string"
            },
            {
              "name": "region",
              "type": "string"
            },
            {
              "name": "postalCode",
              "type": "string"
            },
            {
              "name": "country",
              "type": "string"
            },
            {
              "name": "details",
              "type": "Orders.details[]",
              "children": [
                {
                  "name": "orderId",
                  "type": "integer"
                },
                {
                  "name": "productId",
                  "type": "integer"
                },
                {
                  "name": "unitPrice",
                  "type": "decimal"
                },
                {
                  "name": "quantity",
                  "type": "decimal"
                },
                {
                  "name": "discount",
                  "type": "decimal"
                }
              ]
            }
          ]
        },
        {
          "test": "Categories.insert(() => ({ name: name, description: description }))",
          "result": [
            {
              "name": "id",
              "type": "integer"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            }
          ]
        },
        {
          "test": "Categories.insert(p=>{name:p.name,description:p.description})",
          "result": [
            {
              "name": "id",
              "type": "integer"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            }
          ]
        },
        {
          "test": "Categories.insert(p=> [p.name,p.description])",
          "result": [
            {
              "name": "id",
              "type": "integer"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            }
          ]
        },
        {
          "test": "Categories.bulkInsert()",
          "result": [
            {
              "name": "id",
              "type": "integer"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            }
          ]
        },
        {
          "test": "Orders.bulkInsert().include(p => p.details)",
          "result": [
            {
              "name": "id",
              "type": "integer"
            },
            {
              "name": "customerId",
              "type": "string"
            },
            {
              "name": "employeeId",
              "type": "integer"
            },
            {
              "name": "orderDate",
              "type": "datetime"
            },
            {
              "name": "requiredDate",
              "type": "date"
            },
            {
              "name": "shippedDate",
              "type": "date"
            },
            {
              "name": "shipViaId",
              "type": "integer"
            },
            {
              "name": "freight",
              "type": "decimal"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "address",
              "type": "string"
            },
            {
              "name": "city",
              "type": "string"
            },
            {
              "name": "region",
              "type": "string"
            },
            {
              "name": "postalCode",
              "type": "string"
            },
            {
              "name": "country",
              "type": "string"
            },
            {
              "name": "details",
              "type": "Orders.details[]",
              "children": [
                {
                  "name": "orderId",
                  "type": "integer"
                },
                {
                  "name": "productId",
                  "type": "integer"
                },
                {
                  "name": "unitPrice",
                  "type": "decimal"
                },
                {
                  "name": "quantity",
                  "type": "decimal"
                },
                {
                  "name": "discount",
                  "type": "decimal"
                }
              ]
            }
          ]
        },
        {
          "test": "Orders.bulkInsert().include(p => [p.details, p.customer])",
          "result": [
            {
              "name": "id",
              "type": "integer"
            },
            {
              "name": "customerId",
              "type": "string"
            },
            {
              "name": "employeeId",
              "type": "integer"
            },
            {
              "name": "orderDate",
              "type": "datetime"
            },
            {
              "name": "requiredDate",
              "type": "date"
            },
            {
              "name": "shippedDate",
              "type": "date"
            },
            {
              "name": "shipViaId",
              "type": "integer"
            },
            {
              "name": "freight",
              "type": "decimal"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "address",
              "type": "string"
            },
            {
              "name": "city",
              "type": "string"
            },
            {
              "name": "region",
              "type": "string"
            },
            {
              "name": "postalCode",
              "type": "string"
            },
            {
              "name": "country",
              "type": "string"
            },
            {
              "name": "details",
              "type": "Orders.details[]",
              "children": [
                {
                  "name": "orderId",
                  "type": "integer"
                },
                {
                  "name": "productId",
                  "type": "integer"
                },
                {
                  "name": "unitPrice",
                  "type": "decimal"
                },
                {
                  "name": "quantity",
                  "type": "decimal"
                },
                {
                  "name": "discount",
                  "type": "decimal"
                }
              ]
            }
          ]
        }
      ],
      "errors": 0
    },
    {
      "name": "parameters",
      "tests": [
        {
          "test": "Categories.insert({name:name,description:description})",
          "result": [
            {
              "name": "name",
              "type": "any"
            },
            {
              "name": "description",
              "type": "any"
            }
          ]
        },
        {
          "test": "Categories.insert()",
          "result": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            }
          ]
        },
        {
          "test": "Categories.insert([name, description])",
          "result": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            }
          ]
        },
        {
          "test": "Categories.insert(entity)",
          "result": [
            {
              "name": "entity.name",
              "type": "string"
            },
            {
              "name": "entity.description",
              "type": "string"
            }
          ]
        },
        {
          "test": "Orders.insert()",
          "result": [
            {
              "name": "customerId",
              "type": "string"
            },
            {
              "name": "employeeId",
              "type": "integer"
            },
            {
              "name": "orderDate",
              "type": "any"
            },
            {
              "name": "requiredDate",
              "type": "date"
            },
            {
              "name": "shippedDate",
              "type": "date"
            },
            {
              "name": "shipViaId",
              "type": "integer"
            },
            {
              "name": "freight",
              "type": "decimal"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "address",
              "type": "string"
            },
            {
              "name": "city",
              "type": "string"
            },
            {
              "name": "region",
              "type": "string"
            },
            {
              "name": "postalCode",
              "type": "string"
            },
            {
              "name": "country",
              "type": "string"
            }
          ]
        },
        {
          "test": "Orders.insert().include(p => p.details)",
          "result": [
            {
              "name": "customerId",
              "type": "string"
            },
            {
              "name": "employeeId",
              "type": "integer"
            },
            {
              "name": "orderDate",
              "type": "any"
            },
            {
              "name": "requiredDate",
              "type": "date"
            },
            {
              "name": "shippedDate",
              "type": "date"
            },
            {
              "name": "shipViaId",
              "type": "integer"
            },
            {
              "name": "freight",
              "type": "decimal"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "address",
              "type": "string"
            },
            {
              "name": "city",
              "type": "string"
            },
            {
              "name": "region",
              "type": "string"
            },
            {
              "name": "postalCode",
              "type": "string"
            },
            {
              "name": "country",
              "type": "string"
            },
            {
              "name": "details",
              "type": "Orders.details",
              "children": [
                {
                  "name": "orderId",
                  "type": "integer"
                },
                {
                  "name": "productId",
                  "type": "integer"
                },
                {
                  "name": "unitPrice",
                  "type": "decimal"
                },
                {
                  "name": "quantity",
                  "type": "decimal"
                },
                {
                  "name": "discount",
                  "type": "decimal"
                }
              ]
            }
          ]
        },
        {
          "test": "Orders.insert().include(p => [p.details, p.customer])",
          "result": [
            {
              "name": "customerId",
              "type": "string"
            },
            {
              "name": "employeeId",
              "type": "integer"
            },
            {
              "name": "orderDate",
              "type": "any"
            },
            {
              "name": "requiredDate",
              "type": "date"
            },
            {
              "name": "shippedDate",
              "type": "date"
            },
            {
              "name": "shipViaId",
              "type": "integer"
            },
            {
              "name": "freight",
              "type": "decimal"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "address",
              "type": "string"
            },
            {
              "name": "city",
              "type": "string"
            },
            {
              "name": "region",
              "type": "string"
            },
            {
              "name": "postalCode",
              "type": "string"
            },
            {
              "name": "country",
              "type": "string"
            },
            {
              "name": "details",
              "type": "Orders.details",
              "children": [
                {
                  "name": "orderId",
                  "type": "integer"
                },
                {
                  "name": "productId",
                  "type": "integer"
                },
                {
                  "name": "unitPrice",
                  "type": "decimal"
                },
                {
                  "name": "quantity",
                  "type": "decimal"
                },
                {
                  "name": "discount",
                  "type": "decimal"
                }
              ]
            }
          ]
        },
        {
          "test": "Categories.insert(() => ({ name: name, description: description }))",
          "result": [
            {
              "name": "name",
              "type": "any"
            },
            {
              "name": "description",
              "type": "any"
            }
          ]
        },
        {
          "test": "Categories.insert(p=>{name:p.name,description:p.description})",
          "result": [
            {
              "name": "p.name",
              "type": "any"
            },
            {
              "name": "p.description",
              "type": "any"
            }
          ]
        },
        {
          "test": "Categories.insert(p=> [p.name,p.description])",
          "result": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            }
          ]
        },
        {
          "test": "Categories.bulkInsert()",
          "result": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            }
          ]
        },
        {
          "test": "Orders.bulkInsert().include(p => p.details)",
          "result": [
            {
              "name": "customerId",
              "type": "string"
            },
            {
              "name": "employeeId",
              "type": "integer"
            },
            {
              "name": "orderDate",
              "type": "any"
            },
            {
              "name": "requiredDate",
              "type": "date"
            },
            {
              "name": "shippedDate",
              "type": "date"
            },
            {
              "name": "shipViaId",
              "type": "integer"
            },
            {
              "name": "freight",
              "type": "decimal"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "address",
              "type": "string"
            },
            {
              "name": "city",
              "type": "string"
            },
            {
              "name": "region",
              "type": "string"
            },
            {
              "name": "postalCode",
              "type": "string"
            },
            {
              "name": "country",
              "type": "string"
            },
            {
              "name": "details",
              "type": "Orders.details",
              "children": [
                {
                  "name": "orderId",
                  "type": "integer"
                },
                {
                  "name": "productId",
                  "type": "integer"
                },
                {
                  "name": "unitPrice",
                  "type": "decimal"
                },
                {
                  "name": "quantity",
                  "type": "decimal"
                },
                {
                  "name": "discount",
                  "type": "decimal"
                }
              ]
            }
          ]
        },
        {
          "test": "Orders.bulkInsert().include(p => [p.details, p.customer])",
          "result": [
            {
              "name": "customerId",
              "type": "string"
            },
            {
              "name": "employeeId",
              "type": "integer"
            },
            {
              "name": "orderDate",
              "type": "any"
            },
            {
              "name": "requiredDate",
              "type": "date"
            },
            {
              "name": "shippedDate",
              "type": "date"
            },
            {
              "name": "shipViaId",
              "type": "integer"
            },
            {
              "name": "freight",
              "type": "decimal"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "address",
              "type": "string"
            },
            {
              "name": "city",
              "type": "string"
            },
            {
              "name": "region",
              "type": "string"
            },
            {
              "name": "postalCode",
              "type": "string"
            },
            {
              "name": "country",
              "type": "string"
            },
            {
              "name": "details",
              "type": "Orders.details",
              "children": [
                {
                  "name": "orderId",
                  "type": "integer"
                },
                {
                  "name": "productId",
                  "type": "integer"
                },
                {
                  "name": "unitPrice",
                  "type": "decimal"
                },
                {
                  "name": "quantity",
                  "type": "decimal"
                },
                {
                  "name": "discount",
                  "type": "decimal"
                }
              ]
            }
          ]
        }
      ],
      "errors": 0
    },
    {
      "name": "constraints",
      "tests": [
        {
          "test": "Categories.insert({name:name,description:description})",
          "result": {
            "entity": "Categories",
            "constraints": [
              {
                "message": "Cannot be null property name in entity Categories",
                "condition": "isNotNull(name)"
              }
            ]
          }
        },
        {
          "test": "Categories.insert()",
          "result": {
            "entity": "Categories",
            "constraints": [
              {
                "message": "Cannot be null property name in entity Categories",
                "condition": "isNotNull(name)"
              }
            ]
          }
        },
        {
          "test": "Categories.insert([name, description])",
          "result": {
            "entity": "Categories",
            "constraints": [
              {
                "message": "Cannot be null property name in entity Categories",
                "condition": "isNotNull(name)"
              }
            ]
          }
        },
        {
          "test": "Categories.insert(entity)",
          "result": {
            "entity": "Categories",
            "constraints": []
          }
        },
        {
          "test": "Orders.insert()",
          "result": {
            "entity": "Orders",
            "constraints": [
              {
                "message": "Cannot be null property customerId in entity Orders",
                "condition": "isNotNull(customerId)"
              },
              {
                "message": "Cannot be null property employeeId in entity Orders",
                "condition": "isNotNull(employeeId)"
              }
            ]
          }
        },
        {
          "test": "Orders.insert().include(p => p.details)",
          "result": {
            "entity": "Orders",
            "constraints": [
              {
                "message": "Cannot be null property customerId in entity Orders",
                "condition": "isNotNull(customerId)"
              },
              {
                "message": "Cannot be null property employeeId in entity Orders",
                "condition": "isNotNull(employeeId)"
              }
            ],
            "children": [
              {
                "entity": "Orders.details",
                "constraints": [
                  {
                    "message": "Cannot be null property orderId in entity Orders.details",
                    "condition": "isNotNull(orderId)"
                  },
                  {
                    "message": "Cannot be null property productId in entity Orders.details",
                    "condition": "isNotNull(productId)"
                  }
                ]
              }
            ]
          }
        },
        {
          "test": "Orders.insert().include(p => [p.details, p.customer])",
          "result": {
            "entity": "Orders",
            "constraints": [
              {
                "message": "Cannot be null property customerId in entity Orders",
                "condition": "isNotNull(customerId)"
              },
              {
                "message": "Cannot be null property employeeId in entity Orders",
                "condition": "isNotNull(employeeId)"
              }
            ],
            "children": [
              {
                "entity": "Orders.details",
                "constraints": [
                  {
                    "message": "Cannot be null property orderId in entity Orders.details",
                    "condition": "isNotNull(orderId)"
                  },
                  {
                    "message": "Cannot be null property productId in entity Orders.details",
                    "condition": "isNotNull(productId)"
                  }
                ]
              }
            ]
          }
        },
        {
          "test": "Categories.insert(() => ({ name: name, description: description }))",
          "result": {
            "entity": "Categories",
            "constraints": [
              {
                "message": "Cannot be null property name in entity Categories",
                "condition": "isNotNull(name)"
              }
            ]
          }
        },
        {
          "test": "Categories.insert(p=>{name:p.name,description:p.description})",
          "result": {
            "entity": "Categories",
            "constraints": []
          }
        },
        {
          "test": "Categories.insert(p=> [p.name,p.description])",
          "result": {
            "entity": "Categories",
            "constraints": [
              {
                "message": "Cannot be null property name in entity Categories",
                "condition": "isNotNull(name)"
              }
            ]
          }
        },
        {
          "test": "Categories.bulkInsert()",
          "result": {
            "entity": "Categories",
            "constraints": [
              {
                "message": "Cannot be null property name in entity Categories",
                "condition": "isNotNull(name)"
              }
            ]
          }
        },
        {
          "test": "Orders.bulkInsert().include(p => p.details)",
          "result": {
            "entity": "Orders",
            "constraints": [
              {
                "message": "Cannot be null property customerId in entity Orders",
                "condition": "isNotNull(customerId)"
              },
              {
                "message": "Cannot be null property employeeId in entity Orders",
                "condition": "isNotNull(employeeId)"
              }
            ],
            "children": [
              {
                "entity": "Orders.details",
                "constraints": [
                  {
                    "message": "Cannot be null property orderId in entity Orders.details",
                    "condition": "isNotNull(orderId)"
                  },
                  {
                    "message": "Cannot be null property productId in entity Orders.details",
                    "condition": "isNotNull(productId)"
                  }
                ]
              }
            ]
          }
        },
        {
          "test": "Orders.bulkInsert().include(p => [p.details, p.customer])",
          "result": {
            "entity": "Orders",
            "constraints": [
              {
                "message": "Cannot be null property customerId in entity Orders",
                "condition": "isNotNull(customerId)"
              },
              {
                "message": "Cannot be null property employeeId in entity Orders",
                "condition": "isNotNull(employeeId)"
              }
            ],
            "children": [
              {
                "entity": "Orders.details",
                "constraints": [
                  {
                    "message": "Cannot be null property orderId in entity Orders.details",
                    "condition": "isNotNull(orderId)"
                  },
                  {
                    "message": "Cannot be null property productId in entity Orders.details",
                    "condition": "isNotNull(productId)"
                  }
                ]
              }
            ]
          }
        }
      ],
      "errors": 0
    },
    {
      "name": "metadata",
      "tests": [
        {
          "test": "Categories.insert({name:name,description:description})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 18
            },
            "name": "insert",
            "children": [],
            "type": "any",
            "entity": "Categories",
            "columns": [
              {
                "name": "id",
                "type": "integer",
                "required": false,
                "autoIncrement": true
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "description",
                "type": "string"
              }
            ],
            "parameters": [
              {
                "name": "name",
                "type": "any"
              },
              {
                "name": "description",
                "type": "any"
              }
            ],
            "constraints": [
              {
                "message": "Cannot be null property name in entity Categories",
                "condition": "isNotNull(name)"
              }
            ],
            "values": [],
            "defaults": [],
            "clause": "insert",
            "alias": "c"
          }
        },
        {
          "test": "Categories.insert()",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 18
            },
            "name": "insert",
            "children": [],
            "type": "any",
            "entity": "Categories",
            "columns": [
              {
                "name": "id",
                "type": "integer",
                "required": false,
                "autoIncrement": true
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "description",
                "type": "string"
              }
            ],
            "parameters": [
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "description",
                "type": "string"
              }
            ],
            "constraints": [
              {
                "message": "Cannot be null property name in entity Categories",
                "condition": "isNotNull(name)"
              }
            ],
            "values": [],
            "defaults": [],
            "clause": "insert",
            "alias": "c"
          }
        },
        {
          "test": "Categories.insert([name, description])",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 18
            },
            "name": "insert",
            "children": [],
            "type": "any",
            "entity": "Categories",
            "columns": [
              {
                "name": "id",
                "type": "integer",
                "required": false,
                "autoIncrement": true
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "description",
                "type": "string"
              }
            ],
            "parameters": [
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "description",
                "type": "string"
              }
            ],
            "constraints": [
              {
                "message": "Cannot be null property name in entity Categories",
                "condition": "isNotNull(name)"
              }
            ],
            "values": [],
            "defaults": [],
            "clause": "insert",
            "alias": "c"
          }
        },
        {
          "test": "Categories.insert(entity)",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 18
            },
            "name": "insert",
            "children": [],
            "type": "any",
            "entity": "Categories",
            "columns": [
              {
                "name": "id",
                "type": "integer",
                "required": false,
                "autoIncrement": true
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "description",
                "type": "string"
              }
            ],
            "parameters": [
              {
                "name": "entity.name",
                "type": "string"
              },
              {
                "name": "entity.description",
                "type": "string"
              }
            ],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "insert",
            "alias": "c"
          }
        },
        {
          "test": "Orders.insert()",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 14
            },
            "name": "insert",
            "children": [],
            "type": "any",
            "entity": "Orders",
            "columns": [
              {
                "name": "id",
                "type": "integer",
                "required": false,
                "autoIncrement": true
              },
              {
                "name": "customerId",
                "type": "string"
              },
              {
                "name": "employeeId",
                "type": "integer"
              },
              {
                "name": "orderDate",
                "type": "datetime"
              },
              {
                "name": "requiredDate",
                "type": "date"
              },
              {
                "name": "shippedDate",
                "type": "date"
              },
              {
                "name": "shipViaId",
                "type": "integer"
              },
              {
                "name": "freight",
                "type": "decimal"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "address",
                "type": "string"
              },
              {
                "name": "city",
                "type": "string"
              },
              {
                "name": "region",
                "type": "string"
              },
              {
                "name": "postalCode",
                "type": "string"
              },
              {
                "name": "country",
                "type": "string"
              }
            ],
            "parameters": [
              {
                "name": "customerId",
                "type": "string"
              },
              {
                "name": "employeeId",
                "type": "integer"
              },
              {
                "name": "orderDate",
                "type": "any"
              },
              {
                "name": "requiredDate",
                "type": "date"
              },
              {
                "name": "shippedDate",
                "type": "date"
              },
              {
                "name": "shipViaId",
                "type": "integer"
              },
              {
                "name": "freight",
                "type": "decimal"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "address",
                "type": "string"
              },
              {
                "name": "city",
                "type": "string"
              },
              {
                "name": "region",
                "type": "string"
              },
              {
                "name": "postalCode",
                "type": "string"
              },
              {
                "name": "country",
                "type": "string"
              }
            ],
            "constraints": [
              {
                "message": "Cannot be null property customerId in entity Orders",
                "condition": "isNotNull(customerId)"
              },
              {
                "message": "Cannot be null property employeeId in entity Orders",
                "condition": "isNotNull(employeeId)"
              }
            ],
            "values": [],
            "defaults": [],
            "clause": "insert",
            "alias": "o"
          }
        },
        {
          "test": "Orders.insert().include(p => p.details)",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 24
            },
            "name": "insert",
            "children": [
              {
                "classtype": "Sentence",
                "pos": {
                  "ln": 0,
                  "col": 29
                },
                "name": "insert",
                "children": [],
                "type": "any",
                "entity": "Orders.details",
                "columns": [
                  {
                    "name": "orderId",
                    "type": "integer"
                  },
                  {
                    "name": "productId",
                    "type": "integer"
                  },
                  {
                    "name": "unitPrice",
                    "type": "decimal"
                  },
                  {
                    "name": "quantity",
                    "type": "decimal"
                  },
                  {
                    "name": "discount",
                    "type": "decimal"
                  }
                ],
                "parameters": [
                  {
                    "name": "orderId",
                    "type": "integer"
                  },
                  {
                    "name": "productId",
                    "type": "integer"
                  },
                  {
                    "name": "unitPrice",
                    "type": "decimal"
                  },
                  {
                    "name": "quantity",
                    "type": "decimal"
                  },
                  {
                    "name": "discount",
                    "type": "decimal"
                  }
                ],
                "constraints": [
                  {
                    "message": "Cannot be null property orderId in entity Orders.details",
                    "condition": "isNotNull(orderId)"
                  },
                  {
                    "message": "Cannot be null property productId in entity Orders.details",
                    "condition": "isNotNull(productId)"
                  }
                ],
                "values": [],
                "defaults": [],
                "clause": "insert",
                "alias": "o1"
              }
            ],
            "type": "any",
            "entity": "Orders",
            "columns": [
              {
                "name": "id",
                "type": "integer",
                "required": false,
                "autoIncrement": true
              },
              {
                "name": "customerId",
                "type": "string"
              },
              {
                "name": "employeeId",
                "type": "integer"
              },
              {
                "name": "orderDate",
                "type": "datetime"
              },
              {
                "name": "requiredDate",
                "type": "date"
              },
              {
                "name": "shippedDate",
                "type": "date"
              },
              {
                "name": "shipViaId",
                "type": "integer"
              },
              {
                "name": "freight",
                "type": "decimal"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "address",
                "type": "string"
              },
              {
                "name": "city",
                "type": "string"
              },
              {
                "name": "region",
                "type": "string"
              },
              {
                "name": "postalCode",
                "type": "string"
              },
              {
                "name": "country",
                "type": "string"
              }
            ],
            "parameters": [
              {
                "name": "customerId",
                "type": "string"
              },
              {
                "name": "employeeId",
                "type": "integer"
              },
              {
                "name": "orderDate",
                "type": "any"
              },
              {
                "name": "requiredDate",
                "type": "date"
              },
              {
                "name": "shippedDate",
                "type": "date"
              },
              {
                "name": "shipViaId",
                "type": "integer"
              },
              {
                "name": "freight",
                "type": "decimal"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "address",
                "type": "string"
              },
              {
                "name": "city",
                "type": "string"
              },
              {
                "name": "region",
                "type": "string"
              },
              {
                "name": "postalCode",
                "type": "string"
              },
              {
                "name": "country",
                "type": "string"
              }
            ],
            "constraints": [
              {
                "message": "Cannot be null property customerId in entity Orders",
                "condition": "isNotNull(customerId)"
              },
              {
                "message": "Cannot be null property employeeId in entity Orders",
                "condition": "isNotNull(employeeId)"
              }
            ],
            "values": [],
            "defaults": [],
            "clause": "insert",
            "alias": "o"
          }
        },
        {
          "test": "Orders.insert().include(p => [p.details, p.customer])",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 24
            },
            "name": "insert",
            "children": [
              {
                "classtype": "Sentence",
                "pos": {
                  "ln": 0,
                  "col": 29
                },
                "name": "insert",
                "children": [],
                "type": "any",
                "entity": "Orders.details",
                "columns": [
                  {
                    "name": "orderId",
                    "type": "integer"
                  },
                  {
                    "name": "productId",
                    "type": "integer"
                  },
                  {
                    "name": "unitPrice",
                    "type": "decimal"
                  },
                  {
                    "name": "quantity",
                    "type": "decimal"
                  },
                  {
                    "name": "discount",
                    "type": "decimal"
                  }
                ],
                "parameters": [
                  {
                    "name": "orderId",
                    "type": "integer"
                  },
                  {
                    "name": "productId",
                    "type": "integer"
                  },
                  {
                    "name": "unitPrice",
                    "type": "decimal"
                  },
                  {
                    "name": "quantity",
                    "type": "decimal"
                  },
                  {
                    "name": "discount",
                    "type": "decimal"
                  }
                ],
                "constraints": [
                  {
                    "message": "Cannot be null property orderId in entity Orders.details",
                    "condition": "isNotNull(orderId)"
                  },
                  {
                    "message": "Cannot be null property productId in entity Orders.details",
                    "condition": "isNotNull(productId)"
                  }
                ],
                "values": [],
                "defaults": [],
                "clause": "insert",
                "alias": "o1"
              }
            ],
            "type": "any",
            "entity": "Orders",
            "columns": [
              {
                "name": "id",
                "type": "integer",
                "required": false,
                "autoIncrement": true
              },
              {
                "name": "customerId",
                "type": "string"
              },
              {
                "name": "employeeId",
                "type": "integer"
              },
              {
                "name": "orderDate",
                "type": "datetime"
              },
              {
                "name": "requiredDate",
                "type": "date"
              },
              {
                "name": "shippedDate",
                "type": "date"
              },
              {
                "name": "shipViaId",
                "type": "integer"
              },
              {
                "name": "freight",
                "type": "decimal"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "address",
                "type": "string"
              },
              {
                "name": "city",
                "type": "string"
              },
              {
                "name": "region",
                "type": "string"
              },
              {
                "name": "postalCode",
                "type": "string"
              },
              {
                "name": "country",
                "type": "string"
              }
            ],
            "parameters": [
              {
                "name": "customerId",
                "type": "string"
              },
              {
                "name": "employeeId",
                "type": "integer"
              },
              {
                "name": "orderDate",
                "type": "any"
              },
              {
                "name": "requiredDate",
                "type": "date"
              },
              {
                "name": "shippedDate",
                "type": "date"
              },
              {
                "name": "shipViaId",
                "type": "integer"
              },
              {
                "name": "freight",
                "type": "decimal"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "address",
                "type": "string"
              },
              {
                "name": "city",
                "type": "string"
              },
              {
                "name": "region",
                "type": "string"
              },
              {
                "name": "postalCode",
                "type": "string"
              },
              {
                "name": "country",
                "type": "string"
              }
            ],
            "constraints": [
              {
                "message": "Cannot be null property customerId in entity Orders",
                "condition": "isNotNull(customerId)"
              },
              {
                "message": "Cannot be null property employeeId in entity Orders",
                "condition": "isNotNull(employeeId)"
              }
            ],
            "values": [],
            "defaults": [],
            "clause": "insert",
            "alias": "o"
          }
        },
        {
          "test": "Categories.insert(() => ({ name: name, description: description }))",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 18
            },
            "name": "insert",
            "children": [],
            "type": "any",
            "entity": "Categories",
            "columns": [
              {
                "name": "id",
                "type": "integer",
                "required": false,
                "autoIncrement": true
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "description",
                "type": "string"
              }
            ],
            "parameters": [
              {
                "name": "name",
                "type": "any"
              },
              {
                "name": "description",
                "type": "any"
              }
            ],
            "constraints": [
              {
                "message": "Cannot be null property name in entity Categories",
                "condition": "isNotNull(name)"
              }
            ],
            "values": [],
            "defaults": [],
            "clause": "insert",
            "alias": "c"
          }
        },
        {
          "test": "Categories.insert(p=>{name:p.name,description:p.description})",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 18
            },
            "name": "insert",
            "children": [],
            "type": "any",
            "entity": "Categories",
            "columns": [
              {
                "name": "id",
                "type": "integer",
                "required": false,
                "autoIncrement": true
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "description",
                "type": "string"
              }
            ],
            "parameters": [
              {
                "name": "p.name",
                "type": "any"
              },
              {
                "name": "p.description",
                "type": "any"
              }
            ],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "insert",
            "alias": "c"
          }
        },
        {
          "test": "Categories.insert(p=> [p.name,p.description])",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 18
            },
            "name": "insert",
            "children": [],
            "type": "any",
            "entity": "Categories",
            "columns": [
              {
                "name": "id",
                "type": "integer",
                "required": false,
                "autoIncrement": true
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "description",
                "type": "string"
              }
            ],
            "parameters": [
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "description",
                "type": "string"
              }
            ],
            "constraints": [
              {
                "message": "Cannot be null property name in entity Categories",
                "condition": "isNotNull(name)"
              }
            ],
            "values": [],
            "defaults": [],
            "clause": "insert",
            "alias": "c"
          }
        },
        {
          "test": "Categories.bulkInsert()",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 22
            },
            "name": "bulkInsert",
            "children": [],
            "type": "any",
            "entity": "Categories",
            "columns": [
              {
                "name": "id",
                "type": "integer",
                "required": false,
                "autoIncrement": true
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "description",
                "type": "string"
              }
            ],
            "parameters": [
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "description",
                "type": "string"
              }
            ],
            "constraints": [
              {
                "message": "Cannot be null property name in entity Categories",
                "condition": "isNotNull(name)"
              }
            ],
            "values": [],
            "defaults": [],
            "clause": "bulkInsert",
            "alias": "c"
          }
        },
        {
          "test": "Orders.bulkInsert().include(p => p.details)",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 28
            },
            "name": "bulkInsert",
            "children": [
              {
                "classtype": "Sentence",
                "pos": {
                  "ln": 0,
                  "col": 33
                },
                "name": "bulkInsert",
                "children": [],
                "type": "any",
                "entity": "Orders.details",
                "columns": [
                  {
                    "name": "orderId",
                    "type": "integer"
                  },
                  {
                    "name": "productId",
                    "type": "integer"
                  },
                  {
                    "name": "unitPrice",
                    "type": "decimal"
                  },
                  {
                    "name": "quantity",
                    "type": "decimal"
                  },
                  {
                    "name": "discount",
                    "type": "decimal"
                  }
                ],
                "parameters": [
                  {
                    "name": "orderId",
                    "type": "integer"
                  },
                  {
                    "name": "productId",
                    "type": "integer"
                  },
                  {
                    "name": "unitPrice",
                    "type": "decimal"
                  },
                  {
                    "name": "quantity",
                    "type": "decimal"
                  },
                  {
                    "name": "discount",
                    "type": "decimal"
                  }
                ],
                "constraints": [
                  {
                    "message": "Cannot be null property orderId in entity Orders.details",
                    "condition": "isNotNull(orderId)"
                  },
                  {
                    "message": "Cannot be null property productId in entity Orders.details",
                    "condition": "isNotNull(productId)"
                  }
                ],
                "values": [],
                "defaults": [],
                "clause": "bulkInsert",
                "alias": "o1"
              }
            ],
            "type": "any",
            "entity": "Orders",
            "columns": [
              {
                "name": "id",
                "type": "integer",
                "required": false,
                "autoIncrement": true
              },
              {
                "name": "customerId",
                "type": "string"
              },
              {
                "name": "employeeId",
                "type": "integer"
              },
              {
                "name": "orderDate",
                "type": "datetime"
              },
              {
                "name": "requiredDate",
                "type": "date"
              },
              {
                "name": "shippedDate",
                "type": "date"
              },
              {
                "name": "shipViaId",
                "type": "integer"
              },
              {
                "name": "freight",
                "type": "decimal"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "address",
                "type": "string"
              },
              {
                "name": "city",
                "type": "string"
              },
              {
                "name": "region",
                "type": "string"
              },
              {
                "name": "postalCode",
                "type": "string"
              },
              {
                "name": "country",
                "type": "string"
              }
            ],
            "parameters": [
              {
                "name": "customerId",
                "type": "string"
              },
              {
                "name": "employeeId",
                "type": "integer"
              },
              {
                "name": "orderDate",
                "type": "any"
              },
              {
                "name": "requiredDate",
                "type": "date"
              },
              {
                "name": "shippedDate",
                "type": "date"
              },
              {
                "name": "shipViaId",
                "type": "integer"
              },
              {
                "name": "freight",
                "type": "decimal"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "address",
                "type": "string"
              },
              {
                "name": "city",
                "type": "string"
              },
              {
                "name": "region",
                "type": "string"
              },
              {
                "name": "postalCode",
                "type": "string"
              },
              {
                "name": "country",
                "type": "string"
              }
            ],
            "constraints": [
              {
                "message": "Cannot be null property customerId in entity Orders",
                "condition": "isNotNull(customerId)"
              },
              {
                "message": "Cannot be null property employeeId in entity Orders",
                "condition": "isNotNull(employeeId)"
              }
            ],
            "values": [],
            "defaults": [],
            "clause": "bulkInsert",
            "alias": "o"
          }
        },
        {
          "test": "Orders.bulkInsert().include(p => [p.details, p.customer])",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 28
            },
            "name": "bulkInsert",
            "children": [
              {
                "classtype": "Sentence",
                "pos": {
                  "ln": 0,
                  "col": 33
                },
                "name": "bulkInsert",
                "children": [],
                "type": "any",
                "entity": "Orders.details",
                "columns": [
                  {
                    "name": "orderId",
                    "type": "integer"
                  },
                  {
                    "name": "productId",
                    "type": "integer"
                  },
                  {
                    "name": "unitPrice",
                    "type": "decimal"
                  },
                  {
                    "name": "quantity",
                    "type": "decimal"
                  },
                  {
                    "name": "discount",
                    "type": "decimal"
                  }
                ],
                "parameters": [
                  {
                    "name": "orderId",
                    "type": "integer"
                  },
                  {
                    "name": "productId",
                    "type": "integer"
                  },
                  {
                    "name": "unitPrice",
                    "type": "decimal"
                  },
                  {
                    "name": "quantity",
                    "type": "decimal"
                  },
                  {
                    "name": "discount",
                    "type": "decimal"
                  }
                ],
                "constraints": [
                  {
                    "message": "Cannot be null property orderId in entity Orders.details",
                    "condition": "isNotNull(orderId)"
                  },
                  {
                    "message": "Cannot be null property productId in entity Orders.details",
                    "condition": "isNotNull(productId)"
                  }
                ],
                "values": [],
                "defaults": [],
                "clause": "bulkInsert",
                "alias": "o1"
              }
            ],
            "type": "any",
            "entity": "Orders",
            "columns": [
              {
                "name": "id",
                "type": "integer",
                "required": false,
                "autoIncrement": true
              },
              {
                "name": "customerId",
                "type": "string"
              },
              {
                "name": "employeeId",
                "type": "integer"
              },
              {
                "name": "orderDate",
                "type": "datetime"
              },
              {
                "name": "requiredDate",
                "type": "date"
              },
              {
                "name": "shippedDate",
                "type": "date"
              },
              {
                "name": "shipViaId",
                "type": "integer"
              },
              {
                "name": "freight",
                "type": "decimal"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "address",
                "type": "string"
              },
              {
                "name": "city",
                "type": "string"
              },
              {
                "name": "region",
                "type": "string"
              },
              {
                "name": "postalCode",
                "type": "string"
              },
              {
                "name": "country",
                "type": "string"
              }
            ],
            "parameters": [
              {
                "name": "customerId",
                "type": "string"
              },
              {
                "name": "employeeId",
                "type": "integer"
              },
              {
                "name": "orderDate",
                "type": "any"
              },
              {
                "name": "requiredDate",
                "type": "date"
              },
              {
                "name": "shippedDate",
                "type": "date"
              },
              {
                "name": "shipViaId",
                "type": "integer"
              },
              {
                "name": "freight",
                "type": "decimal"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "address",
                "type": "string"
              },
              {
                "name": "city",
                "type": "string"
              },
              {
                "name": "region",
                "type": "string"
              },
              {
                "name": "postalCode",
                "type": "string"
              },
              {
                "name": "country",
                "type": "string"
              }
            ],
            "constraints": [
              {
                "message": "Cannot be null property customerId in entity Orders",
                "condition": "isNotNull(customerId)"
              },
              {
                "message": "Cannot be null property employeeId in entity Orders",
                "condition": "isNotNull(employeeId)"
              }
            ],
            "values": [],
            "defaults": [],
            "clause": "bulkInsert",
            "alias": "o"
          }
        }
      ],
      "errors": 0
    },
    {
      "name": "getInfo",
      "tests": [
        {
          "test": "Categories.insert({name:name,description:description})",
          "result": {
            "entity": "Categories",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "INSERT INTO Categories(CategoryName,Description) VALUES(?,?)",
            "children": []
          }
        },
        {
          "test": "Categories.insert()",
          "result": {
            "entity": "Categories",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "INSERT INTO Categories(CategoryName,Description) VALUES(?,?)",
            "children": []
          }
        },
        {
          "test": "Categories.insert([name, description])",
          "result": {
            "entity": "Categories",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "INSERT INTO Categories(CategoryName,Description) VALUES(?,?)",
            "children": []
          }
        },
        {
          "test": "Categories.insert(entity)",
          "result": {
            "entity": "Categories",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "INSERT INTO Categories(CategoryName,Description) VALUES(?,?)",
            "children": []
          }
        },
        {
          "test": "Orders.insert()",
          "result": {
            "entity": "Orders",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "INSERT INTO Orders(CustomerID,EmployeeID,OrderDate,RequiredDate,ShippedDate,ShipVia,Freight,ShipName,ShipAddress,ShipCity,ShipRegion,ShipPostalCode,ShipCountry) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?)",
            "children": []
          }
        },
        {
          "test": "Orders.insert().include(p => p.details)",
          "result": {
            "entity": "Orders",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "INSERT INTO Orders(CustomerID,EmployeeID,OrderDate,RequiredDate,ShippedDate,ShipVia,Freight,ShipName,ShipAddress,ShipCity,ShipRegion,ShipPostalCode,ShipCountry) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?)",
            "children": [
              {
                "entity": "Orders.details",
                "dialect": "MySQL",
                "source": "MySQL",
                "sentence": "INSERT INTO `Order Details`(OrderID,ProductID,UnitPrice,Quantity,Discount) VALUES(?,?,?,?,?)",
                "children": []
              }
            ]
          }
        },
        {
          "test": "Orders.insert().include(p => [p.details, p.customer])",
          "result": {
            "entity": "Orders",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "INSERT INTO Orders(CustomerID,EmployeeID,OrderDate,RequiredDate,ShippedDate,ShipVia,Freight,ShipName,ShipAddress,ShipCity,ShipRegion,ShipPostalCode,ShipCountry) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?)",
            "children": [
              {
                "entity": "Orders.details",
                "dialect": "MySQL",
                "source": "MySQL",
                "sentence": "INSERT INTO `Order Details`(OrderID,ProductID,UnitPrice,Quantity,Discount) VALUES(?,?,?,?,?)",
                "children": []
              }
            ]
          }
        },
        {
          "test": "Categories.insert(() => ({ name: name, description: description }))",
          "result": {
            "entity": "Categories",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "INSERT INTO Categories(CategoryName,Description) VALUES(?,?)",
            "children": []
          }
        },
        {
          "test": "Categories.insert(p=>{name:p.name,description:p.description})",
          "result": {
            "entity": "Categories",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "INSERT INTO Categories(CategoryName,Description) VALUES(?,?)",
            "children": []
          }
        },
        {
          "test": "Categories.insert(p=> [p.name,p.description])",
          "result": {
            "entity": "Categories",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "INSERT INTO Categories(CategoryName,Description) VALUES(?,?)",
            "children": []
          }
        },
        {
          "test": "Categories.bulkInsert()",
          "result": {
            "entity": "Categories",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "INSERT INTO Categories(CategoryName,Description) VALUES ?",
            "children": []
          }
        },
        {
          "test": "Orders.bulkInsert().include(p => p.details)",
          "result": {
            "entity": "Orders",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "INSERT INTO Orders(CustomerID,EmployeeID,OrderDate,RequiredDate,ShippedDate,ShipVia,Freight,ShipName,ShipAddress,ShipCity,ShipRegion,ShipPostalCode,ShipCountry) VALUES ?",
            "children": [
              {
                "entity": "Orders.details",
                "dialect": "MySQL",
                "source": "MySQL",
                "sentence": "INSERT INTO `Order Details`(OrderID,ProductID,UnitPrice,Quantity,Discount) VALUES ?",
                "children": []
              }
            ]
          }
        },
        {
          "test": "Orders.bulkInsert().include(p => [p.details, p.customer])",
          "result": {
            "entity": "Orders",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "INSERT INTO Orders(CustomerID,EmployeeID,OrderDate,RequiredDate,ShippedDate,ShipVia,Freight,ShipName,ShipAddress,ShipCity,ShipRegion,ShipPostalCode,ShipCountry) VALUES ?",
            "children": [
              {
                "entity": "Orders.details",
                "dialect": "MySQL",
                "source": "MySQL",
                "sentence": "INSERT INTO `Order Details`(OrderID,ProductID,UnitPrice,Quantity,Discount) VALUES ?",
                "children": []
              }
            ]
          }
        }
      ],
      "errors": 0
    }
  ],
  "errors": 0
}