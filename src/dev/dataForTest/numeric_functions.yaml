name: numeric functions
data:
  a:
    id: 1
test:
  - name: function abs
    data: a
    sentences:
      - stage: Oracle
        info:
          entity: Products
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT p.ProductName AS "name", (p.UnitPrice * -1) AS "source",
            ROUND(ABS((p.UnitPrice * -1)),10) AS "result" FROM Products p  WHERE
            p.ProductID = :id 
          children: []
    errors: 0
    expression: >-
      Products.map(p=>{name:p.name,source:(p.price*-1),result:round(abs((p.price*-1)),10)}).filter(p=>(p.id==id))
    normalizeExpression: >-
      Products.map(p=>{name:p.name,source:(p.price*-1),result:round(abs((p.price*-1)),10)}).filter(p=>(p.id==id))
    model:
      - name: name
        type: string
      - name: source
        type: number
      - name: result
        type: number
    parameters:
      - name: id
        type: integer
    constraints:
      entity: Products
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 93
      name: select
      children: []
      type: any
      entity: Products
      columns:
        - name: name
          type: string
        - name: source
          type: number
        - name: result
          type: number
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: p
    executions:
      - stage: Oracle
    result:
      - name: Chai
        source: -18
        result: 18
  - name: function acos
    data: a
    sentences:
      - stage: Oracle
        info:
          entity: Products
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT p.ProductName AS "name", 0.25 AS "source",
            ROUND(ACOS(0.25),10) AS "result" FROM Products p  WHERE p.ProductID
            = :id 
          children: []
    errors: 0
    expression: >-
      Products.map(p=>{name:p.name,source:0.25,result:round(acos(0.25),10)}).filter(p=>(p.id==id))
    normalizeExpression: >-
      Products.map(p=>{name:p.name,source:0.25,result:round(acos(0.25),10)}).filter(p=>(p.id==id))
    model:
      - name: name
        type: string
      - name: source
        type: decimal
      - name: result
        type: number
    parameters:
      - name: id
        type: integer
    constraints:
      entity: Products
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 78
      name: select
      children: []
      type: any
      entity: Products
      columns:
        - name: name
          type: string
        - name: source
          type: decimal
        - name: result
          type: number
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: p
    executions:
      - stage: Oracle
    result:
      - name: Chai
        source: 0.25
        result: 1.3181160717
  - name: function asin
    data: a
    sentences:
      - stage: Oracle
        info:
          entity: Products
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT p.ProductName AS "name", 0.25 AS "source",
            ROUND(ASIN(0.25),10) AS "result" FROM Products p  WHERE p.ProductID
            = :id 
          children: []
    errors: 0
    expression: >-
      Products.map(p=>{name:p.name,source:0.25,result:round(asin(0.25),10)}).filter(p=>(p.id==id))
    normalizeExpression: >-
      Products.map(p=>{name:p.name,source:0.25,result:round(asin(0.25),10)}).filter(p=>(p.id==id))
    model:
      - name: name
        type: string
      - name: source
        type: decimal
      - name: result
        type: number
    parameters:
      - name: id
        type: integer
    constraints:
      entity: Products
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 78
      name: select
      children: []
      type: any
      entity: Products
      columns:
        - name: name
          type: string
        - name: source
          type: decimal
        - name: result
          type: number
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: p
    executions:
      - stage: Oracle
    result:
      - name: Chai
        source: 0.25
        result: 0.2526802551
  - name: function atan
    data: a
    sentences:
      - stage: Oracle
        info:
          entity: Products
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT p.ProductName AS "name", 0.25 AS "source",
            ROUND(ATAN(0.25),10) AS "result" FROM Products p  WHERE p.ProductID
            = :id 
          children: []
    errors: 0
    expression: >-
      Products.map(p=>{name:p.name,source:0.25,result:round(atan(0.25),10)}).filter(p=>(p.id==id))
    normalizeExpression: >-
      Products.map(p=>{name:p.name,source:0.25,result:round(atan(0.25),10)}).filter(p=>(p.id==id))
    model:
      - name: name
        type: string
      - name: source
        type: decimal
      - name: result
        type: number
    parameters:
      - name: id
        type: integer
    constraints:
      entity: Products
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 78
      name: select
      children: []
      type: any
      entity: Products
      columns:
        - name: name
          type: string
        - name: source
          type: decimal
        - name: result
          type: number
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: p
    executions:
      - stage: Oracle
    result:
      - name: Chai
        source: 0.25
        result: 0.2449786631
  - name: function atan2
    data: a
    sentences:
      - stage: Oracle
        info:
          entity: Products
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT p.ProductName AS "name", 0.5 AS "source",
            ROUND(ATAN2(0.25,1),10) AS "result" FROM Products p  WHERE
            p.ProductID = :id 
          children: []
    errors: 0
    expression: >-
      Products.map(p=>{name:p.name,source:0.5,result:round(atan2(0.25,1),10)}).filter(p=>(p.id==id))
    normalizeExpression: >-
      Products.map(p=>{name:p.name,source:0.5,result:round(atan2(0.25,1),10)}).filter(p=>(p.id==id))
    model:
      - name: name
        type: string
      - name: source
        type: decimal
      - name: result
        type: number
    parameters:
      - name: id
        type: integer
    constraints:
      entity: Products
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 80
      name: select
      children: []
      type: any
      entity: Products
      columns:
        - name: name
          type: string
        - name: source
          type: decimal
        - name: result
          type: number
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: p
    executions:
      - stage: Oracle
    result:
      - name: Chai
        source: 0.5
        result: 0.2449786631
  - name: function ceil
    data: a
    sentences:
      - stage: Oracle
        info:
          entity: Products
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT p.ProductName AS "name", 25.75 AS "source",
            ROUND(CEIL(25.75),10) AS "result" FROM Products p  WHERE p.ProductID
            = :id 
          children: []
    errors: 0
    expression: >-
      Products.map(p=>{name:p.name,source:25.75,result:round(ceil(25.75),10)}).filter(p=>(p.id==id))
    normalizeExpression: >-
      Products.map(p=>{name:p.name,source:25.75,result:round(ceil(25.75),10)}).filter(p=>(p.id==id))
    model:
      - name: name
        type: string
      - name: source
        type: decimal
      - name: result
        type: number
    parameters:
      - name: id
        type: integer
    constraints:
      entity: Products
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 80
      name: select
      children: []
      type: any
      entity: Products
      columns:
        - name: name
          type: string
        - name: source
          type: decimal
        - name: result
          type: number
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: p
    executions:
      - stage: Oracle
    result:
      - name: Chai
        source: 25.75
        result: 26
  - name: function cos
    data: a
    sentences:
      - stage: Oracle
        info:
          entity: Products
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT p.ProductName AS "name", 2 AS "source", ROUND(COS(2),10) AS
            "result" FROM Products p  WHERE p.ProductID = :id 
          children: []
    errors: 0
    expression: >-
      Products.map(p=>{name:p.name,source:2,result:round(cos(2),10)}).filter(p=>(p.id==id))
    normalizeExpression: >-
      Products.map(p=>{name:p.name,source:2,result:round(cos(2),10)}).filter(p=>(p.id==id))
    model:
      - name: name
        type: string
      - name: source
        type: integer
      - name: result
        type: number
    parameters:
      - name: id
        type: integer
    constraints:
      entity: Products
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 71
      name: select
      children: []
      type: any
      entity: Products
      columns:
        - name: name
          type: string
        - name: source
          type: integer
        - name: result
          type: number
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: p
    executions:
      - stage: Oracle
    result:
      - name: Chai
        source: 2
        result: -0.4161468365
  - name: function exp
    data: a
    sentences:
      - stage: Oracle
        info:
          entity: Products
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT p.ProductName AS "name", 1 AS "source", ROUND(EXP(1),10) AS
            "result" FROM Products p  WHERE p.ProductID = :id 
          children: []
    errors: 0
    expression: >-
      Products.map(p=>{name:p.name,source:1,result:round(exp(1),10)}).filter(p=>(p.id==id))
    normalizeExpression: >-
      Products.map(p=>{name:p.name,source:1,result:round(exp(1),10)}).filter(p=>(p.id==id))
    model:
      - name: name
        type: string
      - name: source
        type: integer
      - name: result
        type: number
    parameters:
      - name: id
        type: integer
    constraints:
      entity: Products
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 71
      name: select
      children: []
      type: any
      entity: Products
      columns:
        - name: name
          type: string
        - name: source
          type: integer
        - name: result
          type: number
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: p
    executions:
      - stage: Oracle
    result:
      - name: Chai
        source: 1
        result: 2.7182818285
  - name: function floor
    data: a
    sentences:
      - stage: Oracle
        info:
          entity: Products
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT p.ProductName AS "name", 25.75 AS "source",
            ROUND(FLOOR(25.75),10) AS "result" FROM Products p  WHERE
            p.ProductID = :id 
          children: []
    errors: 0
    expression: >-
      Products.map(p=>{name:p.name,source:25.75,result:round(floor(25.75),10)}).filter(p=>(p.id==id))
    normalizeExpression: >-
      Products.map(p=>{name:p.name,source:25.75,result:round(floor(25.75),10)}).filter(p=>(p.id==id))
    model:
      - name: name
        type: string
      - name: source
        type: decimal
      - name: result
        type: number
    parameters:
      - name: id
        type: integer
    constraints:
      entity: Products
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 81
      name: select
      children: []
      type: any
      entity: Products
      columns:
        - name: name
          type: string
        - name: source
          type: decimal
        - name: result
          type: number
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: p
    executions:
      - stage: Oracle
    result:
      - name: Chai
        source: 25.75
        result: 25
  - name: function ln
    data: a
    sentences:
      - stage: Oracle
        info:
          entity: Products
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT p.ProductName AS "name", 2 AS "source", ROUND(LN(2),10) AS
            "result" FROM Products p  WHERE p.ProductID = :id 
          children: []
    errors: 0
    expression: >-
      Products.map(p=>{name:p.name,source:2,result:round(ln(2),10)}).filter(p=>(p.id==id))
    normalizeExpression: >-
      Products.map(p=>{name:p.name,source:2,result:round(ln(2),10)}).filter(p=>(p.id==id))
    model:
      - name: name
        type: string
      - name: source
        type: integer
      - name: result
        type: number
    parameters:
      - name: id
        type: integer
    constraints:
      entity: Products
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 70
      name: select
      children: []
      type: any
      entity: Products
      columns:
        - name: name
          type: string
        - name: source
          type: integer
        - name: result
          type: number
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: p
    executions:
      - stage: Oracle
    result:
      - name: Chai
        source: 2
        result: 0.6931471806
  - name: function log
    data: a
    sentences:
      - stage: Oracle
        info:
          entity: Products
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT p.ProductName AS "name", 10 AS "m", 20 AS "n",
            ROUND(LOG(10,20),10) AS "result" FROM Products p  WHERE p.ProductID
            = :id 
          children: []
    errors: 0
    expression: >-
      Products.map(p=>{name:p.name,m:10,n:20,result:round(log(10,20),10)}).filter(p=>(p.id==id))
    normalizeExpression: >-
      Products.map(p=>{name:p.name,m:10,n:20,result:round(log(10,20),10)}).filter(p=>(p.id==id))
    model:
      - name: name
        type: string
      - name: m
        type: integer
      - name: 'n'
        type: integer
      - name: result
        type: number
    parameters:
      - name: id
        type: integer
    constraints:
      entity: Products
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 76
      name: select
      children: []
      type: any
      entity: Products
      columns:
        - name: name
          type: string
        - name: m
          type: integer
        - name: 'n'
          type: integer
        - name: result
          type: number
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: p
    executions:
      - stage: Oracle
    result:
      - name: Chai
        m: 10
        'n': 20
        result: 1.3010299957
  - name: function round
    data: a
    sentences:
      - stage: Oracle
        info:
          entity: Products
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT p.ProductName AS "name", 135.375 AS "source",
            ROUND(135.375,2) AS "result" FROM Products p  WHERE p.ProductID =
            :id 
          children: []
    errors: 0
    expression: >-
      Products.map(p=>{name:p.name,source:135.375,result:round(135.375,2)}).filter(p=>(p.id==id))
    normalizeExpression: >-
      Products.map(p=>{name:p.name,source:135.375,result:round(135.375,2)}).filter(p=>(p.id==id))
    model:
      - name: name
        type: string
      - name: source
        type: decimal
      - name: result
        type: number
    parameters:
      - name: id
        type: integer
    constraints:
      entity: Products
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 77
      name: select
      children: []
      type: any
      entity: Products
      columns:
        - name: name
          type: string
        - name: source
          type: decimal
        - name: result
          type: number
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: p
    executions:
      - stage: Oracle
    result:
      - name: Chai
        source: 135.375
        result: 135.38
  - name: function sign
    data: a
    sentences:
      - stage: Oracle
        info:
          entity: Products
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT p.ProductName AS "name", 255.5 AS "source",
            ROUND(SIGN(255.5),10) AS "result" FROM Products p  WHERE p.ProductID
            = :id 
          children: []
    errors: 0
    expression: >-
      Products.map(p=>{name:p.name,source:255.5,result:round(sign(255.5),10)}).filter(p=>(p.id==id))
    normalizeExpression: >-
      Products.map(p=>{name:p.name,source:255.5,result:round(sign(255.5),10)}).filter(p=>(p.id==id))
    model:
      - name: name
        type: string
      - name: source
        type: decimal
      - name: result
        type: number
    parameters:
      - name: id
        type: integer
    constraints:
      entity: Products
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 80
      name: select
      children: []
      type: any
      entity: Products
      columns:
        - name: name
          type: string
        - name: source
          type: decimal
        - name: result
          type: number
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: p
    executions:
      - stage: Oracle
    result:
      - name: Chai
        source: 255.5
        result: 1
  - name: function tan
    data: a
    sentences:
      - stage: Oracle
        info:
          entity: Products
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT p.ProductName AS "name", 1.75 AS "source",
            ROUND(TAN(1.75),10) AS "result" FROM Products p  WHERE p.ProductID =
            :id 
          children: []
    errors: 0
    expression: >-
      Products.map(p=>{name:p.name,source:1.75,result:round(tan(1.75),10)}).filter(p=>(p.id==id))
    normalizeExpression: >-
      Products.map(p=>{name:p.name,source:1.75,result:round(tan(1.75),10)}).filter(p=>(p.id==id))
    model:
      - name: name
        type: string
      - name: source
        type: decimal
      - name: result
        type: number
    parameters:
      - name: id
        type: integer
    constraints:
      entity: Products
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 77
      name: select
      children: []
      type: any
      entity: Products
      columns:
        - name: name
          type: string
        - name: source
          type: decimal
        - name: result
          type: number
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: p
    executions:
      - stage: Oracle
    result:
      - name: Chai
        source: 1.75
        result: -5.5203799225
  - name: function trunc
    data: a
    sentences:
      - stage: Oracle
        info:
          entity: Products
          dialect: Oracle
          source: Oracle
          sentence: >-
            SELECT p.ProductName AS "name", 135.375 AS "source",
            ROUND(TRUNC(135.375,2),10) AS "result" FROM Products p  WHERE
            p.ProductID = :id 
          children: []
    errors: 0
    expression: >-
      Products.map(p=>{name:p.name,source:135.375,result:round(trunc(135.375,2),10)}).filter(p=>(p.id==id))
    normalizeExpression: >-
      Products.map(p=>{name:p.name,source:135.375,result:round(trunc(135.375,2),10)}).filter(p=>(p.id==id))
    model:
      - name: name
        type: string
      - name: source
        type: decimal
      - name: result
        type: number
    parameters:
      - name: id
        type: integer
    constraints:
      entity: Products
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 87
      name: select
      children: []
      type: any
      entity: Products
      columns:
        - name: name
          type: string
        - name: source
          type: decimal
        - name: result
          type: number
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: p
    executions:
      - stage: Oracle
    result:
      - name: Chai
        source: 135.375
        result: 135.37
errors: 0
