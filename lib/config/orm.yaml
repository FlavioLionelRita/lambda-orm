operators:
  unary:
    '-': '- {0}'
    '~': '~ {0}'
    '!': 'NOT {0}'
  binary:  
    '+': '{0} + {1}' 
    '-': '{0} - {1}'
    '*': '{0} * {1}'
    '/': '{0} / {1}'
    '**': '{0} ^ {1}'
    '//': '{0} ^ (1/{1})'
    '%': MOD({0},{1})
    '&': 'BitAnd({0},{1})'
    '|': 'BitOr({0},{1})'
    '^': 'bitXor({0},{1})'
    '<<':'{0} << {1}'
    '>>': '{0} >> {1}'
    '==': '{0} = {1}'
    '!=': '{0} <> {1}'
    '>': '{0} > {1}'
    '<': '{0} < {1}'
    '>=': '{0} >= {1}'
    '<=': '{0} <= {1}'
    '&&': '{0} AND {1}'
    '||': '{0} OR {1}'
    '[]': 'N/A'
    '=': 'SET {0} = {1}'
    '+=': 'SET {0} = {0} + {1}'
    '-=': 'SET {0} = {0} - {1}'
    '*=': 'SET {0} = {0} * {1}'
    '/=': 'SET {0} = {0} / {1}'
    '**=': 'SET {0} = {0} ^ {1}'
    '//=': 'SET {0} = {0} ^ 1/{1}'
    '%=': 'SET {0} = MOD({0},{1})'
    '&=': 'SET {0} = BitAnd({0},{1})'
    '|=': 'SET {0} = BitOr({0},{1})'
    '^=': 'SET {0} = BitXor({0},{1})'
    '<<=': 'SET {0} = {0} << {1}'
    '>>=': 'SET {0} = {0} >> {1}'
  ternary:    
    '?': 'IF {0} THEN {1} ELSE {2} END'

functions:
  foreach: 'N/A'
  map: 'SELECT {0} '
  first: 'SELECT TOP 1 {0} '
  filter: 'WHERE {0} '
  having: 'HAVING {0} '
  reverse: 'ORDER BY ({0}) DESC'
  sort: 'ORDER BY {0} '
  insert: 'INSERT INTO {0}({1}) VALUES({2}) '
  insertfrom: 'INSERT INTO {0}({1}) {2} '
  update: 'UPDATE {0} SET {1} ' 
  delete: 'DELETE {0} ' 