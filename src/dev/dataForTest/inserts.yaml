name: inserts
data:
  a:
    name: Beverages20
    description: Soft drinks, coffees, teas, beers, and ales
    id: 9
  b:
    name: Beverages21
    description: Soft drinks, coffees, teas, beers, and ales
    id: 10
  c:
    entity:
      name: Beverages22
      description: Soft drinks, coffees, teas, beers, and ales
    id: 11
  d:
    entity:
      name: Beverages23
      description: Soft drinks, coffees, teas, beers, and ales
    id: 12
  order:
    customerId: VINET
    employeeId: 5
    orderDate: '1996-07-03T22:00:00.000Z'
    requiredDate: '1996-07-31T22:00:00.000Z'
    shippedDate: '1996-07-15T22:00:00.000Z'
    shipViaId: 3
    freight: 32.38
    name: Vins et alcools Chevalier
    address: 59 rue de l-Abbaye
    city: Reims
    region: null
    postalCode: '51100'
    country: France
    details:
      - productId: 11
        unitPrice: 14
        quantity: 12
        discount: 10
        orderId: 833
      - productId: 42
        unitPrice: 9.8
        quantity: 10
        discount: 10
        orderId: 833
      - productId: 72
        unitPrice: 34.8
        quantity: 5
        discount: 10
        orderId: 833
    id: 833
test:
  - name: insert 1
    data: a
    sentences:
      - stage: Oracle
        info:
          entity: Categories
          dialect: Oracle
          source: Oracle
          sentence: >-
            INSERT INTO Categories(CategoryID,CategoryName,Description)
            VALUES(SQ_CATEGORIES.nextval,:name,:description)
          children: []
    errors: 0
    expression: Categories.insert({name:name,description:description})
    normalizeExpression: Categories.insert({name:name,description:description})
    model:
      - name: id
        type: integer
      - name: name
        type: string
      - name: description
        type: string
    parameters:
      - name: name
        type: string
      - name: description
        type: string
    constraints:
      entity: Categories
      constraints:
        - message: Cannot be null property name in entity Categories
          condition: isNotNull(name)
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 18
      name: insert
      children: []
      type: any
      entity: Categories
      columns:
        - name: id
          type: integer
          required: false
          autoIncrement: true
        - name: name
          type: string
        - name: description
          type: string
      parameters:
        - name: name
          type: string
        - name: description
          type: string
      constraints:
        - message: Cannot be null property name in entity Categories
          condition: isNotNull(name)
      values: []
      defaults: []
      clause: insert
      alias: c
    executions:
      - stage: Oracle
    result:
      data:
        name: Beverages20
        description: Soft drinks, coffees, teas, beers, and ales
        id: 9
  - name: insert 2
    data: b
    sentences:
      - stage: Oracle
        info:
          entity: Categories
          dialect: Oracle
          source: Oracle
          sentence: >-
            INSERT INTO Categories(CategoryID,CategoryName,Description)
            VALUES(SQ_CATEGORIES.nextval,:name,:description)
          children: []
    errors: 0
    expression: Categories.insert({name:name,description:description})
    normalizeExpression: Categories.insert({name:name,description:description})
    model:
      - name: id
        type: integer
      - name: name
        type: string
      - name: description
        type: string
    parameters:
      - name: name
        type: string
      - name: description
        type: string
    constraints:
      entity: Categories
      constraints:
        - message: Cannot be null property name in entity Categories
          condition: isNotNull(name)
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 18
      name: insert
      children: []
      type: any
      entity: Categories
      columns:
        - name: id
          type: integer
          required: false
          autoIncrement: true
        - name: name
          type: string
        - name: description
          type: string
      parameters:
        - name: name
          type: string
        - name: description
          type: string
      constraints:
        - message: Cannot be null property name in entity Categories
          condition: isNotNull(name)
      values: []
      defaults: []
      clause: insert
      alias: c
    executions:
      - stage: Oracle
    result:
      data:
        name: Beverages21
        description: Soft drinks, coffees, teas, beers, and ales
        id: 10
  - name: insert 3
    data: c
    sentences:
      - stage: Oracle
        info:
          entity: Categories
          dialect: Oracle
          source: Oracle
          sentence: >-
            INSERT INTO Categories(CategoryID,CategoryName,Description)
            VALUES(SQ_CATEGORIES.nextval,:entity_name,:entity_description)
          children: []
    errors: 0
    expression: Categories.insert({name:entity.name,description:entity.description})
    normalizeExpression: Categories.insert({name:entity.name,description:entity.description})
    model:
      - name: id
        type: integer
      - name: name
        type: string
      - name: description
        type: string
    parameters:
      - name: entity.name
        type: string
      - name: entity.description
        type: string
    constraints:
      entity: Categories
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 18
      name: insert
      children: []
      type: any
      entity: Categories
      columns:
        - name: id
          type: integer
          required: false
          autoIncrement: true
        - name: name
          type: string
        - name: description
          type: string
      parameters:
        - name: entity.name
          type: string
        - name: entity.description
          type: string
      constraints: []
      values: []
      defaults: []
      clause: insert
      alias: c
    executions:
      - stage: Oracle
    result:
      data:
        entity:
          name: Beverages22
          description: Soft drinks, coffees, teas, beers, and ales
        id: 11
  - name: insert 4
    data: d
    sentences:
      - stage: Oracle
        info:
          entity: Categories
          dialect: Oracle
          source: Oracle
          sentence: >-
            INSERT INTO Categories(CategoryID,CategoryName,Description)
            VALUES(SQ_CATEGORIES.nextval,:entity_name,:entity_description)
          children: []
    errors: 0
    expression: Categories.insert({name:entity.name,description:entity.description})
    normalizeExpression: Categories.insert({name:entity.name,description:entity.description})
    model:
      - name: id
        type: integer
      - name: name
        type: string
      - name: description
        type: string
    parameters:
      - name: entity.name
        type: string
      - name: entity.description
        type: string
    constraints:
      entity: Categories
      constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 18
      name: insert
      children: []
      type: any
      entity: Categories
      columns:
        - name: id
          type: integer
          required: false
          autoIncrement: true
        - name: name
          type: string
        - name: description
          type: string
      parameters:
        - name: entity.name
          type: string
        - name: entity.description
          type: string
      constraints: []
      values: []
      defaults: []
      clause: insert
      alias: c
    executions:
      - stage: Oracle
    result:
      data:
        entity:
          name: Beverages23
          description: Soft drinks, coffees, teas, beers, and ales
        id: 12
  - name: insert 5
    data: order
    sentences:
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: >-
            INSERT INTO
            Orders(OrderID,CustomerID,EmployeeID,OrderDate,RequiredDate,ShippedDate,ShipVia,Freight,ShipName,ShipAddress,ShipCity,ShipRegion,ShipPostalCode,ShipCountry)
            VALUES(SQ_ORDERS.nextval,:customerId,:employeeId,:orderDate,:requiredDate,:shippedDate,:shipViaId,:freight,:name,:address,:city,:region,:postalCode,:country)
          children: []
    errors: 0
    expression: >-
      Orders.insert({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country})
    normalizeExpression: >-
      Orders.insert({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country})
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
    parameters:
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
    constraints:
      entity: Orders
      constraints:
        - message: Cannot be null property customerId in entity Orders
          condition: isNotNull(customerId)
        - message: Cannot be null property employeeId in entity Orders
          condition: isNotNull(employeeId)
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 14
      name: insert
      children: []
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
          required: false
          autoIncrement: true
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
      parameters:
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
      constraints:
        - message: Cannot be null property customerId in entity Orders
          condition: isNotNull(customerId)
        - message: Cannot be null property employeeId in entity Orders
          condition: isNotNull(employeeId)
      values: []
      defaults: []
      clause: insert
      alias: o
    executions:
      - stage: Oracle
    result:
      data:
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        details:
          - productId: 11
            unitPrice: 14
            quantity: 12
            discount: 10
            orderId: 833
          - productId: 42
            unitPrice: 9.8
            quantity: 10
            discount: 10
            orderId: 833
          - productId: 72
            unitPrice: 34.8
            quantity: 5
            discount: 10
            orderId: 833
        id: 833
  - name: insert 6
    data: order
    sentences:
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: >-
            INSERT INTO
            Orders(OrderID,CustomerID,EmployeeID,OrderDate,RequiredDate,ShippedDate,ShipVia,Freight,ShipName,ShipAddress,ShipCity,ShipRegion,ShipPostalCode,ShipCountry)
            VALUES(SQ_ORDERS.nextval,:customerId,:employeeId,:orderDate,:requiredDate,:shippedDate,:shipViaId,:freight,:name,:address,:city,:region,:postalCode,:country)
          children:
            - entity: Orders.details
              dialect: Oracle
              source: Oracle
              sentence: >-
                INSERT INTO "Order
                Details"(OrderID,ProductID,UnitPrice,Quantity,Discount)
                VALUES(:orderId,:productId,:unitPrice,:quantity,:discount)
              children: []
    errors: 0
    expression: >-
      Orders.insert({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country}).include(p=>p.details.insert({orderId:orderId,productId:productId,unitPrice:unitPrice,quantity:quantity,discount:discount}))
    normalizeExpression: >-
      Orders.insert({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country}).include(p=>p.details.insert({orderId:orderId,productId:productId,unitPrice:unitPrice,quantity:quantity,discount:discount}))
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
    parameters:
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
    constraints:
      entity: Orders
      constraints:
        - message: Cannot be null property customerId in entity Orders
          condition: isNotNull(customerId)
        - message: Cannot be null property employeeId in entity Orders
          condition: isNotNull(employeeId)
      children:
        - entity: Orders.details
          constraints:
            - message: Cannot be null property orderId in entity Orders.details
              condition: isNotNull(orderId)
            - message: Cannot be null property productId in entity Orders.details
              condition: isNotNull(productId)
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 263
      name: insert
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 283
          name: insert
          children: []
          type: any
          entity: Orders.details
          columns:
            - name: orderId
              type: integer
            - name: productId
              type: integer
            - name: unitPrice
              type: decimal
            - name: quantity
              type: decimal
            - name: discount
              type: decimal
          parameters:
            - name: orderId
              type: integer
            - name: productId
              type: integer
            - name: unitPrice
              type: decimal
            - name: quantity
              type: decimal
            - name: discount
              type: decimal
          constraints:
            - message: Cannot be null property orderId in entity Orders.details
              condition: isNotNull(orderId)
            - message: Cannot be null property productId in entity Orders.details
              condition: isNotNull(productId)
          values: []
          defaults: []
          clause: insert
          alias: o1
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
          required: false
          autoIncrement: true
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
      parameters:
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
      constraints:
        - message: Cannot be null property customerId in entity Orders
          condition: isNotNull(customerId)
        - message: Cannot be null property employeeId in entity Orders
          condition: isNotNull(employeeId)
      values: []
      defaults: []
      clause: insert
      alias: o
    executions:
      - stage: Oracle
    result:
      data:
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        details:
          - productId: 11
            unitPrice: 14
            quantity: 12
            discount: 10
            orderId: 833
          - productId: 42
            unitPrice: 9.8
            quantity: 10
            discount: 10
            orderId: 833
          - productId: 72
            unitPrice: 34.8
            quantity: 5
            discount: 10
            orderId: 833
        id: 833
  - name: insert 7
    data: order
    sentences:
      - stage: Oracle
        info:
          entity: Orders
          dialect: Oracle
          source: Oracle
          sentence: >-
            INSERT INTO
            Orders(OrderID,CustomerID,EmployeeID,OrderDate,RequiredDate,ShippedDate,ShipVia,Freight,ShipName,ShipAddress,ShipCity,ShipRegion,ShipPostalCode,ShipCountry)
            VALUES(SQ_ORDERS.nextval,:customerId,:employeeId,:orderDate,:requiredDate,:shippedDate,:shipViaId,:freight,:name,:address,:city,:region,:postalCode,:country)
          children:
            - entity: Orders.details
              dialect: Oracle
              source: Oracle
              sentence: >-
                INSERT INTO "Order
                Details"(OrderID,ProductID,UnitPrice,Quantity,Discount)
                VALUES(:orderId,:productId,:unitPrice,:quantity,:discount)
              children: []
    errors: 0
    expression: >-
      Orders.insert({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country}).include(p=>p.details.insert({orderId:orderId,productId:productId,unitPrice:unitPrice,quantity:quantity,discount:discount}))
    normalizeExpression: >-
      Orders.insert({customerId:customerId,employeeId:employeeId,orderDate:orderDate,requiredDate:requiredDate,shippedDate:shippedDate,shipViaId:shipViaId,freight:freight,name:name,address:address,city:city,region:region,postalCode:postalCode,country:country}).include(p=>p.details.insert({orderId:orderId,productId:productId,unitPrice:unitPrice,quantity:quantity,discount:discount}))
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
    parameters:
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
    constraints:
      entity: Orders
      constraints:
        - message: Cannot be null property customerId in entity Orders
          condition: isNotNull(customerId)
        - message: Cannot be null property employeeId in entity Orders
          condition: isNotNull(employeeId)
      children:
        - entity: Orders.details
          constraints:
            - message: Cannot be null property orderId in entity Orders.details
              condition: isNotNull(orderId)
            - message: Cannot be null property productId in entity Orders.details
              condition: isNotNull(productId)
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 263
      name: insert
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 283
          name: insert
          children: []
          type: any
          entity: Orders.details
          columns:
            - name: orderId
              type: integer
            - name: productId
              type: integer
            - name: unitPrice
              type: decimal
            - name: quantity
              type: decimal
            - name: discount
              type: decimal
          parameters:
            - name: orderId
              type: integer
            - name: productId
              type: integer
            - name: unitPrice
              type: decimal
            - name: quantity
              type: decimal
            - name: discount
              type: decimal
          constraints:
            - message: Cannot be null property orderId in entity Orders.details
              condition: isNotNull(orderId)
            - message: Cannot be null property productId in entity Orders.details
              condition: isNotNull(productId)
          values: []
          defaults: []
          clause: insert
          alias: o1
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
          required: false
          autoIncrement: true
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
      parameters:
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
      constraints:
        - message: Cannot be null property customerId in entity Orders
          condition: isNotNull(customerId)
        - message: Cannot be null property employeeId in entity Orders
          condition: isNotNull(employeeId)
      values: []
      defaults: []
      clause: insert
      alias: o
    executions:
      - stage: Oracle
    result:
      data:
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        details:
          - productId: 11
            unitPrice: 14
            quantity: 12
            discount: 10
            orderId: 833
          - productId: 42
            unitPrice: 9.8
            quantity: 10
            discount: 10
            orderId: 833
          - productId: 72
            unitPrice: 34.8
            quantity: 5
            discount: 10
            orderId: 833
        id: 833
errors: 0
