name: groupBy
data:
  a:
    id: 1
test:
  - name: groupBy 1
    sentences:
      - stage: mysql
        error: 'SchemaError: View: mysql not found'
      - stage: postgres
        error: 'SchemaError: View: postgres not found'
      - stage: mariadb
        error: 'SchemaError: View: mariadb not found'
    errors: 6
    expression: Products.map(p=>{maxPrice:max(p.price)})
    normalizeExpression: Products.map(p=>{maxPrice:max(p.price)})
    model:
      - name: maxPrice
        type: decimal
    parameters: []
    constraints:
      entity: Products
      constraints: []
    metadata:
      name: select
      type: Sentence
      children:
        - name: Products.p
          type: From
          children: []
        - name: map
          type: Map
          children:
            - name: obj
              type: Obj
              children:
                - name: maxPrice
                  type: KeyValue
                  children:
                    - name: max
                      type: FunctionRef
                      children:
                        - name: price
                          type: Field
                          children: []
                          entity: Products
                          alias: p
      fields:
        - name: maxPrice
          type: decimal
      parameters: []
      entity: Products
    executions:
      - stage: mysql
        error: 'SchemaError: View: mysql not found'
      - stage: postgres
        error: 'SchemaError: View: postgres not found'
      - stage: mariadb
        error: 'SchemaError: View: mariadb not found'
  - name: groupBy 2
    sentences:
      - stage: mysql
        error: 'SchemaError: View: mysql not found'
      - stage: postgres
        error: 'SchemaError: View: postgres not found'
      - stage: mariadb
        error: 'SchemaError: View: mariadb not found'
    errors: 6
    expression: Products.map(p=>{minPrice:min(p.price)})
    normalizeExpression: Products.map(p=>{minPrice:min(p.price)})
    model:
      - name: minPrice
        type: decimal
    parameters: []
    constraints:
      entity: Products
      constraints: []
    metadata:
      name: select
      type: Sentence
      children:
        - name: Products.p
          type: From
          children: []
        - name: map
          type: Map
          children:
            - name: obj
              type: Obj
              children:
                - name: minPrice
                  type: KeyValue
                  children:
                    - name: min
                      type: FunctionRef
                      children:
                        - name: price
                          type: Field
                          children: []
                          entity: Products
                          alias: p
      fields:
        - name: minPrice
          type: decimal
      parameters: []
      entity: Products
    executions:
      - stage: mysql
        error: 'SchemaError: View: mysql not found'
      - stage: postgres
        error: 'SchemaError: View: postgres not found'
      - stage: mariadb
        error: 'SchemaError: View: mariadb not found'
  - name: groupBy 3
    sentences:
      - stage: mysql
        error: 'SchemaError: View: mysql not found'
      - stage: postgres
        error: 'SchemaError: View: postgres not found'
      - stage: mariadb
        error: 'SchemaError: View: mariadb not found'
    errors: 6
    expression: Products.map(p=>{total:sum(p.price)})
    normalizeExpression: Products.map(p=>{total:sum(p.price)})
    model:
      - name: total
        type: any
    parameters: []
    constraints:
      entity: Products
      constraints: []
    metadata:
      name: select
      type: Sentence
      children:
        - name: Products.p
          type: From
          children: []
        - name: map
          type: Map
          children:
            - name: obj
              type: Obj
              children:
                - name: total
                  type: KeyValue
                  children:
                    - name: sum
                      type: FunctionRef
                      children:
                        - name: price
                          type: Field
                          children: []
                          entity: Products
                          alias: p
      fields:
        - name: total
          type: any
      parameters: []
      entity: Products
    executions:
      - stage: mysql
        error: 'SchemaError: View: mysql not found'
      - stage: postgres
        error: 'SchemaError: View: postgres not found'
      - stage: mariadb
        error: 'SchemaError: View: mariadb not found'
  - name: groupBy 4
    sentences:
      - stage: mysql
        error: 'SchemaError: View: mysql not found'
      - stage: postgres
        error: 'SchemaError: View: postgres not found'
      - stage: mariadb
        error: 'SchemaError: View: mariadb not found'
    errors: 6
    expression: Products.map(p=>{average:avg(p.price)})
    normalizeExpression: Products.map(p=>{average:avg(p.price)})
    model:
      - name: average
        type: any
    parameters: []
    constraints:
      entity: Products
      constraints: []
    metadata:
      name: select
      type: Sentence
      children:
        - name: Products.p
          type: From
          children: []
        - name: map
          type: Map
          children:
            - name: obj
              type: Obj
              children:
                - name: average
                  type: KeyValue
                  children:
                    - name: avg
                      type: FunctionRef
                      children:
                        - name: price
                          type: Field
                          children: []
                          entity: Products
                          alias: p
      fields:
        - name: average
          type: any
      parameters: []
      entity: Products
    executions:
      - stage: mysql
        error: 'SchemaError: View: mysql not found'
      - stage: postgres
        error: 'SchemaError: View: postgres not found'
      - stage: mariadb
        error: 'SchemaError: View: mariadb not found'
  - name: groupBy 5
    sentences:
      - stage: mysql
        error: 'SchemaError: View: mysql not found'
      - stage: postgres
        error: 'SchemaError: View: postgres not found'
      - stage: mariadb
        error: 'SchemaError: View: mariadb not found'
    errors: 6
    expression: Products.map(p=>{count:count(1)})
    normalizeExpression: Products.map(p=>{count:count(1)})
    model:
      - name: count
        type: any
    parameters: []
    constraints:
      entity: Products
      constraints: []
    metadata:
      name: select
      type: Sentence
      children:
        - name: Products.p
          type: From
          children: []
        - name: map
          type: Map
          children:
            - name: obj
              type: Obj
              children:
                - name: count
                  type: KeyValue
                  children:
                    - name: count
                      type: FunctionRef
                      children:
                        - name: 1
                          type: Constant2
                          children: []
      fields:
        - name: count
          type: any
      parameters: []
      entity: Products
    executions:
      - stage: mysql
        error: 'SchemaError: View: mysql not found'
      - stage: postgres
        error: 'SchemaError: View: postgres not found'
      - stage: mariadb
        error: 'SchemaError: View: mariadb not found'
  - name: groupBy 6
    sentences:
      - stage: mysql
        error: 'SchemaError: View: mysql not found'
      - stage: postgres
        error: 'SchemaError: View: postgres not found'
      - stage: mariadb
        error: 'SchemaError: View: mariadb not found'
    errors: 6
    expression: Products.map(p=>{category:p.categoryId,largestPrice:max(p.price)})
    normalizeExpression: Products.map(p=>{category:p.categoryId,largestPrice:max(p.price)})
    model:
      - name: category
        type: integer
      - name: largestPrice
        type: decimal
    parameters: []
    constraints:
      entity: Products
      constraints: []
    metadata:
      name: select
      type: Sentence
      children:
        - name: Products.p
          type: From
          children: []
        - name: map
          type: Map
          children:
            - name: obj
              type: Obj
              children:
                - name: category
                  type: KeyValue
                  children:
                    - name: categoryId
                      type: Field
                      children: []
                      entity: Products
                      alias: p
                - name: largestPrice
                  type: KeyValue
                  children:
                    - name: max
                      type: FunctionRef
                      children:
                        - name: price
                          type: Field
                          children: []
                          entity: Products
                          alias: p
        - name: groupBy
          type: GroupBy
          children:
            - name: categoryId
              type: Field
              children: []
              entity: Products
              alias: p
      fields:
        - name: category
          type: integer
        - name: largestPrice
          type: decimal
      parameters: []
      entity: Products
    executions:
      - stage: mysql
        error: 'SchemaError: View: mysql not found'
      - stage: postgres
        error: 'SchemaError: View: postgres not found'
      - stage: mariadb
        error: 'SchemaError: View: mariadb not found'
  - name: groupBy 7
    sentences:
      - stage: mysql
        error: 'SchemaError: View: mysql not found'
      - stage: postgres
        error: 'SchemaError: View: postgres not found'
      - stage: mariadb
        error: 'SchemaError: View: mariadb not found'
    errors: 6
    expression: Products.map(p=>{category:p.category.name,largestPrice:max(p.price)})
    normalizeExpression: Products.map(p=>{category:p.category.name,largestPrice:max(p.price)})
    model:
      - name: category
        type: string
      - name: largestPrice
        type: decimal
    parameters: []
    constraints:
      entity: Products
      constraints: []
    metadata:
      name: select
      type: Sentence
      children:
        - name: Products.p
          type: From
          children: []
        - name: map
          type: Map
          children:
            - name: obj
              type: Obj
              children:
                - name: category
                  type: KeyValue
                  children:
                    - name: name
                      type: Field
                      children: []
                      entity: Categories
                      alias: c
                - name: largestPrice
                  type: KeyValue
                  children:
                    - name: max
                      type: FunctionRef
                      children:
                        - name: price
                          type: Field
                          children: []
                          entity: Products
                          alias: p
        - name: groupBy
          type: GroupBy
          children:
            - name: name
              type: Field
              children: []
              entity: Categories
              alias: c
        - name: Categories.c
          type: Join
          children:
            - name: '=='
              type: Operator
              children:
                - name: id
                  type: Field
                  children: []
                  entity: Categories
                  alias: c
                - name: categoryId
                  type: Field
                  children: []
                  entity: Products
                  alias: p
      fields:
        - name: category
          type: string
        - name: largestPrice
          type: decimal
      parameters: []
      entity: Products
    executions:
      - stage: mysql
        error: 'SchemaError: View: mysql not found'
      - stage: postgres
        error: 'SchemaError: View: postgres not found'
      - stage: mariadb
        error: 'SchemaError: View: mariadb not found'
  - name: groupBy 8
    data: a
    sentences:
      - stage: mysql
        error: 'SchemaError: View: mysql not found'
      - stage: postgres
        error: 'SchemaError: View: postgres not found'
      - stage: mariadb
        error: 'SchemaError: View: mariadb not found'
    errors: 6
    expression: >-
      Products.filter(p=>(p.id===id)).map(p=>{name:p.name,source:p.price,result:abs(p.price)})
    normalizeExpression: >-
      Products.filter(p=>(p.id===id)).map(p=>{name:p.name,source:p.price,result:abs(p.price)})
    model:
      - name: name
        type: string
      - name: source
        type: decimal
      - name: result
        type: any
    parameters:
      - name: id
        type: integer
    constraints:
      entity: Products
      constraints: []
    metadata:
      name: select
      type: Sentence
      children:
        - name: filter
          type: Filter
          children:
            - name: '==='
              type: Operator
              children:
                - name: id
                  type: Field
                  children: []
                  entity: Products
                  alias: p
                - name: id
                  type: Variable
                  children: []
                  number: 1
        - name: Products.p
          type: From
          children: []
        - name: map
          type: Map
          children:
            - name: obj
              type: Obj
              children:
                - name: name
                  type: KeyValue
                  children:
                    - name: name
                      type: Field
                      children: []
                      entity: Products
                      alias: p
                - name: source
                  type: KeyValue
                  children:
                    - name: price
                      type: Field
                      children: []
                      entity: Products
                      alias: p
                - name: result
                  type: KeyValue
                  children:
                    - name: abs
                      type: FunctionRef
                      children:
                        - name: price
                          type: Field
                          children: []
                          entity: Products
                          alias: p
      fields:
        - name: name
          type: string
        - name: source
          type: decimal
        - name: result
          type: any
      parameters:
        - name: id
          type: integer
      entity: Products
    executions:
      - stage: mysql
        error: 'SchemaError: View: mysql not found'
      - stage: postgres
        error: 'SchemaError: View: postgres not found'
      - stage: mariadb
        error: 'SchemaError: View: mariadb not found'
  - name: groupBy 9
    sentences:
      - stage: mysql
        error: 'SchemaError: View: mysql not found'
      - stage: postgres
        error: 'SchemaError: View: postgres not found'
      - stage: mariadb
        error: 'SchemaError: View: mariadb not found'
    errors: 6
    expression: >-
      Products.having(p=>(max(p.price)>100)).map(p=>{category:p.category.name,largestPrice:max(p.price)})
    normalizeExpression: >-
      Products.having(p=>(max(p.price)>100)).map(p=>{category:p.category.name,largestPrice:max(p.price)})
    model:
      - name: category
        type: string
      - name: largestPrice
        type: decimal
    parameters: []
    constraints:
      entity: Products
      constraints: []
    metadata:
      name: select
      type: Sentence
      children:
        - name: Products.p
          type: From
          children: []
        - name: map
          type: Map
          children:
            - name: obj
              type: Obj
              children:
                - name: category
                  type: KeyValue
                  children:
                    - name: name
                      type: Field
                      children: []
                      entity: Categories
                      alias: c
                - name: largestPrice
                  type: KeyValue
                  children:
                    - name: max
                      type: FunctionRef
                      children:
                        - name: price
                          type: Field
                          children: []
                          entity: Products
                          alias: p
        - name: groupBy
          type: GroupBy
          children:
            - name: name
              type: Field
              children: []
              entity: Categories
              alias: c
        - name: having
          type: Having
          children:
            - name: '>'
              type: Operator
              children:
                - name: max
                  type: FunctionRef
                  children:
                    - name: price
                      type: Field
                      children: []
                      entity: Products
                      alias: p
                - name: 100
                  type: Constant2
                  children: []
        - name: Categories.c
          type: Join
          children:
            - name: '=='
              type: Operator
              children:
                - name: id
                  type: Field
                  children: []
                  entity: Categories
                  alias: c
                - name: categoryId
                  type: Field
                  children: []
                  entity: Products
                  alias: p
      fields:
        - name: category
          type: string
        - name: largestPrice
          type: decimal
      parameters: []
      entity: Products
    executions:
      - stage: mysql
        error: 'SchemaError: View: mysql not found'
      - stage: postgres
        error: 'SchemaError: View: postgres not found'
      - stage: mariadb
        error: 'SchemaError: View: mariadb not found'
errors: 54
