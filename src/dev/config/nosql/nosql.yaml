# https://docs.oracle.com/cd/B19306_01/server.102/b14200/functions001.htm
types:
# boolean: BOOLEAN
# integer: INTEGER
# decimal: DECIMAL(10,4)
# string: VARCHAR({0})
# datetime: DATETIME
# date: DATE
# time: TIME
formats:
  # datetime: "yyyy-LL-dd HH:mm:ss"
  # date: "yyyy-LL-dd"
  # time: "HH:mm:ss"
ddl:
  createTable: "createCollection({name})"
  createIndex: "createIndex({index})"
  # dropTable: ""
  # dropIndex: ""
  # truncateTable: ""
dml:
  # map: SELECT {0}
  # distinct: distinct({0})
  # filter: WHERE {0}
  # groupBy: GROUP BY {0}
  # having: HAVING {0}
  # sort: ORDER BY {0}
  # page: LIMIT {offset},{records}
  # insert: insertOne({values})
  # update: update({values})
  # delete: DELETE FROM {name} {alias}
  # bulkInsert: insertMany([{values}])
others:
  # delimiter: '"{name}"'
  # sepatatorSql: ;
  # notNullable: NOT NULL
  # variable: ":{name}"
  # field: "{entityAlias}.{name}"
  # column: "{name}"
  # from: "FROM {name} {alias} "
  # join: "INNER JOIN {name} {alias} ON {relation}"
  # false: "FALSE"
  # true: "TRUE"
operators:
  unary:
    "-": "$multiply:[{0},-1]"
    # "~": "~ {0}"
    "!": "$not:[{0}]"
  binary:
    "+": "$add:[{0},{1}]"
    "-": "$subtract:[{0},{1}]"
    "*": "$multiply:[{0},{1}]"
    "/": "$divide:[{0},{1}]"
    "**": "$pow:[{0},{1}]"
    "//": "$sqrt:[{0},{1}]"
    "%": "$mod:[{0},{1}]"
    # http://learnmongodbthehardway.com/article/bitflipping/
    # https://jira.mongodb.org/browse/SERVER-3518
    "&": "$bit:{{0}:{and:{1}}}"
    "|": "$bit:{{0}:{or:{1}}}"
    "^": "$bit:{{0}:{xor:{1}}}"
    # '<<': ':[{0},{1}]'
    # '>>': ':[{0},{1}]'
    "==": "$eq:[{0},{1}]"
    "===": "$eq:[{0},{1}]"
    "!=": "$ne:[{0},{1}]"
    "!==": "$ne:[{0},{1}]"
    ">": "$gt:[{0},{1}]"
    "<": "$lt:[{0},{1}]"
    ">=": "$gte:[{0},{1}]"
    "<=": "$lte:[{0},{1}]"
    "&&": "$and:[{0},{1}]"
    "||": "$or:[{0},{1}]"
  ternary:
    "?": "$cond:{{0},{1},{2}}"
functions:
  general:
    as: " {alias}:{value}"
    desc: "{0}:-1"
    asc: "{0}:1"
    between: "{0}:{$gte:{1},$lt:{2}}"
    includes: " {0}:{$in:[{1}]}"
    # distinct: "DISTINCT {0} "
  numeric:
    abs: "$abs:{0}"
    acos: " $acos:{0}"
    asin: "$asin:{0}"
    atan: "$atan:{0}"
    atan2: "$atan2:{0}"
    ceil: "$ceil:{0}"
    cos: "$cos:{0}"
    cosh: "$cosh:{0}"
    exp: "$exp:{0}"
    floor: "$floor:{0}"
    ln: "$ln:{0}"
    log: "$log:{0}"
    log10: "$log10:{0}"
    # remainder: ':[{0},{1}]'
    round: "$round:[{0},{1}]"
    # sign: ':{0}'
    sin: "$sin:{0}"
    sinh: "$sinh:{0}"
    tan: "$tan:{0}"
    tanh: "$tanh:{0}"
    trunc: "$trunc:{0}"
  string:
    # chr: "CHR({0})"
    # initcap: "INITCAP({0})"
    # lower: "$toLower:{0}"
    # lpad: "LPAD({0},{1},{2})"
    # ltrim: "LTRIM({0})"
    # regExpReplace: "REGEXP_REPLACE({0},{1})"
    # regExpSubstr: "REGEXP_SUBSTR({0},{1})"
    # replace: "REPLACE({0},{1},{2})"
    # rpad: "RPAD({0},{1},{2})"
    # rtrim: "RTRIM({0})"
    # substr: "SUBSTR({0},{1},{2})"
    # trim: "TRIM({0})"
    upper: "$toUpper:{0}"
    # length: "LENGTH({0})"
  datetime:
    # curtime: "SYSTIMESTAMP"
    # today: "TRUNC(SYSDATE)"
    # now: "SYSTIMESTAMP"
    # # time: 'TIME({0})'
    # # date: 'DATE({0})'
    # # datetime: 'DATE({0})TIME({0})'
    # date: "CAST({0} AS DATE)"
    # datetime: "CAST({0} AS TIMESTAMP)"
    # time: "CAST({0} AS TIME)"
    # year: "EXTRACT(YEAR FROM {0})"
    # month: "EXTRACT(MONTH FROM {0})"
    # day: "DAY(DAY FROM {0})"
    # weekday: "TO_NUMBER(TO_CHAR({0}, 'D'))"
    # hours: "EXTRACT(HOUR FROM {0})"
    # minutes: "EXTRACT(MINUTE FROM {0})"
    # seconds: "EXTRACT(SECOND FROM {0})"
    # addYear: "{0} + interval '{1}' YEAR"
    # addMonth: "ADD_MONTHS({0},{1})"
    # addDay: "{0} + {1}"
    # addHours: "{0} + interval '{1}' HOUR"
    # addMinutes: "{0} + interval '{1}' MINUTE"
    # addSeconds: "{0} + interval '{1}' SECOND"
    # addTime: "ADDTIME({0},{1})"
    # dateDiff: "DATEDIFF({0},{1})"
    # timeDiff: "TIMEDIFF({0},{1})"
  convert:
    # toString: "CAST({0} AS VARCHAR2)"
    # # toDate: 'CAST({0} AS DATE)'
    # # toDatetime: 'CAST({0} AS TIMESTAMP)'
    # # toTime: 'CAST({0} AS TIME)'
    # toJson: "json_value({0})"
    # toNumber: "CAST({0} AS NUMBER)"
  metadata:
    user: "USER"
    source: "SYS_CONTEXT('USERENV','DB_NAME')"
  null:
    nvl: "$cond:{$ifNull:[{0}],{1},{0}}"
    nvl2: "$cond:{$ifNull:[{0}],{1},{2}}"
    isNull: "$ifNull:[{0}]"
    isNotNull: "$not:[$ifNull:[{0}]]"
  multiple:
    concat: "$concat:[{acumulated},{value}]"
  group:
    avg: "$avg:{0}"
    count: "$count:{0}"
    first: "$first:{0}"
    last: "$last:{0}"
    max: "$max:{0}"
    min: "$min:{0}"
    sum: "$sum:{0}"
