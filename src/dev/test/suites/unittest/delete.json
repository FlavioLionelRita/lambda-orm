{
  "name": "delete",
  "context": {
    "id": 1
  },
  "cases": [
    {
      "name": "normalize",
      "tests": [
        {
          "test": "Categories.delete()",
          "result": "Categories.delete().filter(p=>(p.id==id))"
        },
        {
          "test": "Categories.delete(entity)",
          "result": "Categories.delete().filter(p=>(p.id==entity.id))"
        },
        {
          "test": "Categories.delete(p => entity)",
          "result": "Categories.delete().filter(p=>(p.id==entity.id))"
        },
        {
          "test": "Categories.delete(p => p)",
          "result": "Categories.delete().filter(p=>(p.id==id))"
        },
        {
          "test": "Categories.delete().filter(p => p.id === id)",
          "result": "Categories.delete().filter(p=>(p.id==id))"
        },
        {
          "test": "Categories.delete().filter(p => p.id === entity.id)",
          "result": "Categories.delete().filter(p=>(p.id==entity.id))"
        },
        {
          "test": "Categories.deleteAll()",
          "result": "Categories.delete()"
        },
        {
          "test": "Categories.deleteAll().filter(p=> substring(p.name,1,3) === \"cat\")",
          "result": "Categories.delete().filter(p=>(substring(p.name,1,3)==cat))"
        },
        {
          "test": "Orders.details.delete().filter(p => p.orderId === id)",
          "result": "Orders.details.delete().filter(p=>(p.orderId==id))"
        },
        {
          "test": "Orders.delete().include(p => p.details)",
          "result": "Orders.delete().filter(p=>(p.id==id)).include(p=>p.details.delete().filter(p=>((p.orderId==orderId)&&(p.productId==productId))))"
        },
        {
          "test": "Orders.delete().filter(p => p.id === id).include(p => p.details)",
          "result": "Orders.delete().filter(p=>(p.id==id)).include(p=>p.details.delete().filter(p=>((p.orderId==orderId)&&(p.productId==productId))))"
        },
        {
          "test": "Orders.delete().include(p => p.details)",
          "result": "Orders.delete().filter(p=>(p.id==id)).include(p=>p.details.delete().filter(p=>((p.orderId==orderId)&&(p.productId==productId))))"
        },
        {
          "test": "Orders.details.delete(entity)",
          "result": "Orders.details.delete().filter(p=>((p.orderId==entity.orderId)&&(p.productId==entity.productId)))"
        },
        {
          "test": "Orders.delete(entity).include(p => p.details)",
          "result": "Orders.delete().filter(p=>(p.id==entity.id)).include(p=>p.details.delete().filter(p=>((p.orderId==orderId)&&(p.productId==productId))))"
        },
        {
          "test": "Orders.details.deleteAll()",
          "result": "Orders.details.delete()"
        }
      ],
      "errors": 0
    },
    {
      "name": "model",
      "tests": [
        {
          "test": "Categories.delete()",
          "result": []
        },
        {
          "test": "Categories.delete(entity)",
          "result": []
        },
        {
          "test": "Categories.delete(p => entity)",
          "result": []
        },
        {
          "test": "Categories.delete(p => p)",
          "result": []
        },
        {
          "test": "Categories.delete().filter(p => p.id === id)",
          "result": []
        },
        {
          "test": "Categories.delete().filter(p => p.id === entity.id)",
          "result": []
        },
        {
          "test": "Categories.deleteAll()",
          "result": []
        },
        {
          "test": "Categories.deleteAll().filter(p=> substring(p.name,1,3) === \"cat\")",
          "result": []
        },
        {
          "test": "Orders.details.delete().filter(p => p.orderId === id)",
          "result": []
        },
        {
          "test": "Orders.delete().include(p => p.details)",
          "result": [
            {
              "name": "details",
              "type": "Orders.details[]",
              "children": []
            }
          ]
        },
        {
          "test": "Orders.delete().filter(p => p.id === id).include(p => p.details)",
          "result": [
            {
              "name": "details",
              "type": "Orders.details[]",
              "children": []
            }
          ]
        },
        {
          "test": "Orders.delete().include(p => p.details)",
          "result": [
            {
              "name": "details",
              "type": "Orders.details[]",
              "children": []
            }
          ]
        },
        {
          "test": "Orders.details.delete(entity)",
          "result": []
        },
        {
          "test": "Orders.delete(entity).include(p => p.details)",
          "result": [
            {
              "name": "details",
              "type": "Orders.details[]",
              "children": []
            }
          ]
        },
        {
          "test": "Orders.details.deleteAll()",
          "result": []
        }
      ],
      "errors": 0
    },
    {
      "name": "parameters",
      "tests": [
        {
          "test": "Categories.delete()",
          "result": [
            {
              "name": "id",
              "type": "integer"
            }
          ]
        },
        {
          "test": "Categories.delete(entity)",
          "result": [
            {
              "name": "entity.id",
              "type": "integer"
            }
          ]
        },
        {
          "test": "Categories.delete(p => entity)",
          "result": [
            {
              "name": "entity.id",
              "type": "integer"
            }
          ]
        },
        {
          "test": "Categories.delete(p => p)",
          "result": [
            {
              "name": "id",
              "type": "integer"
            }
          ]
        },
        {
          "test": "Categories.delete().filter(p => p.id === id)",
          "result": [
            {
              "name": "id",
              "type": "integer"
            }
          ]
        },
        {
          "test": "Categories.delete().filter(p => p.id === entity.id)",
          "result": [
            {
              "name": "entity.id",
              "type": "integer"
            }
          ]
        },
        {
          "test": "Categories.deleteAll()",
          "result": []
        },
        {
          "test": "Categories.deleteAll().filter(p=> substring(p.name,1,3) === \"cat\")",
          "result": []
        },
        {
          "test": "Orders.details.delete().filter(p => p.orderId === id)",
          "result": [
            {
              "name": "id",
              "type": "integer"
            }
          ]
        },
        {
          "test": "Orders.delete().include(p => p.details)",
          "result": [
            {
              "name": "id",
              "type": "integer"
            },
            {
              "name": "details",
              "type": "Orders.details",
              "children": [
                {
                  "name": "orderId",
                  "type": "integer"
                },
                {
                  "name": "productId",
                  "type": "integer"
                }
              ]
            }
          ]
        },
        {
          "test": "Orders.delete().filter(p => p.id === id).include(p => p.details)",
          "result": [
            {
              "name": "id",
              "type": "integer"
            },
            {
              "name": "details",
              "type": "Orders.details",
              "children": [
                {
                  "name": "orderId",
                  "type": "integer"
                },
                {
                  "name": "productId",
                  "type": "integer"
                }
              ]
            }
          ]
        },
        {
          "test": "Orders.delete().include(p => p.details)",
          "result": [
            {
              "name": "id",
              "type": "integer"
            },
            {
              "name": "details",
              "type": "Orders.details",
              "children": [
                {
                  "name": "orderId",
                  "type": "integer"
                },
                {
                  "name": "productId",
                  "type": "integer"
                }
              ]
            }
          ]
        },
        {
          "test": "Orders.details.delete(entity)",
          "result": [
            {
              "name": "entity.orderId",
              "type": "integer"
            },
            {
              "name": "entity.productId",
              "type": "integer"
            }
          ]
        },
        {
          "test": "Orders.delete(entity).include(p => p.details)",
          "result": [
            {
              "name": "entity.id",
              "type": "integer"
            },
            {
              "name": "details",
              "type": "Orders.details",
              "children": [
                {
                  "name": "orderId",
                  "type": "integer"
                },
                {
                  "name": "productId",
                  "type": "integer"
                }
              ]
            }
          ]
        },
        {
          "test": "Orders.details.deleteAll()",
          "result": []
        }
      ],
      "errors": 0
    },
    {
      "name": "constraints",
      "tests": [
        {
          "test": "Categories.delete()",
          "result": {
            "entity": "Categories",
            "constraints": []
          }
        },
        {
          "test": "Categories.delete(entity)",
          "result": {
            "entity": "Categories",
            "constraints": []
          }
        },
        {
          "test": "Categories.delete(p => entity)",
          "result": {
            "entity": "Categories",
            "constraints": []
          }
        },
        {
          "test": "Categories.delete(p => p)",
          "result": {
            "entity": "Categories",
            "constraints": []
          }
        },
        {
          "test": "Categories.delete().filter(p => p.id === id)",
          "result": {
            "entity": "Categories",
            "constraints": []
          }
        },
        {
          "test": "Categories.delete().filter(p => p.id === entity.id)",
          "result": {
            "entity": "Categories",
            "constraints": []
          }
        },
        {
          "test": "Categories.deleteAll()",
          "result": {
            "entity": "Categories",
            "constraints": []
          }
        },
        {
          "test": "Categories.deleteAll().filter(p=> substring(p.name,1,3) === \"cat\")",
          "result": {
            "entity": "Categories",
            "constraints": []
          }
        },
        {
          "test": "Orders.details.delete().filter(p => p.orderId === id)",
          "result": {
            "entity": "Orders.details",
            "constraints": []
          }
        },
        {
          "test": "Orders.delete().include(p => p.details)",
          "result": {
            "entity": "Orders",
            "constraints": [],
            "children": [
              {
                "entity": "Orders.details",
                "constraints": [
                  {
                    "message": "Cannot be null property orderId in entity Orders.details",
                    "condition": "isNotNull(orderId)"
                  },
                  {
                    "message": "Cannot be null property productId in entity Orders.details",
                    "condition": "isNotNull(productId)"
                  }
                ]
              }
            ]
          }
        },
        {
          "test": "Orders.delete().filter(p => p.id === id).include(p => p.details)",
          "result": {
            "entity": "Orders",
            "constraints": [],
            "children": [
              {
                "entity": "Orders.details",
                "constraints": [
                  {
                    "message": "Cannot be null property orderId in entity Orders.details",
                    "condition": "isNotNull(orderId)"
                  },
                  {
                    "message": "Cannot be null property productId in entity Orders.details",
                    "condition": "isNotNull(productId)"
                  }
                ]
              }
            ]
          }
        },
        {
          "test": "Orders.delete().include(p => p.details)",
          "result": {
            "entity": "Orders",
            "constraints": [],
            "children": [
              {
                "entity": "Orders.details",
                "constraints": [
                  {
                    "message": "Cannot be null property orderId in entity Orders.details",
                    "condition": "isNotNull(orderId)"
                  },
                  {
                    "message": "Cannot be null property productId in entity Orders.details",
                    "condition": "isNotNull(productId)"
                  }
                ]
              }
            ]
          }
        },
        {
          "test": "Orders.details.delete(entity)",
          "result": {
            "entity": "Orders.details",
            "constraints": []
          }
        },
        {
          "test": "Orders.delete(entity).include(p => p.details)",
          "result": {
            "entity": "Orders",
            "constraints": [],
            "children": [
              {
                "entity": "Orders.details",
                "constraints": [
                  {
                    "message": "Cannot be null property orderId in entity Orders.details",
                    "condition": "isNotNull(orderId)"
                  },
                  {
                    "message": "Cannot be null property productId in entity Orders.details",
                    "condition": "isNotNull(productId)"
                  }
                ]
              }
            ]
          }
        },
        {
          "test": "Orders.details.deleteAll()",
          "result": {
            "entity": "Orders.details",
            "constraints": []
          }
        }
      ],
      "errors": 0
    },
    {
      "name": "metadata",
      "tests": [
        {
          "test": "Categories.delete()",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 18
            },
            "name": "update",
            "children": [],
            "type": "any",
            "entity": "Categories",
            "columns": [],
            "parameters": [
              {
                "name": "id",
                "type": "integer"
              }
            ],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "update",
            "alias": "c"
          }
        },
        {
          "test": "Categories.delete(entity)",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 18
            },
            "name": "update",
            "children": [],
            "type": "any",
            "entity": "Categories",
            "columns": [],
            "parameters": [
              {
                "name": "entity.id",
                "type": "integer"
              }
            ],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "update",
            "alias": "c"
          }
        },
        {
          "test": "Categories.delete(p => entity)",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 18
            },
            "name": "update",
            "children": [],
            "type": "any",
            "entity": "Categories",
            "columns": [],
            "parameters": [
              {
                "name": "entity.id",
                "type": "integer"
              }
            ],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "update",
            "alias": "c"
          }
        },
        {
          "test": "Categories.delete(p => p)",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 18
            },
            "name": "update",
            "children": [],
            "type": "any",
            "entity": "Categories",
            "columns": [],
            "parameters": [
              {
                "name": "id",
                "type": "integer"
              }
            ],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "update",
            "alias": "c"
          }
        },
        {
          "test": "Categories.delete().filter(p => p.id === id)",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 27
            },
            "name": "update",
            "children": [],
            "type": "any",
            "entity": "Categories",
            "columns": [],
            "parameters": [
              {
                "name": "id",
                "type": "integer"
              }
            ],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "update",
            "alias": "c"
          }
        },
        {
          "test": "Categories.delete().filter(p => p.id === entity.id)",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 27
            },
            "name": "update",
            "children": [],
            "type": "any",
            "entity": "Categories",
            "columns": [],
            "parameters": [
              {
                "name": "entity.id",
                "type": "integer"
              }
            ],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "update",
            "alias": "c"
          }
        },
        {
          "test": "Categories.deleteAll()",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 21
            },
            "name": "update",
            "children": [],
            "type": "any",
            "entity": "Categories",
            "columns": [],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "update",
            "alias": "c"
          }
        },
        {
          "test": "Categories.deleteAll().filter(p=> substring(p.name,1,3) === \"cat\")",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 30
            },
            "name": "update",
            "children": [],
            "type": "any",
            "entity": "Categories",
            "columns": [],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "update",
            "alias": "c"
          }
        },
        {
          "test": "Orders.details.delete().filter(p => p.orderId === id)",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 31
            },
            "name": "update",
            "children": [],
            "type": "any",
            "entity": "Orders.details",
            "columns": [],
            "parameters": [
              {
                "name": "id",
                "type": "integer"
              }
            ],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "update",
            "alias": "o"
          }
        },
        {
          "test": "Orders.delete().include(p => p.details)",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 24
            },
            "name": "update",
            "children": [
              {
                "classtype": "Sentence",
                "pos": {
                  "ln": 0,
                  "col": 29
                },
                "name": "update",
                "children": [],
                "type": "any",
                "entity": "Orders.details",
                "columns": [],
                "parameters": [
                  {
                    "name": "orderId",
                    "type": "integer"
                  },
                  {
                    "name": "productId",
                    "type": "integer"
                  }
                ],
                "constraints": [
                  {
                    "message": "Cannot be null property orderId in entity Orders.details",
                    "condition": "isNotNull(orderId)"
                  },
                  {
                    "message": "Cannot be null property productId in entity Orders.details",
                    "condition": "isNotNull(productId)"
                  }
                ],
                "values": [],
                "defaults": [],
                "clause": "update",
                "alias": "o1"
              }
            ],
            "type": "any",
            "entity": "Orders",
            "columns": [],
            "parameters": [
              {
                "name": "id",
                "type": "integer"
              }
            ],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "update",
            "alias": "o"
          }
        },
        {
          "test": "Orders.delete().filter(p => p.id === id).include(p => p.details)",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 49
            },
            "name": "update",
            "children": [
              {
                "classtype": "Sentence",
                "pos": {
                  "ln": 0,
                  "col": 54
                },
                "name": "update",
                "children": [],
                "type": "any",
                "entity": "Orders.details",
                "columns": [],
                "parameters": [
                  {
                    "name": "orderId",
                    "type": "integer"
                  },
                  {
                    "name": "productId",
                    "type": "integer"
                  }
                ],
                "constraints": [
                  {
                    "message": "Cannot be null property orderId in entity Orders.details",
                    "condition": "isNotNull(orderId)"
                  },
                  {
                    "message": "Cannot be null property productId in entity Orders.details",
                    "condition": "isNotNull(productId)"
                  }
                ],
                "values": [],
                "defaults": [],
                "clause": "update",
                "alias": "o1"
              }
            ],
            "type": "any",
            "entity": "Orders",
            "columns": [],
            "parameters": [
              {
                "name": "id",
                "type": "integer"
              }
            ],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "update",
            "alias": "o"
          }
        },
        {
          "test": "Orders.delete().include(p => p.details)",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 24
            },
            "name": "update",
            "children": [
              {
                "classtype": "Sentence",
                "pos": {
                  "ln": 0,
                  "col": 29
                },
                "name": "update",
                "children": [],
                "type": "any",
                "entity": "Orders.details",
                "columns": [],
                "parameters": [
                  {
                    "name": "orderId",
                    "type": "integer"
                  },
                  {
                    "name": "productId",
                    "type": "integer"
                  }
                ],
                "constraints": [
                  {
                    "message": "Cannot be null property orderId in entity Orders.details",
                    "condition": "isNotNull(orderId)"
                  },
                  {
                    "message": "Cannot be null property productId in entity Orders.details",
                    "condition": "isNotNull(productId)"
                  }
                ],
                "values": [],
                "defaults": [],
                "clause": "update",
                "alias": "o1"
              }
            ],
            "type": "any",
            "entity": "Orders",
            "columns": [],
            "parameters": [
              {
                "name": "id",
                "type": "integer"
              }
            ],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "update",
            "alias": "o"
          }
        },
        {
          "test": "Orders.details.delete(entity)",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 22
            },
            "name": "update",
            "children": [],
            "type": "any",
            "entity": "Orders.details",
            "columns": [],
            "parameters": [
              {
                "name": "entity.orderId",
                "type": "integer"
              },
              {
                "name": "entity.productId",
                "type": "integer"
              }
            ],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "update",
            "alias": "o"
          }
        },
        {
          "test": "Orders.delete(entity).include(p => p.details)",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 30
            },
            "name": "update",
            "children": [
              {
                "classtype": "Sentence",
                "pos": {
                  "ln": 0,
                  "col": 35
                },
                "name": "update",
                "children": [],
                "type": "any",
                "entity": "Orders.details",
                "columns": [],
                "parameters": [
                  {
                    "name": "orderId",
                    "type": "integer"
                  },
                  {
                    "name": "productId",
                    "type": "integer"
                  }
                ],
                "constraints": [
                  {
                    "message": "Cannot be null property orderId in entity Orders.details",
                    "condition": "isNotNull(orderId)"
                  },
                  {
                    "message": "Cannot be null property productId in entity Orders.details",
                    "condition": "isNotNull(productId)"
                  }
                ],
                "values": [],
                "defaults": [],
                "clause": "update",
                "alias": "o1"
              }
            ],
            "type": "any",
            "entity": "Orders",
            "columns": [],
            "parameters": [
              {
                "name": "entity.id",
                "type": "integer"
              }
            ],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "update",
            "alias": "o"
          }
        },
        {
          "test": "Orders.details.deleteAll()",
          "result": {
            "classtype": "Sentence",
            "pos": {
              "ln": 0,
              "col": 25
            },
            "name": "update",
            "children": [],
            "type": "any",
            "entity": "Orders.details",
            "columns": [],
            "parameters": [],
            "constraints": [],
            "values": [],
            "defaults": [],
            "clause": "update",
            "alias": "o"
          }
        }
      ],
      "errors": 0
    },
    {
      "name": "getInfo",
      "tests": [
        {
          "test": "Categories.delete()",
          "result": {
            "entity": "Categories",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "DELETE c FROM Categories AS c WHERE c.CategoryID = ? ",
            "children": []
          }
        },
        {
          "test": "Categories.delete(entity)",
          "result": {
            "entity": "Categories",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "DELETE c FROM Categories AS c WHERE c.CategoryID = ? ",
            "children": []
          }
        },
        {
          "test": "Categories.delete(p => entity)",
          "result": {
            "entity": "Categories",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "DELETE c FROM Categories AS c WHERE c.CategoryID = ? ",
            "children": []
          }
        },
        {
          "test": "Categories.delete(p => p)",
          "result": {
            "entity": "Categories",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "DELETE c FROM Categories AS c WHERE c.CategoryID = ? ",
            "children": []
          }
        },
        {
          "test": "Categories.delete().filter(p => p.id === id)",
          "result": {
            "entity": "Categories",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "DELETE c FROM Categories AS c WHERE c.CategoryID = ? ",
            "children": []
          }
        },
        {
          "test": "Categories.delete().filter(p => p.id === entity.id)",
          "result": {
            "entity": "Categories",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "DELETE c FROM Categories AS c WHERE c.CategoryID = ? ",
            "children": []
          }
        },
        {
          "test": "Categories.deleteAll()",
          "result": {
            "entity": "Categories",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "DELETE c FROM Categories AS c ",
            "children": []
          }
        },
        {
          "test": "Categories.deleteAll().filter(p=> substring(p.name,1,3) === \"cat\")",
          "result": {
            "entity": "Categories",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "DELETE c FROM Categories AS c WHERE SUBSTR(c.CategoryName,1,3) = 'cat' ",
            "children": []
          }
        },
        {
          "test": "Orders.details.delete().filter(p => p.orderId === id)",
          "result": {
            "entity": "Orders.details",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "DELETE o FROM `Order Details` AS o WHERE o.OrderID = ? ",
            "children": []
          }
        },
        {
          "test": "Orders.delete().include(p => p.details)",
          "result": {
            "entity": "Orders",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "DELETE o FROM Orders AS o WHERE o.OrderID = ? ",
            "children": [
              {
                "entity": "Orders.details",
                "dialect": "MySQL",
                "source": "MySQL",
                "sentence": "DELETE o1 FROM `Order Details` AS o1 WHERE (o1.OrderID = ? AND o1.ProductID = ?) ",
                "children": []
              }
            ]
          }
        },
        {
          "test": "Orders.delete().filter(p => p.id === id).include(p => p.details)",
          "result": {
            "entity": "Orders",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "DELETE o FROM Orders AS o WHERE o.OrderID = ? ",
            "children": [
              {
                "entity": "Orders.details",
                "dialect": "MySQL",
                "source": "MySQL",
                "sentence": "DELETE o1 FROM `Order Details` AS o1 WHERE (o1.OrderID = ? AND o1.ProductID = ?) ",
                "children": []
              }
            ]
          }
        },
        {
          "test": "Orders.delete().include(p => p.details)",
          "result": {
            "entity": "Orders",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "DELETE o FROM Orders AS o WHERE o.OrderID = ? ",
            "children": [
              {
                "entity": "Orders.details",
                "dialect": "MySQL",
                "source": "MySQL",
                "sentence": "DELETE o1 FROM `Order Details` AS o1 WHERE (o1.OrderID = ? AND o1.ProductID = ?) ",
                "children": []
              }
            ]
          }
        },
        {
          "test": "Orders.details.delete(entity)",
          "result": {
            "entity": "Orders.details",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "DELETE o FROM `Order Details` AS o WHERE (o.OrderID = ? AND o.ProductID = ?) ",
            "children": []
          }
        },
        {
          "test": "Orders.delete(entity).include(p => p.details)",
          "result": {
            "entity": "Orders",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "DELETE o FROM Orders AS o WHERE o.OrderID = ? ",
            "children": [
              {
                "entity": "Orders.details",
                "dialect": "MySQL",
                "source": "MySQL",
                "sentence": "DELETE o1 FROM `Order Details` AS o1 WHERE (o1.OrderID = ? AND o1.ProductID = ?) ",
                "children": []
              }
            ]
          }
        },
        {
          "test": "Orders.details.deleteAll()",
          "result": {
            "entity": "Orders.details",
            "dialect": "MySQL",
            "source": "MySQL",
            "sentence": "DELETE o FROM `Order Details` AS o ",
            "children": []
          }
        }
      ],
      "errors": 0
    }
  ],
  "errors": 0
}