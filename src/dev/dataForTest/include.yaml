name: include
data:
  a:
    id: 1
test:
  - name: include 1
    data: a
    sentences:
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.CustomerID AS "__customerId", o.CustomerID AS
            "__customerId" FROM Orders o  WHERE o.OrderID = $1 
          children:
            - entity: Customers
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT c.CustomerID AS "id", c.CompanyName AS "name",
                c.ContactName AS "contact", c.ContactTitle AS "phone", c.Address
                AS "address", c.City AS "city", c.Region AS "region",
                c.PostalCode AS "postalCode", c.Country AS "country",
                c.CustomerID AS "LambdaOrmParentId", c.CustomerID AS
                "LambdaOrmParentId" FROM Customers c  WHERE  c.CustomerID IN
                ($1) 
              children: []
    errors: 0
    expression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__customerId:p.customerId}).filter(p=>(p.id==id)).include(p=>p.customer.map(p=>{id:p.id,name:p.name,contact:p.contact,phone:p.phone,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,LambdaOrmParentId:p.id}).filter(p=>in(LambdaOrmParentId,p.id)))
    normalizeExpression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__customerId:p.customerId,__customerId:p.customerId}).filter(p=>(p.id==id)).include(p=>p.customer.map(p=>{id:p.id,name:p.name,contact:p.contact,phone:p.phone,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,LambdaOrmParentId:p.id,LambdaOrmParentId:p.id}).filter(p=>includes(LambdaOrmParentId,p.id)))
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: customer
        type: Customers
        children:
          - name: id
            type: string
          - name: name
            type: string
          - name: contact
            type: string
          - name: phone
            type: string
          - name: address
            type: string
          - name: city
            type: string
          - name: region
            type: string
          - name: postalCode
            type: string
          - name: country
            type: string
          - name: LambdaOrmParentId
            type: string
          - name: LambdaOrmParentId
            type: string
    parameters:
      - name: id
        type: integer
      - name: customer
        type: Customers
        children:
          - name: LambdaOrmParentId
            type: any
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Customers
          constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 345
      name: select
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 539
          name: select
          children: []
          type: any
          entity: Customers
          columns:
            - name: id
              type: string
            - name: name
              type: string
            - name: contact
              type: string
            - name: phone
              type: string
            - name: address
              type: string
            - name: city
              type: string
            - name: region
              type: string
            - name: postalCode
              type: string
            - name: country
              type: string
            - name: LambdaOrmParentId
              type: string
            - name: LambdaOrmParentId
              type: string
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: c
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: __customerId
          type: string
        - name: __customerId
          type: string
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: o
    executions:
      - stage: PostgreSQL
    result:
      - id: 1
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        customer:
          id: VINET
          name: Vins et alcools Chevalier
          contact: Paul Henriot
          phone: Accounting Manager
          address: 59 rue de l'Abbaye
          city: Reims
          region: null
          postalCode: '51100'
          country: France
  - name: include 2
    data: a
    sentences:
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.OrderID AS "__id", o.OrderID AS "__id" FROM Orders o 
            WHERE o.OrderID = $1 
          children:
            - entity: Orders.details
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT o1.OrderID AS "orderId", o1.ProductID AS "productId",
                o1.UnitPrice AS "unitPrice", o1.Quantity AS "quantity",
                o1.Discount AS "discount", o1.OrderID AS "LambdaOrmParentId",
                o1.OrderID AS "LambdaOrmParentId" FROM "Order Details" o1 
                WHERE  o1.OrderID IN ($1) 
              children: []
    errors: 0
    expression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__id:p.id}).filter(p=>(p.id==id)).include(p=>p.details.map(p=>{orderId:p.orderId,productId:p.productId,unitPrice:p.unitPrice,quantity:p.quantity,discount:p.discount,LambdaOrmParentId:p.orderId}).filter(p=>in(LambdaOrmParentId,p.orderId)))
    normalizeExpression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__id:p.id,__id:p.id}).filter(p=>(p.id==id)).include(p=>p.details.map(p=>{orderId:p.orderId,productId:p.productId,unitPrice:p.unitPrice,quantity:p.quantity,discount:p.discount,LambdaOrmParentId:p.orderId,LambdaOrmParentId:p.orderId}).filter(p=>includes(LambdaOrmParentId,p.orderId)))
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
          - name: LambdaOrmParentId
            type: integer
          - name: LambdaOrmParentId
            type: integer
    parameters:
      - name: id
        type: integer
      - name: details
        type: Orders.details
        children:
          - name: LambdaOrmParentId
            type: any
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Orders.details
          constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 329
      name: select
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 489
          name: select
          children: []
          type: any
          entity: Orders.details
          columns:
            - name: orderId
              type: integer
            - name: productId
              type: integer
            - name: unitPrice
              type: decimal
            - name: quantity
              type: decimal
            - name: discount
              type: decimal
            - name: LambdaOrmParentId
              type: integer
            - name: LambdaOrmParentId
              type: integer
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: o1
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: __id
          type: integer
        - name: __id
          type: integer
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: o
    executions:
      - stage: PostgreSQL
    result:
      - id: 1
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        details:
          - orderId: 1
            productId: 11
            unitPrice: 14
            quantity: 12
            discount: 0
          - orderId: 1
            productId: 42
            unitPrice: 9.8
            quantity: 10
            discount: 0
          - orderId: 1
            productId: 72
            unitPrice: 34.8
            quantity: 5
            discount: 0
  - name: include 3
    data: a
    sentences:
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.OrderID AS "__id", o.CustomerID AS "__customerId",
            o.OrderID AS "__id" FROM Orders o  WHERE o.OrderID = $1 
          children:
            - entity: Orders.details
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT o1.OrderID AS "orderId", o1.ProductID AS "productId",
                o1.UnitPrice AS "unitPrice", o1.Quantity AS "quantity",
                o1.Discount AS "discount", o1.OrderID AS "LambdaOrmParentId",
                o1.OrderID AS "LambdaOrmParentId" FROM "Order Details" o1 
                WHERE  o1.OrderID IN ($1) 
              children: []
    errors: 0
    expression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__id:p.id,__customerId:p.customerId}).filter(p=>(p.id==id)).include(p=>p.details.map(p=>{orderId:p.orderId,productId:p.productId,unitPrice:p.unitPrice,quantity:p.quantity,discount:p.discount,LambdaOrmParentId:p.orderId}).filter(p=>in(LambdaOrmParentId,p.orderId)))
    normalizeExpression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__id:p.id,__customerId:p.customerId,__id:p.id}).filter(p=>(p.id==id)).include(p=>p.details.map(p=>{orderId:p.orderId,productId:p.productId,unitPrice:p.unitPrice,quantity:p.quantity,discount:p.discount,LambdaOrmParentId:p.orderId,LambdaOrmParentId:p.orderId}).filter(p=>includes(LambdaOrmParentId,p.orderId)))
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
          - name: LambdaOrmParentId
            type: integer
          - name: LambdaOrmParentId
            type: integer
    parameters:
      - name: id
        type: integer
      - name: details
        type: Orders.details
        children:
          - name: LambdaOrmParentId
            type: any
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Orders.details
          constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 355
      name: select
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 515
          name: select
          children: []
          type: any
          entity: Orders.details
          columns:
            - name: orderId
              type: integer
            - name: productId
              type: integer
            - name: unitPrice
              type: decimal
            - name: quantity
              type: decimal
            - name: discount
              type: decimal
            - name: LambdaOrmParentId
              type: integer
            - name: LambdaOrmParentId
              type: integer
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: o1
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: __id
          type: integer
        - name: __customerId
          type: string
        - name: __id
          type: integer
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: o
    executions:
      - stage: PostgreSQL
    result:
      - id: 1
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        __customerId: VINET
        details:
          - orderId: 1
            productId: 11
            unitPrice: 14
            quantity: 12
            discount: 0
          - orderId: 1
            productId: 42
            unitPrice: 9.8
            quantity: 10
            discount: 0
          - orderId: 1
            productId: 72
            unitPrice: 34.8
            quantity: 5
            discount: 0
  - name: include 4
    data: a
    sentences:
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.OrderID AS "__id", o.CustomerID AS "__customerId",
            o.OrderID AS "__id" FROM Orders o  WHERE o.OrderID = $1 
          children:
            - entity: Orders.details
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT o1.OrderID AS "orderId", o1.ProductID AS "productId",
                o1.UnitPrice AS "unitPrice", o1.Quantity AS "quantity",
                o1.Discount AS "discount", o1.ProductID AS "__productId",
                o1.OrderID AS "LambdaOrmParentId", o1.ProductID AS
                "__productId", o1.OrderID AS "LambdaOrmParentId" FROM "Order
                Details" o1  WHERE  o1.OrderID IN ($1) 
              children:
                - entity: Products
                  dialect: PostgreSQL
                  source: PostgreSQL
                  sentence: >-
                    SELECT p.ProductID AS "id", p.ProductName AS "name",
                    p.SupplierID AS "supplierId", p.CategoryID AS "categoryId",
                    p.QuantityPerUnit AS "quantity", p.UnitPrice AS "price",
                    p.UnitsInStock AS "inStock", p.UnitsOnOrder AS "onOrder",
                    p.ReorderLevel AS "reorderLevel", p.Discontinued AS
                    "discontinued", p.ProductID AS "LambdaOrmParentId",
                    p.ProductID AS "LambdaOrmParentId" FROM Products p  WHERE 
                    p.ProductID IN ($1) 
                  children: []
    errors: 0
    expression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__id:p.id,__customerId:p.customerId}).filter(p=>(p.id==id)).include(p=>p.details.map(p=>{orderId:p.orderId,productId:p.productId,unitPrice:p.unitPrice,quantity:p.quantity,discount:p.discount,__productId:p.productId,LambdaOrmParentId:p.orderId}).filter(p=>in(LambdaOrmParentId,p.orderId)).include(q=>q.product.map(p=>{id:p.id,name:p.name,supplierId:p.supplierId,categoryId:p.categoryId,quantity:p.quantity,price:p.price,inStock:p.inStock,onOrder:p.onOrder,reorderLevel:p.reorderLevel,discontinued:p.discontinued,LambdaOrmParentId:p.id}).filter(p=>in(LambdaOrmParentId,p.id))))
    normalizeExpression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__id:p.id,__customerId:p.customerId,__id:p.id}).filter(p=>(p.id==id)).include(p=>p.details.map(p=>{orderId:p.orderId,productId:p.productId,unitPrice:p.unitPrice,quantity:p.quantity,discount:p.discount,__productId:p.productId,LambdaOrmParentId:p.orderId,__productId:p.productId,LambdaOrmParentId:p.orderId}).filter(p=>includes(LambdaOrmParentId,p.orderId)).include(q=>q.product.map(p=>{id:p.id,name:p.name,supplierId:p.supplierId,categoryId:p.categoryId,quantity:p.quantity,price:p.price,inStock:p.inStock,onOrder:p.onOrder,reorderLevel:p.reorderLevel,discontinued:p.discontinued,LambdaOrmParentId:p.id,LambdaOrmParentId:p.id}).filter(p=>includes(LambdaOrmParentId,p.id))))
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
          - name: LambdaOrmParentId
            type: integer
          - name: LambdaOrmParentId
            type: integer
          - name: product
            type: Products
            children:
              - name: id
                type: integer
              - name: name
                type: string
              - name: supplierId
                type: integer
              - name: categoryId
                type: integer
              - name: quantity
                type: string
              - name: price
                type: decimal
              - name: inStock
                type: decimal
              - name: onOrder
                type: decimal
              - name: reorderLevel
                type: decimal
              - name: discontinued
                type: boolean
              - name: LambdaOrmParentId
                type: integer
              - name: LambdaOrmParentId
                type: integer
    parameters:
      - name: id
        type: integer
      - name: details
        type: Orders.details
        children:
          - name: LambdaOrmParentId
            type: any
          - name: product
            type: Products
            children:
              - name: LambdaOrmParentId
                type: any
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Orders.details
          constraints: []
          children:
            - entity: Products
              constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 355
      name: select
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 583
          name: select
          children:
            - classtype: Sentence
              pos:
                ln: 0
                col: 830
              name: select
              children: []
              type: any
              entity: Products
              columns:
                - name: id
                  type: integer
                - name: name
                  type: string
                - name: supplierId
                  type: integer
                - name: categoryId
                  type: integer
                - name: quantity
                  type: string
                - name: price
                  type: decimal
                - name: inStock
                  type: decimal
                - name: onOrder
                  type: decimal
                - name: reorderLevel
                  type: decimal
                - name: discontinued
                  type: boolean
                - name: LambdaOrmParentId
                  type: integer
                - name: LambdaOrmParentId
                  type: integer
              parameters:
                - name: LambdaOrmParentId
                  type: any
              constraints: []
              values: []
              defaults: []
              clause: select
              alias: p
          type: any
          entity: Orders.details
          columns:
            - name: orderId
              type: integer
            - name: productId
              type: integer
            - name: unitPrice
              type: decimal
            - name: quantity
              type: decimal
            - name: discount
              type: decimal
            - name: __productId
              type: integer
            - name: LambdaOrmParentId
              type: integer
            - name: __productId
              type: integer
            - name: LambdaOrmParentId
              type: integer
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: o1
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: __id
          type: integer
        - name: __customerId
          type: string
        - name: __id
          type: integer
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: o
    executions:
      - stage: PostgreSQL
    result:
      - id: 1
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        __customerId: VINET
        details:
          - orderId: 1
            productId: 11
            unitPrice: 14
            quantity: 12
            discount: 0
            product:
              id: 11
              name: Queso Cabrales
              supplierId: 5
              categoryId: 4
              quantity: 1 kg pkg.
              price: 21
              inStock: 22
              onOrder: 30
              reorderLevel: 30
              discontinued: false
          - orderId: 1
            productId: 42
            unitPrice: 9.8
            quantity: 10
            discount: 0
            product:
              id: 42
              name: Singaporean Hokkien Fried Mee
              supplierId: 20
              categoryId: 5
              quantity: 32 - 1 kg pkgs.
              price: 14
              inStock: 26
              onOrder: 0
              reorderLevel: 0
              discontinued: true
          - orderId: 1
            productId: 72
            unitPrice: 34.8
            quantity: 5
            discount: 0
            product:
              id: 72
              name: Mozzarella di Giovanni
              supplierId: 14
              categoryId: 4
              quantity: 24 - 200 g pkgs.
              price: 34.8
              inStock: 14
              onOrder: 0
              reorderLevel: 0
              discontinued: false
  - name: include 5
    data: a
    sentences:
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.OrderID AS "__id", o.CustomerID AS "__customerId",
            o.OrderID AS "__id" FROM Orders o  WHERE o.OrderID = $1 
          children:
            - entity: Orders.details
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT o1.OrderID AS "orderId", o1.ProductID AS "productId",
                o1.UnitPrice AS "unitPrice", o1.Quantity AS "quantity",
                o1.Discount AS "discount", o1.ProductID AS "__productId",
                o1.OrderID AS "LambdaOrmParentId", o1.ProductID AS
                "__productId", o1.OrderID AS "LambdaOrmParentId" FROM "Order
                Details" o1  WHERE  o1.OrderID IN ($1) 
              children:
                - entity: Products
                  dialect: PostgreSQL
                  source: PostgreSQL
                  sentence: >-
                    SELECT p.ProductID AS "id", p.ProductName AS "name",
                    p.SupplierID AS "supplierId", p.CategoryID AS "categoryId",
                    p.QuantityPerUnit AS "quantity", p.UnitPrice AS "price",
                    p.UnitsInStock AS "inStock", p.UnitsOnOrder AS "onOrder",
                    p.ReorderLevel AS "reorderLevel", p.Discontinued AS
                    "discontinued", p.CategoryID AS "__categoryId", p.ProductID
                    AS "LambdaOrmParentId", p.CategoryID AS "__categoryId",
                    p.ProductID AS "LambdaOrmParentId" FROM Products p  WHERE 
                    p.ProductID IN ($1) 
                  children:
                    - entity: Categories
                      dialect: PostgreSQL
                      source: PostgreSQL
                      sentence: >-
                        SELECT c.CategoryID AS "id", c.CategoryName AS "name",
                        c.Description AS "description", c.CategoryID AS
                        "LambdaOrmParentId", c.CategoryID AS "LambdaOrmParentId"
                        FROM Categories c  WHERE  c.CategoryID IN ($1) 
                      children: []
    errors: 0
    expression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__id:p.id,__customerId:p.customerId}).filter(p=>(p.id==id)).include(p=>p.details.map(p=>{orderId:p.orderId,productId:p.productId,unitPrice:p.unitPrice,quantity:p.quantity,discount:p.discount,__productId:p.productId,LambdaOrmParentId:p.orderId}).filter(p=>in(LambdaOrmParentId,p.orderId)).include(q=>q.product.map(p=>{id:p.id,name:p.name,supplierId:p.supplierId,categoryId:p.categoryId,quantity:p.quantity,price:p.price,inStock:p.inStock,onOrder:p.onOrder,reorderLevel:p.reorderLevel,discontinued:p.discontinued,__categoryId:p.categoryId,LambdaOrmParentId:p.id}).filter(p=>in(LambdaOrmParentId,p.id)).include(p=>p.category.map(p=>{id:p.id,name:p.name,description:p.description,LambdaOrmParentId:p.id}).filter(p=>in(LambdaOrmParentId,p.id)))))
    normalizeExpression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__id:p.id,__customerId:p.customerId,__id:p.id}).filter(p=>(p.id==id)).include(p=>p.details.map(p=>{orderId:p.orderId,productId:p.productId,unitPrice:p.unitPrice,quantity:p.quantity,discount:p.discount,__productId:p.productId,LambdaOrmParentId:p.orderId,__productId:p.productId,LambdaOrmParentId:p.orderId}).filter(p=>includes(LambdaOrmParentId,p.orderId)).include(q=>q.product.map(p=>{id:p.id,name:p.name,supplierId:p.supplierId,categoryId:p.categoryId,quantity:p.quantity,price:p.price,inStock:p.inStock,onOrder:p.onOrder,reorderLevel:p.reorderLevel,discontinued:p.discontinued,__categoryId:p.categoryId,LambdaOrmParentId:p.id,__categoryId:p.categoryId,LambdaOrmParentId:p.id}).filter(p=>includes(LambdaOrmParentId,p.id)).include(p=>p.category.map(p=>{id:p.id,name:p.name,description:p.description,LambdaOrmParentId:p.id,LambdaOrmParentId:p.id}).filter(p=>includes(LambdaOrmParentId,p.id)))))
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: orderId
            type: integer
          - name: productId
            type: integer
          - name: unitPrice
            type: decimal
          - name: quantity
            type: decimal
          - name: discount
            type: decimal
          - name: LambdaOrmParentId
            type: integer
          - name: LambdaOrmParentId
            type: integer
          - name: product
            type: Products
            children:
              - name: id
                type: integer
              - name: name
                type: string
              - name: supplierId
                type: integer
              - name: categoryId
                type: integer
              - name: quantity
                type: string
              - name: price
                type: decimal
              - name: inStock
                type: decimal
              - name: onOrder
                type: decimal
              - name: reorderLevel
                type: decimal
              - name: discontinued
                type: boolean
              - name: LambdaOrmParentId
                type: integer
              - name: LambdaOrmParentId
                type: integer
              - name: category
                type: Categories
                children:
                  - name: id
                    type: integer
                  - name: name
                    type: string
                  - name: description
                    type: string
                  - name: LambdaOrmParentId
                    type: integer
                  - name: LambdaOrmParentId
                    type: integer
    parameters:
      - name: id
        type: integer
      - name: details
        type: Orders.details
        children:
          - name: LambdaOrmParentId
            type: any
          - name: product
            type: Products
            children:
              - name: LambdaOrmParentId
                type: any
              - name: category
                type: Categories
                children:
                  - name: LambdaOrmParentId
                    type: any
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Orders.details
          constraints: []
          children:
            - entity: Products
              constraints: []
              children:
                - entity: Categories
                  constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 355
      name: select
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 583
          name: select
          children:
            - classtype: Sentence
              pos:
                ln: 0
                col: 895
              name: select
              children:
                - classtype: Sentence
                  pos:
                    ln: 0
                    col: 995
                  name: select
                  children: []
                  type: any
                  entity: Categories
                  columns:
                    - name: id
                      type: integer
                    - name: name
                      type: string
                    - name: description
                      type: string
                    - name: LambdaOrmParentId
                      type: integer
                    - name: LambdaOrmParentId
                      type: integer
                  parameters:
                    - name: LambdaOrmParentId
                      type: any
                  constraints: []
                  values: []
                  defaults: []
                  clause: select
                  alias: c
              type: any
              entity: Products
              columns:
                - name: id
                  type: integer
                - name: name
                  type: string
                - name: supplierId
                  type: integer
                - name: categoryId
                  type: integer
                - name: quantity
                  type: string
                - name: price
                  type: decimal
                - name: inStock
                  type: decimal
                - name: onOrder
                  type: decimal
                - name: reorderLevel
                  type: decimal
                - name: discontinued
                  type: boolean
                - name: __categoryId
                  type: integer
                - name: LambdaOrmParentId
                  type: integer
                - name: __categoryId
                  type: integer
                - name: LambdaOrmParentId
                  type: integer
              parameters:
                - name: LambdaOrmParentId
                  type: any
              constraints: []
              values: []
              defaults: []
              clause: select
              alias: p
          type: any
          entity: Orders.details
          columns:
            - name: orderId
              type: integer
            - name: productId
              type: integer
            - name: unitPrice
              type: decimal
            - name: quantity
              type: decimal
            - name: discount
              type: decimal
            - name: __productId
              type: integer
            - name: LambdaOrmParentId
              type: integer
            - name: __productId
              type: integer
            - name: LambdaOrmParentId
              type: integer
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: o1
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: __id
          type: integer
        - name: __customerId
          type: string
        - name: __id
          type: integer
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: o
    executions:
      - stage: PostgreSQL
    result:
      - id: 1
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        __customerId: VINET
        details:
          - orderId: 1
            productId: 11
            unitPrice: 14
            quantity: 12
            discount: 0
            product:
              id: 11
              name: Queso Cabrales
              supplierId: 5
              categoryId: 4
              quantity: 1 kg pkg.
              price: 21
              inStock: 22
              onOrder: 30
              reorderLevel: 30
              discontinued: false
              category:
                id: 4
                name: Dairy Products
                description: Cheeses
          - orderId: 1
            productId: 42
            unitPrice: 9.8
            quantity: 10
            discount: 0
            product:
              id: 42
              name: Singaporean Hokkien Fried Mee
              supplierId: 20
              categoryId: 5
              quantity: 32 - 1 kg pkgs.
              price: 14
              inStock: 26
              onOrder: 0
              reorderLevel: 0
              discontinued: true
              category:
                id: 5
                name: Grains/Cereals
                description: Breads, crackers, pasta, and cereal
          - orderId: 1
            productId: 72
            unitPrice: 34.8
            quantity: 5
            discount: 0
            product:
              id: 72
              name: Mozzarella di Giovanni
              supplierId: 14
              categoryId: 4
              quantity: 24 - 200 g pkgs.
              price: 34.8
              inStock: 14
              onOrder: 0
              reorderLevel: 0
              discontinued: false
              category:
                id: 4
                name: Dairy Products
                description: Cheeses
  - name: include 6
    data: a
    sentences:
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.OrderID AS "__id", o.CustomerID AS "__customerId",
            o.OrderID AS "__id" FROM Orders o  WHERE o.OrderID = $1 
          children:
            - entity: Orders.details
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT o1.Quantity AS "quantity", o1.UnitPrice AS "unitPrice",
                o1.ProductID AS "productId", o1.OrderID AS "LambdaOrmParentId",
                o1.OrderID AS "LambdaOrmParentId" FROM "Order Details" o1 
                WHERE  o1.OrderID IN ($1) 
              children: []
    errors: 0
    expression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__id:p.id,__customerId:p.customerId}).filter(p=>(p.id==id)).include(p=>p.details.map(p=>{quantity:p.quantity,unitPrice:p.unitPrice,productId:p.productId,LambdaOrmParentId:p.orderId}).filter(p=>in(LambdaOrmParentId,p.orderId)))
    normalizeExpression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__id:p.id,__customerId:p.customerId,__id:p.id}).filter(p=>(p.id==id)).include(p=>p.details.map(p=>{quantity:p.quantity,unitPrice:p.unitPrice,productId:p.productId,LambdaOrmParentId:p.orderId,LambdaOrmParentId:p.orderId}).filter(p=>includes(LambdaOrmParentId,p.orderId)))
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: quantity
            type: decimal
          - name: unitPrice
            type: decimal
          - name: productId
            type: integer
          - name: LambdaOrmParentId
            type: integer
          - name: LambdaOrmParentId
            type: integer
    parameters:
      - name: id
        type: integer
      - name: details
        type: Orders.details
        children:
          - name: LambdaOrmParentId
            type: any
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Orders.details
          constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 355
      name: select
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 477
          name: select
          children: []
          type: any
          entity: Orders.details
          columns:
            - name: quantity
              type: decimal
            - name: unitPrice
              type: decimal
            - name: productId
              type: integer
            - name: LambdaOrmParentId
              type: integer
            - name: LambdaOrmParentId
              type: integer
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: o1
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: __id
          type: integer
        - name: __customerId
          type: string
        - name: __id
          type: integer
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: o
    executions:
      - stage: PostgreSQL
    result:
      - id: 1
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        __customerId: VINET
        details:
          - quantity: 12
            unitPrice: 14
            productId: 11
          - quantity: 10
            unitPrice: 9.8
            productId: 42
          - quantity: 5
            unitPrice: 34.8
            productId: 72
  - name: include 7
    data: a
    sentences:
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.OrderID AS "__id", o.CustomerID AS "__customerId",
            o.OrderID AS "__id" FROM Orders o  WHERE o.OrderID = $1 
          children:
            - entity: Orders.details
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT o1.Quantity AS "quantity", o1.UnitPrice AS "unitPrice",
                o1.ProductID AS "productId", o1.ProductID AS "__productId",
                o1.OrderID AS "LambdaOrmParentId", o1.ProductID AS
                "__productId", o1.OrderID AS "LambdaOrmParentId" FROM "Order
                Details" o1  WHERE  o1.OrderID IN ($1) 
              children:
                - entity: Products
                  dialect: PostgreSQL
                  source: PostgreSQL
                  sentence: >-
                    SELECT p.ProductID AS "id", p.ProductName AS "name",
                    p.SupplierID AS "supplierId", p.CategoryID AS "categoryId",
                    p.QuantityPerUnit AS "quantity", p.UnitPrice AS "price",
                    p.UnitsInStock AS "inStock", p.UnitsOnOrder AS "onOrder",
                    p.ReorderLevel AS "reorderLevel", p.Discontinued AS
                    "discontinued", p.ProductID AS "LambdaOrmParentId",
                    p.ProductID AS "LambdaOrmParentId" FROM Products p  WHERE 
                    p.ProductID IN ($1) 
                  children: []
    errors: 0
    expression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__id:p.id,__customerId:p.customerId}).filter(p=>(p.id==id)).include(p=>p.details.map(p=>{quantity:p.quantity,unitPrice:p.unitPrice,productId:p.productId,__productId:p.productId,LambdaOrmParentId:p.orderId}).filter(p=>in(LambdaOrmParentId,p.orderId)).include(q=>q.product.map(p=>{id:p.id,name:p.name,supplierId:p.supplierId,categoryId:p.categoryId,quantity:p.quantity,price:p.price,inStock:p.inStock,onOrder:p.onOrder,reorderLevel:p.reorderLevel,discontinued:p.discontinued,LambdaOrmParentId:p.id}).filter(p=>in(LambdaOrmParentId,p.id))))
    normalizeExpression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__id:p.id,__customerId:p.customerId,__id:p.id}).filter(p=>(p.id==id)).include(p=>p.details.map(p=>{quantity:p.quantity,unitPrice:p.unitPrice,productId:p.productId,__productId:p.productId,LambdaOrmParentId:p.orderId,__productId:p.productId,LambdaOrmParentId:p.orderId}).filter(p=>includes(LambdaOrmParentId,p.orderId)).include(q=>q.product.map(p=>{id:p.id,name:p.name,supplierId:p.supplierId,categoryId:p.categoryId,quantity:p.quantity,price:p.price,inStock:p.inStock,onOrder:p.onOrder,reorderLevel:p.reorderLevel,discontinued:p.discontinued,LambdaOrmParentId:p.id,LambdaOrmParentId:p.id}).filter(p=>includes(LambdaOrmParentId,p.id))))
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: details
        type: Orders.details[]
        children:
          - name: quantity
            type: decimal
          - name: unitPrice
            type: decimal
          - name: productId
            type: integer
          - name: LambdaOrmParentId
            type: integer
          - name: LambdaOrmParentId
            type: integer
          - name: product
            type: Products
            children:
              - name: id
                type: integer
              - name: name
                type: string
              - name: supplierId
                type: integer
              - name: categoryId
                type: integer
              - name: quantity
                type: string
              - name: price
                type: decimal
              - name: inStock
                type: decimal
              - name: onOrder
                type: decimal
              - name: reorderLevel
                type: decimal
              - name: discontinued
                type: boolean
              - name: LambdaOrmParentId
                type: integer
              - name: LambdaOrmParentId
                type: integer
    parameters:
      - name: id
        type: integer
      - name: details
        type: Orders.details
        children:
          - name: LambdaOrmParentId
            type: any
          - name: product
            type: Products
            children:
              - name: LambdaOrmParentId
                type: any
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Orders.details
          constraints: []
          children:
            - entity: Products
              constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 355
      name: select
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 545
          name: select
          children:
            - classtype: Sentence
              pos:
                ln: 0
                col: 792
              name: select
              children: []
              type: any
              entity: Products
              columns:
                - name: id
                  type: integer
                - name: name
                  type: string
                - name: supplierId
                  type: integer
                - name: categoryId
                  type: integer
                - name: quantity
                  type: string
                - name: price
                  type: decimal
                - name: inStock
                  type: decimal
                - name: onOrder
                  type: decimal
                - name: reorderLevel
                  type: decimal
                - name: discontinued
                  type: boolean
                - name: LambdaOrmParentId
                  type: integer
                - name: LambdaOrmParentId
                  type: integer
              parameters:
                - name: LambdaOrmParentId
                  type: any
              constraints: []
              values: []
              defaults: []
              clause: select
              alias: p
          type: any
          entity: Orders.details
          columns:
            - name: quantity
              type: decimal
            - name: unitPrice
              type: decimal
            - name: productId
              type: integer
            - name: __productId
              type: integer
            - name: LambdaOrmParentId
              type: integer
            - name: __productId
              type: integer
            - name: LambdaOrmParentId
              type: integer
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: o1
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: __id
          type: integer
        - name: __customerId
          type: string
        - name: __id
          type: integer
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: o
    executions:
      - stage: PostgreSQL
    result:
      - id: 1
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        __customerId: VINET
        details:
          - quantity: 12
            unitPrice: 14
            productId: 11
            product:
              id: 11
              name: Queso Cabrales
              supplierId: 5
              categoryId: 4
              quantity: 1 kg pkg.
              price: 21
              inStock: 22
              onOrder: 30
              reorderLevel: 30
              discontinued: false
          - quantity: 10
            unitPrice: 9.8
            productId: 42
            product:
              id: 42
              name: Singaporean Hokkien Fried Mee
              supplierId: 20
              categoryId: 5
              quantity: 32 - 1 kg pkgs.
              price: 14
              inStock: 26
              onOrder: 0
              reorderLevel: 0
              discontinued: true
          - quantity: 5
            unitPrice: 34.8
            productId: 72
            product:
              id: 72
              name: Mozzarella di Giovanni
              supplierId: 14
              categoryId: 4
              quantity: 24 - 200 g pkgs.
              price: 34.8
              inStock: 14
              onOrder: 0
              reorderLevel: 0
              discontinued: false
  - name: include 8
    data: a
    sentences:
      - stage: PostgreSQL
        info:
          entity: Orders
          dialect: PostgreSQL
          source: PostgreSQL
          sentence: >-
            SELECT o.OrderID AS "id", o.CustomerID AS "customerId", o.EmployeeID
            AS "employeeId", o.OrderDate AS "orderDate", o.RequiredDate AS
            "requiredDate", o.ShippedDate AS "shippedDate", o.ShipVia AS
            "shipViaId", o.Freight AS "freight", o.ShipName AS "name",
            o.ShipAddress AS "address", o.ShipCity AS "city", o.ShipRegion AS
            "region", o.ShipPostalCode AS "postalCode", o.ShipCountry AS
            "country", o.CustomerID AS "__customerId", o.OrderID AS "__id",
            o.CustomerID AS "__customerId" FROM Orders o  WHERE o.OrderID = $1 
          children:
            - entity: Customers
              dialect: PostgreSQL
              source: PostgreSQL
              sentence: >-
                SELECT c.CompanyName AS "name", c.CustomerID AS
                "LambdaOrmParentId", c.CustomerID AS "LambdaOrmParentId" FROM
                Customers c  WHERE  c.CustomerID IN ($1) 
              children: []
    errors: 0
    expression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__customerId:p.customerId,__id:p.id}).filter(p=>(p.id==id)).include(p=>p.customer.map(p=>{name:p.name,LambdaOrmParentId:p.id}).filter(p=>in(LambdaOrmParentId,p.id)))
    normalizeExpression: >-
      Orders.map(p=>{id:p.id,customerId:p.customerId,employeeId:p.employeeId,orderDate:p.orderDate,requiredDate:p.requiredDate,shippedDate:p.shippedDate,shipViaId:p.shipViaId,freight:p.freight,name:p.name,address:p.address,city:p.city,region:p.region,postalCode:p.postalCode,country:p.country,__customerId:p.customerId,__id:p.id,__customerId:p.customerId}).filter(p=>(p.id==id)).include(p=>p.customer.map(p=>{name:p.name,LambdaOrmParentId:p.id,LambdaOrmParentId:p.id}).filter(p=>includes(LambdaOrmParentId,p.id)))
    model:
      - name: id
        type: integer
      - name: customerId
        type: string
      - name: employeeId
        type: integer
      - name: orderDate
        type: dateTime
      - name: requiredDate
        type: date
      - name: shippedDate
        type: date
      - name: shipViaId
        type: integer
      - name: freight
        type: decimal
      - name: name
        type: string
      - name: address
        type: string
      - name: city
        type: string
      - name: region
        type: string
      - name: postalCode
        type: string
      - name: country
        type: string
      - name: customer
        type: Customers
        children:
          - name: name
            type: string
          - name: LambdaOrmParentId
            type: string
          - name: LambdaOrmParentId
            type: string
    parameters:
      - name: id
        type: integer
      - name: customer
        type: Customers
        children:
          - name: LambdaOrmParentId
            type: any
    constraints:
      entity: Orders
      constraints: []
      children:
        - entity: Customers
          constraints: []
    metadata:
      classtype: Sentence
      pos:
        ln: 0
        col: 355
      name: select
      children:
        - classtype: Sentence
          pos:
            ln: 0
            col: 421
          name: select
          children: []
          type: any
          entity: Customers
          columns:
            - name: name
              type: string
            - name: LambdaOrmParentId
              type: string
            - name: LambdaOrmParentId
              type: string
          parameters:
            - name: LambdaOrmParentId
              type: any
          constraints: []
          values: []
          defaults: []
          clause: select
          alias: c
      type: any
      entity: Orders
      columns:
        - name: id
          type: integer
        - name: customerId
          type: string
        - name: employeeId
          type: integer
        - name: orderDate
          type: dateTime
        - name: requiredDate
          type: date
        - name: shippedDate
          type: date
        - name: shipViaId
          type: integer
        - name: freight
          type: decimal
        - name: name
          type: string
        - name: address
          type: string
        - name: city
          type: string
        - name: region
          type: string
        - name: postalCode
          type: string
        - name: country
          type: string
        - name: __customerId
          type: string
        - name: __id
          type: integer
        - name: __customerId
          type: string
      parameters:
        - name: id
          type: integer
      constraints: []
      values: []
      defaults: []
      clause: select
      alias: o
    executions:
      - stage: PostgreSQL
    result:
      - id: 1
        customerId: VINET
        employeeId: 5
        orderDate: '1996-07-03T22:00:00.000Z'
        requiredDate: '1996-07-31T22:00:00.000Z'
        shippedDate: '1996-07-15T22:00:00.000Z'
        shipViaId: 3
        freight: 32.38
        name: Vins et alcools Chevalier
        address: 59 rue de l-Abbaye
        city: Reims
        region: null
        postalCode: '51100'
        country: France
        __id: 1
        customer:
          name: Vins et alcools Chevalier
errors: 0
